{"version":3,"sources":["../node_modules/matter-js/src/core sync","server.tsx","util.ts","variables.tsx","controlpanel.tsx","functionplot.tsx","renderauraproj.js","utilsim.tsx","serviceWorker.ts","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","MouseMode","createBounds","p1","p2","min","x","Math","y","max","boundsOverlap","b1","b2","distanceSq","dx","dy","pointInBounds","p","b","includeEdges","pointNearBounds","r","evaluateUtilFunction","func","boundary","constants","globalVars","evalFunc","utilVar","vars","C_m","desc","defaultValue","C_c","C_u","C_d","C_i","sigma","type","N","t","lambda","delta","alpha","beta","n","Variables","props","Table","hover","striped","size","Object","utilConstants","map","v","i","key","Node","html","tagName","onChange","onUtilConstantUpdated","parseFloat","target","value","trim","utilGlobalVars","toFixed","boundaries","length","title","j","ControlPanel","popover","position","top","right","zIndex","cover","bottom","left","serverUtilValues","serverUtilFunc","utilFuncs","utilValues","forEach","evaluateServerUtilFunction","utilServer","utilFunctions","globalUtilValue","reduce","a","Tabs","Tab","eventKey","InputGroup","className","Prepend","Text","inline","expression","FormControl","placeholder","aria-label","currentTarget","onUtilFunctionUpdated","Append","Dropdown","Toggle","variant","style","borderRadius","Menu","Header","Item","onSelect","onUtilVarUpdated","Divider","Button","onClick","onChangeColorClicked","backgroundColor","color","icon","showColorPicker","colorIndex","undefined","disableAlpha","onColorUpdated","onUtilFunctionDeleted","onUtilFunctionAdded","onServerUtilFunctionUpdated","bounds","FunctionPlot","updateCurves","memoize","funcs","stepSize","state","xRange","datasets","Array","dataset","label","fill","showLine","pointRadius","pointHitRadius","borderColor","borderWidth","data","push","updatePoints","pointStyle","yRange","curves","this","concat","options","maintainAspectRatio","animation","duration","React","RenderAuraProj","defaults","controller","engine","element","canvas","mouse","frameRequestId","width","height","pixelRatio","background","wireframeBackground","gridSize","hasBounds","enabled","wireframes","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","showGrid","crosshairSnap","render","Common","extend","_createCanvas","context","getContext","textures","setPixelRatio","isElement","appendChild","parentNode","log","loop","time","_requestAnimationFrame","call","window","world","_cancelAnimationFrame","_getPixelRatio","setAttribute","objects","padding","center","isArray","Infinity","object","viewHeight","outerRatio","innerRatio","scaleX","scaleY","Mouse","setScale","setOffset","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","setTransform","translate","canvasWidth","canvasHeight","scale","xOriginOffset","yOriginOffset","xGridOffset","_mod","yGridOffset","lineWidth","setLineDash","strokeStyle","fillStyle","drawXGridLine","_roundDrawCoord","beginPath","moveTo","lineTo","stroke","fillText","drawYGridLine","xLabel","floor","yLabel","_almostEqual","save","restore","crosshairX","crosshairY","round","drawX","drawY","allBodies","Composite","allConstraints","bodies","constraints","event","timestamp","timing","Events","trigger","currentBackground","_applyBackground","globalCompositeOperation","fillRect","drawGrid","body","Bounds","overlaps","constraint","bodyA","bodyB","pointAWorld","pointA","pointBWorld","pointB","Vector","add","contains","startViewTransform","enableSleeping","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","pairs","list","collisions","vertexNumbers","mousePosition","broadphase","Grid","grid","debug","endViewTransform","showCrosshair","drawCrosshair","c","metrics","debugTimestamp","text","fps","extended","correction","buckets","broadEff","midEff","narrowEff","debugString","font","split","visible","start","end","arc","PI","closePath","offset","sub","normal","perp","normalise","coils","ceil","clamp","anchors","circleRadius","vertices","distanceX","distanceY","distance","abs","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","part","k","parts","sprite","texture","_getTexture","rotate","angle","drawImage","xOffset","xScale","yOffset","yScale","isInternal","isSleeping","_colorLuminance","globalAlpha","rect","axes","axis","positionPrev","pair","collision","isActive","activeContacts","vertex","normalPosX","normalPosY","supports","isStatic","penetration","bucketKeys","bucketId","region","parseInt","bucketWidth","bucketHeight","inspector","selected","item","point","selectStart","selectBounds","document","createElement","oncontextmenu","onselectstart","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","imagePath","image","Image","src","cssBackground","test","backgroundSize","hex","lum","String","replace","rgb","substr","toString","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","now","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","ResizeMode","Server","matterEngine","matterMouse","matterMouseConstraint","matterRender","matterRunner","matterWorld","componentDidMount","canvasRef","current","ctx","offsetWidth","offsetHeight","Matter","World","create","gravity","Engine","MouseConstraint","stiffness","Bodies","circle","restitution","Runner","isFixed","on","onBodyDragStart","onBodyDragEnd","onBeforeUpdate","onEngineBeforeUpdate","onEngineAfterUpdate","onBeforeRender","onBeforeObjects","run","console","mouseMode","OBJECT","collisionFilter","mask","snapToGrid","source","mousePos","getMousePos","mousePosUnsnapped","topLeft","worldToCanvas","bottomRight","extents","mouseInBounds","isClickedBoundary","clickedBoundary","BOUNDARY_EDIT","resizeMode","NONE","mouseDownPos","resizeBoundaries","SNOOKER","snookerBody","bodyPos","setState","draggingBody","checkResizeMode","bUnder","bNear","CROSS_SPLIT","HORIZONTAL_SPLIT","VERTICAL_SPLIT","mousePosCanvas","boundsCanvas","leftDist","rightDist","topDist","bottomDist","TOP_LEFT_CORNER","TOP_RIGHT_CORNER","BOTTOM_RIGHT_CORNER","BOTTOM_LEFT_CORNER","LEFT_EDGE","RIGHT_EDGE","TOP_EDGE","BOTTOM_EDGE","updateCanvasCursorStyle","cursor","onMouseDown","mouseButton","button","mouseDownPosCanvas","bodyAtPosition","boundaryUnderMouse","boundariesNearMouse","clickedOldBounds","assign","onMouseUp","click","onObjectAdded","onObjectDeleted","remove","force","mult","mass","Body","applyForce","onBoundaryDeleted","onBoundaryAdded","resizingMultiple","onMouseMove","onBoundariesUpdated","resizeInfo","newBounds","minIndex","dist","dists","newBounds1","newBounds2","mouseDelta","onMouseOver","onMouseOut","onWheel","zoomFactor","deltaY","spawnRandomObjects","count","random","clearAllObjects","clear","showAllObjects","lookAt","resetView","halfExtent","neg","find","filter","bHalfWidth","bHalfHeight","bCenter","pow","circleOverlapBounds","MOUSE_BOUNDS_THRESHOLD","Query","forceUnsnapped","dragStartPos","dragLastPos","ref","whyDidYouRender","colors","UtilSim","serverRef","lastFrameTime","frameTimeHistory","performance","shift","avgFrameTime","slice","totalObjects","numObjects","numNearBoundary","numActive","splice","timeSinceBoundaryMoved","lastBoundaryMoveTime","validateResize","notBeingUpdated","some","every","info","checkList","validateBoundary","boundaryToIgnore","index","findIndex","validate","oldBounds","evaluatex","E","pi","cloneDeep","onRandomClicked","onClearClicked","onHomeClicked","onShowAllObjectsClicked","defaultConstantValues","Navbar","bg","Brand","href","Container","fluid","Row","Col","ButtonToolbar","ButtonGroup","active","Boolean","location","hostname","match","library","faBorderAll","faBowlingBall","faChartLine","faCube","faDice","faEye","faHome","faMagnet","faPlus","faPalette","faRadiation","faTh","faThLarge","faTrash","faVectorSquare","ReactDOM","Context","input","asciimath2jax","useMathMLspacing","preview","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.037a6d81.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 349;","///<reference path=\"./types/types.d.ts\" />\r\n\r\nimport * as React from 'react'\r\nimport Matter from 'matter-js'\r\nimport { circleOverlapBounds, createBounds, distanceSq, pointInBounds } from './util'\r\nimport { random } from 'lodash'\r\n\r\n// Custom renderer\r\nimport { RenderAuraProj } from './renderauraproj'\r\n\r\nexport enum MouseMode {\r\n\tOBJECT,\r\n\tBOUNDARY_EDIT,\r\n\tSNOOKER\r\n}\r\n\r\nconst MOUSE_BOUNDS_THRESHOLD = 10\r\n\r\nenum ResizeMode {\r\n\tNONE,\r\n\tLEFT_EDGE,\r\n\tRIGHT_EDGE,\r\n\tTOP_EDGE,\r\n\tBOTTOM_EDGE,\r\n\tTOP_LEFT_CORNER,\r\n\tTOP_RIGHT_CORNER,\r\n\tBOTTOM_RIGHT_CORNER,\r\n\tBOTTOM_LEFT_CORNER,\r\n\tHORIZONTAL_SPLIT,\r\n\tVERTICAL_SPLIT,\r\n\tCROSS_SPLIT\r\n}\r\n\r\ninterface ServerProps {\r\n\tboundaries: Array<Boundary>,\r\n\tmouseMode: MouseMode,\r\n\tsnapToGrid: boolean,\r\n\tgridSize: number,\r\n\r\n\tonEngineBeforeUpdate?: (event: Matter.IEventTimestamped<Matter.Engine>) => void,\r\n\tonEngineAfterUpdate?: (event: Matter.IEventTimestamped<Matter.Engine>) => void,\r\n\r\n\tonObjectAdded?: ObjectAddedCallback,\r\n\tonObjectDeleted?: ObjectDeletedCallback,\r\n\r\n\tonBoundaryAdded?: BoundaryAddedCallback,\r\n\tonBoundariesUpdated?: BoundariesUpdatedCallback,\r\n\tonBoundaryDeleted?: BoundaryDeletedCallback\r\n}\r\n\r\ninterface ServerState {\r\n\tcanvasRef: React.RefObject<HTMLCanvasElement>,\r\n\tshowCrosshair: boolean,\r\n\tdraggingBody: boolean,\r\n\tmouseButton?: number,\r\n\tmouseDownPos?: Point,\r\n\tmouseDownPosCanvas?: Point,\r\n\tdragStartPos?: Point,\r\n\tdragLastPos?: Point,\r\n\tsnookerBody?: Matter.Body,\r\n\tclickedBoundary?: Boundary,\r\n\tclickedOldBounds?: Bounds,\r\n\tresizeBoundaries?: Array<Boundary>,\r\n\tresizeMode: ResizeMode,\r\n}\r\n\r\nexport default class Server extends React.PureComponent<ServerProps, ServerState> {\r\n\tstatic whyDidYouRender = true\r\n\r\n\tmatterEngine?: Matter.Engine\r\n\tmatterMouse?: Matter.Mouse\r\n\tmatterMouseConstraint?: Matter.MouseConstraint\r\n\tmatterRender?: RenderAuraProj\r\n\tmatterRunner?: Matter.Runner\r\n\tmatterWorld?: Matter.World\r\n\r\n\tconstructor(props: ServerProps) {\r\n\t\tsuper(props)\r\n\r\n\t\tconst canvasRef: React.RefObject<HTMLCanvasElement> = React.createRef()\r\n\r\n\t\tthis.state = {\r\n\t\t\tcanvasRef: canvasRef,\r\n\t\t\tshowCrosshair: false,\r\n\t\t\tdraggingBody: false,\r\n\t\t\tmouseButton: undefined,\r\n\t\t\tmouseDownPos: undefined,\r\n\t\t\tmouseDownPosCanvas: undefined,\r\n\t\t\tdragStartPos: undefined,\r\n\t\t\tdragLastPos: undefined,\r\n\t\t\tsnookerBody: undefined,\r\n\t\t\tclickedBoundary: undefined,\r\n\t\t\tclickedOldBounds: undefined,\r\n\t\t\tresizeBoundaries: undefined,\r\n\t\t\tresizeMode: ResizeMode.NONE,\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\t// Get canvas context and set it up\r\n\t\tconst canvas = this.state.canvasRef.current\r\n\t\tif (!canvas) {\r\n\t\t\tconsole.log(\"Canvas ref is null\")\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst ctx = canvas.getContext(\"2d\")\r\n\t\tif (!ctx) {\r\n\t\t\tconsole.log(\"Couldn't get a 2D canvas context\")\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tctx.font = \"12px Arial\"\r\n\r\n\t\t// Fit canvas to container\r\n\t\t// TODO: make this dynamic\r\n\t\tcanvas.style.width = \"100%\"\r\n\t\tcanvas.style.height = \"100%\"\r\n\t\tcanvas.width  = canvas.offsetWidth\r\n\t\tcanvas.height = canvas.offsetHeight\r\n\r\n\t\t// Prevent menus on canvas\r\n\t\tcanvas.oncontextmenu = () => false\r\n\t\tcanvas.onselectstart = () => false\t\t\r\n\r\n\t\t// Create a physics world\r\n\t\tthis.matterWorld = Matter.World.create({\r\n\t\t\t// Top-down, so no gravity\r\n\t\t\tgravity: {\r\n\t\t\t\tscale: 1,\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t// Create a physics engine\r\n\t\tthis.matterEngine = Matter.Engine.create({\r\n\t\t\tenableSleeping: true,\r\n\t\t\tworld: this.matterWorld\r\n\t\t})\r\n\r\n\t\t// Add mouse control\r\n\t\tthis.matterMouse = Matter.Mouse.create(canvas)\r\n\t\tthis.matterMouseConstraint = Matter.MouseConstraint.create(this.matterEngine, {\r\n\t\t\tmouse: this.matterMouse,\r\n\t\t\tconstraint: {\r\n\t\t\t\tstiffness: 0.2,\r\n\t\t\t\trender: {\r\n\t\t\t\t\tlineWidth: 0,\r\n\t\t\t\t\tstrokeStyle: 'black',\r\n\t\t\t\t\tvisible: false\r\n\t\t\t\t}\r\n\t\t\t} as Matter.Constraint\r\n\t\t})\r\n\r\n\t\t// Create a renderer\r\n\t\tthis.matterRender = RenderAuraProj.create({\r\n\t\t\t// Bounds begin centered about the origin\r\n\t\t\tbounds: {\r\n\t\t\t\tmin: {\r\n\t\t\t\t\tx: -canvas.width / 2,\r\n\t\t\t\t\ty: -canvas.height / 2\r\n\t\t\t\t},\r\n\t\t\t\tmax: {\r\n\t\t\t\t\tx: canvas.width / 2,\r\n\t\t\t\t\ty: canvas.height / 2\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcanvas: canvas,\r\n\t\t\tengine: this.matterEngine,\r\n\t\t\tmouse: this.matterMouse,\r\n\t\t\toptions: {\r\n\t\t\t\twidth: canvas.width,\r\n\t\t\t\theight: canvas.height,\r\n\t\t\t\tbackground: 'rgb(0, 0, 0, 0)',\r\n\t\t\t\twireframes: false,\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t\tMatter.World.add(this.matterWorld, this.matterMouseConstraint)\r\n\r\n\t\t// Temp\r\n\t\tfor (let x = 0; x < 9; ++x) {\r\n\t\t\tfor (let y = 0; y < 9; ++y) {\r\n\t\t\t\tconst body = Matter.Bodies.circle(x * 50 - 200, y * 50 - 200, 20, { restitution: 0.5 })\r\n\t\t\t\tMatter.World.add(this.matterWorld, body)\t\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst body = Matter.Bodies.circle(0, 300, 50, { restitution: 0.5 })\r\n\t\tMatter.World.add(this.matterWorld, body)\t\r\n\r\n\t\t// Create runner\r\n\t\tthis.matterRunner = Matter.Runner.create({ isFixed: false })\r\n\r\n\t\t// Mouse handlers\r\n\t\tMatter.Events.on(this.matterMouseConstraint, 'startdrag', this.onBodyDragStart)\r\n\t\tMatter.Events.on(this.matterMouseConstraint, 'enddrag', this.onBodyDragEnd)\r\n\r\n\t\t// Engine/runner hooks\r\n\t\tMatter.Events.on(this.matterEngine, 'beforeUpdate', this.onBeforeUpdate)\r\n\t\tif (this.props.onEngineBeforeUpdate)\r\n\t\t\tMatter.Events.on(this.matterEngine, 'beforeUpdate', this.props.onEngineBeforeUpdate)\r\n\t\tif (this.props.onEngineAfterUpdate)\r\n\t\t\tMatter.Events.on(this.matterEngine, 'afterUpdate', this.props.onEngineAfterUpdate)\r\n\r\n\t\t// Renderer hooks\r\n\t\tMatter.Events.on(this.matterRender, 'beforeRender', this.onBeforeRender)\r\n\t\tMatter.Events.on(this.matterRender, 'beforeObjects', this.onBeforeObjects)\r\n\r\n\t\t// Run the engine\r\n\t\tMatter.Runner.run(this.matterRunner, this.matterEngine)\r\n\r\n\t\t// Run the renderer\r\n\t\tRenderAuraProj.run(this.matterRender)\r\n\t}\r\n\r\n\tonBeforeUpdate = (event: Matter.IEventTimestamped<Matter.Engine>) => {\r\n\t\tif (!this.matterMouseConstraint)\r\n\t\t\treturn\r\n\t\t\t\r\n\t\t// Should we disable the mouse constraint (grab objects?)\r\n\t\tif (this.props.mouseMode !== MouseMode.OBJECT)\r\n\t\t\tthis.matterMouseConstraint.collisionFilter.mask = 0\r\n\t\telse\r\n\t\t\tthis.matterMouseConstraint.collisionFilter.mask = 0xFFFFFFFF\r\n\t}\r\n\r\n\tonBeforeRender = (event: Matter.IEventTimestamped<Matter.Render>) => {\r\n\t\tif (!this.matterRender)\r\n\t\t\treturn\r\n\r\n\t\t// Update some rendering options\r\n\t\tthis.matterRender.options.gridSize = this.props.gridSize\r\n\t\tthis.matterRender.options.showCrosshair = this.state.showCrosshair\r\n\t\tthis.matterRender.options.crosshairSnap = this.props.snapToGrid\r\n\t}\r\n\r\n\tonBeforeObjects = (event: Matter.IEventTimestamped<Matter.Render>) => {\r\n\t\tconst context = event.source.context\r\n\t\tconst mousePos = this.getMousePos(true)\r\n\t\tconst mousePosUnsnapped = this.getMousePos(true, true)\r\n\r\n\t\t// Draw boundaries\r\n\t\tcontext.setLineDash([])\r\n\t\tcontext.lineWidth = 1\r\n\r\n\t\tthis.props.boundaries.forEach(boundary => {\r\n\t\t\tconst topLeft = this.worldToCanvas(boundary.bounds.min)\r\n\t\t\tconst bottomRight = this.worldToCanvas(boundary.bounds.max)\r\n\t\t\tconst extents = Matter.Vector.sub(bottomRight, topLeft)\r\n\r\n\t\t\tconst mouseInBounds = pointInBounds(mousePosUnsnapped, { min: topLeft, max: bottomRight }, false)\r\n\t\t\tconst isClickedBoundary = this.state.clickedBoundary && this.state.clickedBoundary === boundary\r\n\r\n\t\t\tcontext.fillStyle = boundary.color\r\n\t\t\tcontext.strokeStyle = 'black'\r\n\r\n\t\t\tif (this.props.mouseMode === MouseMode.BOUNDARY_EDIT && this.state.resizeMode === ResizeMode.NONE && (isClickedBoundary || mouseInBounds))\r\n\t\t\t\tcontext.globalAlpha = 0.6\r\n\t\t\telse\r\n\t\t\t\tcontext.globalAlpha = 0.4\r\n\r\n\t\t\tcontext.beginPath()\r\n\t\t\tcontext.fillRect(topLeft.x, topLeft.y, extents.x, extents.y)\r\n\t\t\tcontext.globalAlpha = 1.0\r\n\t\t\tcontext.rect(topLeft.x, topLeft.y, extents.x, extents.y)\r\n\t\t\tcontext.stroke()\r\n\t\t})\r\n\r\n\t\tswitch (this.props.mouseMode) {\r\n\t\t\tcase MouseMode.BOUNDARY_EDIT: {\r\n\t\t\t\tif (!this.state.mouseDownPos || this.state.clickedBoundary || this.state.resizeBoundaries)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// Draw outline of new boundary\r\n\t\t\t\tconst topLeft = this.worldToCanvas(this.state.mouseDownPos)\r\n\t\t\t\tconst width = mousePos.x - topLeft.x\r\n\t\t\t\tconst height = mousePos.y - topLeft.y\r\n\r\n\t\t\t\tcontext.strokeStyle = 'blue'\r\n\t\t\t\tcontext.fillStyle = 'rgb(128, 128, 255, 0.2)'\r\n\t\t\t\tcontext.beginPath()\r\n\t\t\t\tcontext.fillRect(topLeft.x, topLeft.y, width, height)\r\n\t\t\t\tcontext.rect(topLeft.x, topLeft.y, width, height)\r\n\t\t\t\tcontext.stroke()\r\n\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\tcase MouseMode.SNOOKER: {\r\n\t\t\t\tif (!this.state.snookerBody)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// Draw snooker \"cue\"\r\n\t\t\t\tconst bodyPos = this.worldToCanvas(this.state.snookerBody.position)\r\n\r\n\t\t\t\tcontext.strokeStyle = 'red'\r\n\t\t\t\tcontext.beginPath()\r\n\t\t\t\tcontext.moveTo(bodyPos.x, bodyPos.y)\r\n\t\t\t\tcontext.lineTo(mousePos.x, mousePos.y)\r\n\t\t\t\tcontext.stroke()\r\n\t\t\t\t\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\tdefault: break\r\n\t\t}\r\n\t}\r\n\r\n\tonBodyDragStart = () => {\r\n\t\tthis.setState({ draggingBody: true })\r\n\t}\r\n\r\n\tonBodyDragEnd = () => {\r\n\t\tthis.setState({ draggingBody: false })\r\n\t}\r\n\r\n\tcheckResizeMode = (bUnder?: Boundary, bNear?: Array<Boundary>) => {\r\n\t\tlet resizeMode = ResizeMode.NONE\r\n\r\n\t\t// Mouse near a boundary edge\r\n\t\tif (bNear && bNear.length > 1)\r\n\t\t{\r\n\t\t\t// Mouse near a 4-way intersection\r\n\t\t\tif (bNear.length === 4) {\r\n\t\t\t\tresizeMode = ResizeMode.CROSS_SPLIT\r\n\t\t\t}\r\n\t\t\t// Mouse near 2-way intersection\r\n\t\t\telse if (bNear.length === 2) {\r\n\t\t\t\tconst b1 = bNear[0].bounds\r\n\t\t\t\tconst b2 = bNear[1].bounds\r\n\t\t\t\tif (b1.max.y <= b2.min.y || b2.max.y <= b1.min.y)\r\n\t\t\t\t\tresizeMode = ResizeMode.HORIZONTAL_SPLIT\r\n\t\t\t\telse\r\n\t\t\t\t\tresizeMode = ResizeMode.VERTICAL_SPLIT\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (bUnder) {\r\n\t\t\tconst mousePosCanvas = this.getMousePos(true, true)\r\n\t\t\tconst boundsCanvas = {\r\n\t\t\t\tmin: this.worldToCanvas(bUnder.bounds.min),\r\n\t\t\t\tmax: this.worldToCanvas(bUnder.bounds.max)\r\n\t\t\t}\r\n\t\r\n\t\t\tconst leftDist \t= Math.abs(boundsCanvas.min.x - mousePosCanvas.x)\r\n\t\t\tconst rightDist = Math.abs(boundsCanvas.max.x - mousePosCanvas.x)\r\n\t\t\tconst topDist = Math.abs(boundsCanvas.min.y - mousePosCanvas.y)\r\n\t\t\tconst bottomDist = Math.abs(boundsCanvas.max.y - mousePosCanvas.y)\r\n\t\r\n\t\t\t// Check corners\r\n\t\t\tif (leftDist <= MOUSE_BOUNDS_THRESHOLD && topDist <= MOUSE_BOUNDS_THRESHOLD)\r\n\t\t\t\tresizeMode = ResizeMode.TOP_LEFT_CORNER\r\n\t\t\telse if (rightDist <= MOUSE_BOUNDS_THRESHOLD && topDist <= MOUSE_BOUNDS_THRESHOLD)\r\n\t\t\t\tresizeMode = ResizeMode.TOP_RIGHT_CORNER\r\n\t\t\telse if (rightDist <= MOUSE_BOUNDS_THRESHOLD && bottomDist <= MOUSE_BOUNDS_THRESHOLD)\r\n\t\t\t\tresizeMode = ResizeMode.BOTTOM_RIGHT_CORNER\r\n\t\t\telse if (leftDist <= MOUSE_BOUNDS_THRESHOLD && bottomDist <= MOUSE_BOUNDS_THRESHOLD)\r\n\t\t\t\tresizeMode = ResizeMode.BOTTOM_LEFT_CORNER\r\n\t\r\n\t\t\t// Check edges\r\n\t\t\telse if (leftDist <= MOUSE_BOUNDS_THRESHOLD)\r\n\t\t\t\tresizeMode = ResizeMode.LEFT_EDGE\r\n\t\t\telse if (rightDist <= MOUSE_BOUNDS_THRESHOLD)\r\n\t\t\t\tresizeMode = ResizeMode.RIGHT_EDGE\r\n\t\t\telse if (topDist <= MOUSE_BOUNDS_THRESHOLD)\r\n\t\t\t\tresizeMode = ResizeMode.TOP_EDGE\r\n\t\t\telse if (bottomDist <= MOUSE_BOUNDS_THRESHOLD)\r\n\t\t\t\tresizeMode = ResizeMode.BOTTOM_EDGE\r\n\t\r\n\t\t}\r\n\r\n\t\treturn resizeMode\r\n\t}\r\n\r\n\tupdateCanvasCursorStyle = (resizeMode?: ResizeMode, bUnder?: Boundary) => {\r\n\t\tconst canvas = this.state.canvasRef.current\r\n\t\tif (!canvas)\r\n\t\t\treturn\r\n\r\n\t\tswitch (resizeMode) {\r\n\t\t\t// Single boundary\r\n\t\t\tcase ResizeMode.TOP_LEFT_CORNER: \t\tcanvas.style.cursor = 'nw-resize'; \tbreak;\r\n\t\t\tcase ResizeMode.TOP_RIGHT_CORNER:\t\tcanvas.style.cursor = 'ne-resize'; \tbreak;\r\n\t\t\tcase ResizeMode.BOTTOM_RIGHT_CORNER:\tcanvas.style.cursor = 'se-resize'; \tbreak;\r\n\t\t\tcase ResizeMode.BOTTOM_LEFT_CORNER:\t\tcanvas.style.cursor = 'sw-resize'; \tbreak;\r\n\t\t\tcase ResizeMode.LEFT_EDGE: \t\t\t\tcanvas.style.cursor = 'w-resize'; \tbreak;\r\n\t\t\tcase ResizeMode.RIGHT_EDGE:\t\t\t\tcanvas.style.cursor = 'e-resize'; \tbreak;\r\n\t\t\tcase ResizeMode.TOP_EDGE:\t\t\t\tcanvas.style.cursor = 'n-resize'; \tbreak;\r\n\t\t\tcase ResizeMode.BOTTOM_EDGE:\t\t\tcanvas.style.cursor = 's-resize'; \tbreak;\r\n\r\n\t\t\t// Multi boundary\r\n\t\t\tcase ResizeMode.CROSS_SPLIT:\t\t\tcanvas.style.cursor = 'move'; \t\tbreak;\r\n\t\t\tcase ResizeMode.HORIZONTAL_SPLIT:\t\tcanvas.style.cursor = 'ns-resize';\tbreak;\r\n\t\t\tcase ResizeMode.VERTICAL_SPLIT:\t\t\tcanvas.style.cursor = 'ew-resize';\tbreak;\r\n\t\t\t\r\n\t\t\tdefault:\t\t\t\r\n\t\t\t\tif (bUnder && this.state.clickedBoundary)\r\n\t\t\t\t\tcanvas.style.cursor = 'grabbing';\r\n\t\t\t\telse if (bUnder)\r\n\t\t\t\t\tcanvas.style.cursor = 'grab';\r\n\t\t\t\telse\t\t\t\t\t\r\n\t\t\t\t\tcanvas.style.cursor = 'crosshair';\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseDown = (event: React.MouseEvent<HTMLCanvasElement>) => {\r\n\t\tconst mousePos = this.getMousePos()\r\n\t\tconst mousePosCanvas = this.getMousePos(true)\r\n\r\n\t\tthis.setState({\r\n\t\t\tmouseButton: event.button,\r\n\t\t\tmouseDownPos: mousePos,\r\n\t\t\tmouseDownPosCanvas: mousePosCanvas\r\n\t\t})\r\n\r\n\t\tswitch (this.props.mouseMode) {\r\n\t\t\tcase MouseMode.SNOOKER: {\r\n\t\t\t\t// Did we left-click on an object?\r\n\t\t\t\tif (event.button === 0) {\r\n\t\t\t\t\tthis.setState({snookerBody: this.bodyAtPosition(mousePos)})\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\tcase MouseMode.BOUNDARY_EDIT: {\r\n\t\t\t\tconst bUnder = this.boundaryUnderMouse()\r\n\t\t\t\tconst bNear = this.boundariesNearMouse()\r\n\r\n\t\t\t\tif (!bUnder && !bNear.length)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// Left-click: check & prepare for resize\r\n\t\t\t\tlet resizeMode = ResizeMode.NONE\r\n\t\t\t\tif (event.button === 0) {\r\n\t\t\t\t\tresizeMode = this.checkResizeMode(bUnder, bNear)\r\n\t\t\t\t\tthis.updateCanvasCursorStyle(resizeMode, bUnder)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Mouse button went down near 2 or 4 adjacent boundaries\r\n\t\t\t\tif (bNear.length > 1) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tresizeBoundaries: bNear,\r\n\t\t\t\t\t\tresizeMode: resizeMode\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t// Mouse button went down over a single boundary\r\n\t\t\t\telse if (bUnder) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tclickedBoundary: bUnder,\r\n\t\t\t\t\t\tclickedOldBounds: {\r\n\t\t\t\t\t\t\tmin: Object.assign({}, bUnder.bounds.min),\r\n\t\t\t\t\t\t\tmax: Object.assign({}, bUnder.bounds.max)\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tresizeMode: resizeMode\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\tdefault: break\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseUp = (event: React.MouseEvent<HTMLCanvasElement>) => {\r\n\t\tif (!this.matterWorld)\r\n\t\t\treturn\r\n\r\n\t\tconst mousePos = this.getMousePos()\r\n\t\tconst mousePosCanvas = this.getMousePos(true)\r\n\t\tconst click = \tthis.state.mouseButton === event.button &&\r\n\t\t\t\t\t\tthis.state.mouseDownPosCanvas &&\r\n\t\t\t\t\t\t(this.state.mouseDownPosCanvas.x === mousePosCanvas.x &&\r\n\t\t\t\t\t\tthis.state.mouseDownPosCanvas.y === mousePosCanvas.y)\r\n\r\n\t\tswitch (this.props.mouseMode) {\r\n\t\t\tcase MouseMode.OBJECT: {\r\n\t\t\t\t// Dragging an object, bail out\r\n\t\t\t\tif (this.state.draggingBody)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// Left-click: add new object\r\n\t\t\t\tif (event.button === 0) {\r\n\t\t\t\t\tconst body = Matter.Bodies.circle(mousePos.x, mousePos.y, 20, { restitution: 0.5 })\r\n\t\t\t\t\r\n\t\t\t\t\tMatter.World.add(this.matterWorld, body)\r\n\t\t\t\t\tif (this.props.onObjectAdded)\r\n\t\t\t\t\tthis.props.onObjectAdded(body)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Right-click: delete object\r\n\t\t\t\telse if (event.button === 2) {\r\n\t\t\t\t\tconst body = this.bodyAtPosition(mousePos)\r\n\t\t\t\t\tif (body) {\r\n\t\t\t\t\t\tif (this.props.onObjectDeleted)\r\n\t\t\t\t\t\tthis.props.onObjectDeleted(body.id)\r\n\t\t\t\t\t\tMatter.Composite.remove(this.matterWorld, body)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\tcase MouseMode.SNOOKER: {\r\n\t\t\t\tif (!this.state.snookerBody || event.button !== 0)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tconst body = this.state.snookerBody\r\n\t\t\t\tconst force = Matter.Vector.mult(Matter.Vector.sub(body.position, mousePos), 0.001 * body.mass)\r\n\r\n\t\t\t\tMatter.Body.applyForce(body, body.position, force)\r\n\t\t\t\tthis.setState({ snookerBody: undefined })\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\tcase MouseMode.BOUNDARY_EDIT: {\r\n\t\t\t\t// Did we just finish resizing? Clear state and bail out\r\n\t\t\t\tif (this.state.resizeMode !== ResizeMode.NONE) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tresizeMode: ResizeMode.NONE,\r\n\t\t\t\t\t\tresizeBoundaries: undefined\r\n\t\t\t\t\t})\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Did we right-click on an existing boundary? Delete it and bail out\r\n\t\t\t\tif (this.props.onBoundaryDeleted && event.button === 2 && click && this.state.clickedBoundary) {\r\n\t\t\t\t\tthis.props.onBoundaryDeleted(this.state.clickedBoundary)\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Otherwise, add a new boundary\r\n\t\t\t\tif (this.props.onBoundaryAdded && event.button === 0 && this.state.mouseDownPos)\r\n\t\t\t\t\tthis.props.onBoundaryAdded(createBounds(this.state.mouseDownPos, mousePos))\r\n\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\tdefault: break\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tmouseButton: undefined,\r\n\t\t\tmouseDownPos: undefined,\r\n\t\t\tmouseDownPosCanvas: undefined,\r\n\t\t\tclickedBoundary: undefined,\r\n\t\t\tclickedOldBounds: undefined\r\n\t\t})\r\n\r\n\t\tthis.updateCanvasCursorStyle(undefined, this.boundaryUnderMouse())\r\n\t}\r\n\r\n\tresizingMultiple = (b: Bounds | Array<Bounds>): b is Array<Bounds> => {\r\n\t\treturn (b as Array<Bounds>).length !== undefined\r\n\t}\r\n\r\n\tonMouseMove = (event: React.MouseEvent<HTMLCanvasElement>) => {\r\n\t\tif (!this.matterRender || !this.matterMouseConstraint)\r\n\t\t\treturn\r\n\r\n\t\tconst mousePos = this.getMousePos()\r\n\r\n\t\t// Right mouse button drag always pans\r\n\t\tif (this.state.mouseButton === 2) {\r\n\t\t\tif (!this.state.mouseDownPos || this.state.draggingBody)\r\n\t\t\t\treturn\r\n\r\n\t\t\tconst bounds = this.matterRender.bounds\r\n\t\t\tconst delta = {\r\n\t\t\t\tx: mousePos.x - this.state.mouseDownPos.x,\r\n\t\t\t\ty: mousePos.y - this.state.mouseDownPos.y\r\n\t\t\t}\r\n\r\n\t\t\t// Reposition viewport\r\n\t\t\tbounds.min = Matter.Vector.sub(bounds.min, delta)\r\n\t\t\tbounds.max = Matter.Vector.sub(bounds.max, delta)\r\n\r\n\t\t\t// Update mouse offset\r\n\t\t\tMatter.Mouse.setOffset(this.matterMouseConstraint.mouse, bounds.min)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Left mouse buttton drag actions\r\n\t\tswitch (this.props.mouseMode) {\r\n\t\t\tcase MouseMode.BOUNDARY_EDIT: {\r\n\t\t\t\t// Not resizing or moving\r\n\t\t\t\tif (this.state.resizeMode === ResizeMode.NONE && !this.state.clickedBoundary) {\r\n\t\t\t\t\t// Just look for boundaries near the mouse and update the cursor\r\n\t\t\t\t\tconst bUnder = this.boundaryUnderMouse()\r\n\t\t\t\t\tconst bNear = this.boundariesNearMouse()\r\n\t\t\t\t\tthis.updateCanvasCursorStyle(this.checkResizeMode(bUnder, bNear))\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Bail out if we don't have a callback\r\n\t\t\t\tif (!this.props.onBoundariesUpdated)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tif (this.state.resizeBoundaries) {\r\n\t\t\t\t\tswitch (this.state.resizeMode) {\r\n\t\t\t\t\t\tcase ResizeMode.CROSS_SPLIT: {\r\n\t\t\t\t\t\t\tconst resizeInfo: Array<BoundaryResizeInfo> = this.state.resizeBoundaries.map((b) => {\r\n\t\t\t\t\t\t\t\tconst bounds = b.bounds\r\n\r\n\t\t\t\t\t\t\t\tlet newBounds = {\r\n\t\t\t\t\t\t\t\t\tmin: Object.assign({}, bounds.min),\r\n\t\t\t\t\t\t\t\t\tmax: Object.assign({}, bounds.max)\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Find the closest corner to the mouse\r\n\t\t\t\t\t\t\t\tconst dists = [\r\n\t\t\t\t\t\t\t\t\tdistanceSq(mousePos, bounds.min),\t\t\t\t\t\t\t// Top left\r\n\t\t\t\t\t\t\t\t\tdistanceSq(mousePos, { x: bounds.max.x, y: bounds.min.y }),\t// Top right\r\n\t\t\t\t\t\t\t\t\tdistanceSq(mousePos, bounds.max),\t\t\t\t\t\t\t// Bottom right\r\n\t\t\t\t\t\t\t\t\tdistanceSq(mousePos, { x: bounds.min.x, y: bounds.max.y }),\t// Bottom left\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\tconst minIndex = dists.reduce((minIndex, dist, i, dists) => dist < dists[minIndex] ? i : minIndex, 0)\r\n\r\n\t\t\t\t\t\t\t\t// Adjust the closest corner\r\n\t\t\t\t\t\t\t\tswitch (minIndex) {\r\n\t\t\t\t\t\t\t\t\t// Top left\r\n\t\t\t\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\t\t\t\tnewBounds.min.x = mousePos.x\r\n\t\t\t\t\t\t\t\t\t\tnewBounds.min.y = mousePos.y\r\n\t\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// Top right\r\n\t\t\t\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\t\t\t\tnewBounds.max.x = mousePos.x\r\n\t\t\t\t\t\t\t\t\t\tnewBounds.min.y = mousePos.y\r\n\t\t\t\t\t\t\t\t\t\tbreak\r\n\r\n\t\t\t\t\t\t\t\t\t// Bottom right\r\n\t\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\t\tnewBounds.max.x = mousePos.x\r\n\t\t\t\t\t\t\t\t\t\tnewBounds.max.y = mousePos.y\r\n\t\t\t\t\t\t\t\t\t\tbreak\r\n\r\n\t\t\t\t\t\t\t\t\t// Bottom left\r\n\t\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\t\tnewBounds.min.x = mousePos.x\r\n\t\t\t\t\t\t\t\t\t\tnewBounds.max.y = mousePos.y\r\n\t\t\t\t\t\t\t\t\t\tbreak\r\n\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Fixup so that min is always at the top left and max is always at the bottom right\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tboundary: b,\r\n\t\t\t\t\t\t\t\t\tnewBounds: createBounds(newBounds.min, newBounds.max)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\tthis.props.onBoundariesUpdated(resizeInfo)\r\n\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcase ResizeMode.HORIZONTAL_SPLIT:\r\n\t\t\t\t\t\tcase ResizeMode.VERTICAL_SPLIT:\r\n\t\t\t\t\t\t\tvar b1 = this.state.resizeBoundaries[0]\r\n\t\t\t\t\t\t\tvar b2 = this.state.resizeBoundaries[1]\r\n\r\n\t\t\t\t\t\t\tvar newBounds1\r\n\t\t\t\t\t\t\tvar newBounds2\r\n\r\n\t\t\t\t\t\t\tif (this.state.resizeMode === ResizeMode.HORIZONTAL_SPLIT) {\r\n\t\t\t\t\t\t\t\t// Swap boundary order if necessary\r\n\t\t\t\t\t\t\t\tif (b1.bounds.max.y > b2.bounds.min.y)\r\n\t\t\t\t\t\t\t\t\t[b1, b2] = [b2, b1]\r\n\t\t\t\t\t\t\t\tnewBounds1 = createBounds(b1.bounds.min, { x: b1.bounds.max.x, y: mousePos.y })\r\n\t\t\t\t\t\t\t\tnewBounds2 = createBounds({ x: b2.bounds.min.x, y: mousePos.y }, b2.bounds.max)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (b1.bounds.max.x > b2.bounds.min.x)\r\n\t\t\t\t\t\t\t\t\t[b1, b2] = [b2, b1]\r\n\t\t\t\t\t\t\t\tnewBounds1 = createBounds(b1.bounds.min, { x: mousePos.x, y: b1.bounds.max.y })\r\n\t\t\t\t\t\t\t\tnewBounds2 = createBounds({ x: mousePos.x, y: b2.bounds.min.y }, b2.bounds.max)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Update boundaries\r\n\t\t\t\t\t\t\tthis.props.onBoundariesUpdated([\r\n\t\t\t\t\t\t\t\t{ boundary: b1, newBounds: newBounds1 },\r\n\t\t\t\t\t\t\t\t{ boundary: b2, newBounds: newBounds2 },\r\n\t\t\t\t\t\t\t])\r\n\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.state.clickedBoundary && this.state.clickedOldBounds) {\r\n\t\t\t\t\tlet newBounds = {\r\n\t\t\t\t\t\tmin: Object.assign({}, this.state.clickedOldBounds.min),\r\n\t\t\t\t\t\tmax: Object.assign({}, this.state.clickedOldBounds.max)\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tswitch (this.state.resizeMode) {\r\n\t\t\t\t\t\tcase ResizeMode.TOP_LEFT_CORNER:\r\n\t\t\t\t\t\t\tnewBounds.min.x = mousePos.x\r\n\t\t\t\t\t\t\tnewBounds.min.y = mousePos.y\r\n\t\t\t\t\t\t\tbreak\r\n\t\r\n\t\t\t\t\t\tcase ResizeMode.TOP_RIGHT_CORNER:\r\n\t\t\t\t\t\t\tnewBounds.max.x = mousePos.x\r\n\t\t\t\t\t\t\tnewBounds.min.y = mousePos.y\r\n\t\t\t\t\t\t\tbreak\r\n\t\r\n\t\t\t\t\t\tcase ResizeMode.BOTTOM_LEFT_CORNER:\r\n\t\t\t\t\t\t\tnewBounds.min.x = mousePos.x\r\n\t\t\t\t\t\t\tnewBounds.max.y = mousePos.y\r\n\t\t\t\t\t\t\tbreak\r\n\t\r\n\t\t\t\t\t\tcase ResizeMode.BOTTOM_RIGHT_CORNER:\r\n\t\t\t\t\t\t\tnewBounds.max.x = mousePos.x\r\n\t\t\t\t\t\t\tnewBounds.max.y = mousePos.y\r\n\t\t\t\t\t\t\tbreak\r\n\t\r\n\t\t\t\t\t\tcase ResizeMode.LEFT_EDGE:\r\n\t\t\t\t\t\t\tnewBounds.min.x = mousePos.x\r\n\t\t\t\t\t\t\tbreak\r\n\t\r\n\t\t\t\t\t\tcase ResizeMode.RIGHT_EDGE:\r\n\t\t\t\t\t\t\tnewBounds.max.x = mousePos.x\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase ResizeMode.TOP_EDGE:\r\n\t\t\t\t\t\t\tnewBounds.min.y = mousePos.y\r\n\t\t\t\t\t\t\tbreak\r\n\t\r\n\t\t\t\t\t\tcase ResizeMode.BOTTOM_EDGE:\r\n\t\t\t\t\t\t\tnewBounds.max.y = mousePos.y\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t// Moving\r\n\t\t\t\t\t\t\tif (!this.state.mouseDownPos)\r\n\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\tconst mouseDelta = Matter.Vector.sub(mousePos, this.state.mouseDownPos)\r\n\t\t\t\t\t\t\tnewBounds.min = Matter.Vector.add(newBounds.min, mouseDelta)\r\n\t\t\t\t\t\t\tnewBounds.max = Matter.Vector.add(newBounds.max, mouseDelta)\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Fixup so that min is always at the top left and max is always at the bottom right\r\n\t\t\t\t\tnewBounds = createBounds(newBounds.min, newBounds.max)\r\n\t\r\n\t\t\t\t\t// Update cursor\r\n\t\t\t\t\tthis.updateCanvasCursorStyle(this.state.resizeMode, this.state.clickedBoundary)\r\n\t\r\n\t\t\t\t\t// Update boundary\r\n\t\t\t\t\tthis.props.onBoundariesUpdated([\r\n\t\t\t\t\t\t{ boundary: this.state.clickedBoundary, newBounds: newBounds }\r\n\t\t\t\t\t])\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseOver = (event: React.MouseEvent<HTMLCanvasElement>) => {\r\n\t\t// Show crosshair and coords\r\n\t\tthis.setState({ showCrosshair: true })\r\n\t}\r\n\r\n\tonMouseOut = (event: React.MouseEvent<HTMLCanvasElement>) => {\r\n\t\tthis.setState({\r\n\t\t\t// Hide crosshair and coords\r\n\t\t\tshowCrosshair: false,\r\n\r\n\t\t\t// Clear drawing/resizing state\r\n\t\t\tmouseDownPos: undefined,\r\n\t\t\tclickedBoundary: undefined\r\n\t\t})\r\n\t}\r\n\r\n\tonWheel = (event: React.WheelEvent<HTMLCanvasElement>) => {\r\n\t\tif (!this.matterMouse || !this.matterRender)\r\n\t\t\treturn\r\n\t\t\r\n\t\tconst mouse = this.matterMouse\r\n\t\tconst zoomFactor = event.deltaY < 0 ? 0.9 : 1 / 0.9\r\n\t\tconst bounds = this.matterRender.bounds\r\n\r\n\t\t// Reposition viewport (i.e. min = zoomFactor * (min - mousePos) + mousePos)\r\n\t\tbounds.min = Matter.Vector.add(Matter.Vector.mult(Matter.Vector.sub(bounds.min, mouse.position), zoomFactor), mouse.position)\r\n\t\tbounds.max = Matter.Vector.add(Matter.Vector.mult(Matter.Vector.sub(bounds.max, mouse.position), zoomFactor), mouse.position)\r\n\t}\r\n\r\n\tspawnRandomObjects = (count: number) => {\r\n\t\tif (!this.matterRender || !this.matterWorld)\r\n\t\t\treturn\r\n\t\r\n\t\tlet bodies = []\r\n\t\tfor (let i = 0; i < count; ++i) {\r\n\t\t\tconst x = random(this.matterRender.bounds.min.x, this.matterRender.bounds.max.x, true)\r\n\t\t\tconst y = random(this.matterRender.bounds.min.y, this.matterRender.bounds.max.y, true)\r\n\t\t\tbodies.push(Matter.Bodies.circle(x, y, 10, { restitution: 0.5 }))\r\n\t\t}\r\n\r\n\t\tMatter.World.add(this.matterWorld, bodies)\r\n\t}\r\n\r\n\tclearAllObjects = () => {\r\n\t\tif (!this.matterMouseConstraint || !this.matterWorld)\r\n\t\t\treturn\r\n\r\n\t\t// Remove the bodies\r\n\t\tMatter.World.clear(this.matterWorld, false)\r\n\r\n\t\t// Re-add mouse constraint\r\n\t\tMatter.World.add(this.matterWorld, this.matterMouseConstraint)\r\n\t}\r\n\r\n\tshowAllObjects = () => {\r\n\t\tif (!this.matterWorld)\r\n\t\t\treturn\r\n\r\n\t\tif (this.matterWorld.bodies.length > 0)\r\n\t\t\tRenderAuraProj.lookAt(this.matterRender, this.matterWorld.bodies, {x: 50, y: 50}, true)\r\n\t}\r\n\r\n\tresetView = () => {\r\n\t\tif (!this.state.canvasRef.current || !this.matterRender)\r\n\t\t\treturn\r\n\r\n\t\tconst canvas = this.state.canvasRef.current\r\n\t\tconst render = this.matterRender\r\n\r\n\t\tlet halfExtent = {x: canvas.width / 2, y: canvas.height / 2} as Matter.Vector\r\n\t\trender.bounds.min = Matter.Vector.neg(halfExtent)\r\n\t\trender.bounds.max = halfExtent\r\n\t}\r\n\r\n\t// Convert a position in world space to canvas space\r\n\tworldToCanvas = (position: Point) => {\r\n\t\tif (!this.matterRender)\r\n\t\t\treturn {x: 0, y: 0} as Point\r\n\r\n\t\tconst render = this.matterRender\r\n\t\tconst scale = render.canvas.width / (render.bounds.max.x - render.bounds.min.x)\r\n\t\treturn Matter.Vector.mult(Matter.Vector.sub(position, render.bounds.min), scale)\r\n\t}\r\n\r\n\tboundaryUnderMouse = (): Boundary | undefined => {\r\n\t\tif (!this.matterMouse)\r\n\t\t\treturn undefined\r\n\r\n\t\tconst mouse = this.matterMouse\r\n\t\treturn this.props.boundaries.find(b => { return pointInBounds(mouse.position, b.bounds) })\r\n\t}\r\n\r\n\tboundariesNearMouse = (): Array<Boundary> => {\r\n\t\tif (!this.matterMouse)\r\n\t\t\treturn []\r\n\r\n\t\tconst mouse = this.matterMouse\r\n\t\treturn this.props.boundaries.filter(b => {\r\n\t\t\treturn circleOverlapBounds(mouse.position, MOUSE_BOUNDS_THRESHOLD / 2, b.bounds)\r\n\t\t})\r\n\t}\r\n\r\n\tbodyAtPosition = (position: Point) => {\r\n\t\tif (!this.matterWorld)\r\n\t\t\treturn\r\n\r\n\t\tconst allBodies = Matter.Composite.allBodies(this.matterWorld)\r\n\t\tconst bodies = Matter.Query.point(allBodies, position)\r\n\t\treturn bodies[0]\r\n\t}\r\n\r\n\t// Get position of mouse in canvas or world space (snapped to grid if necessary)\r\n\tgetMousePos = (canvas = false, forceUnsnapped = false) => {\r\n\t\tif (!this.matterMouse)\r\n\t\t\treturn {x: 0, y: 0} as Point\r\n\r\n\t\tconst gridSize = this.props.gridSize\r\n\t\tconst mousePos = Object.assign({}, this.matterMouse.position) as Point\r\n\r\n\t\tif (!forceUnsnapped && this.props.snapToGrid) {\r\n\t\t\tmousePos.x = Math.round(mousePos.x / gridSize) * gridSize\r\n\t\t\tmousePos.y = Math.round(mousePos.y / gridSize) * gridSize\r\n\t\t}\r\n\r\n\t\treturn canvas ? this.worldToCanvas(mousePos) : mousePos\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t// Don't apply any borders/scaling etc to the canvas directly or mouse coords will be off\r\n\t\t\t<div id={\"canvasContainer\"}>\r\n\t\t\t\t<canvas\r\n\t\t\t\t\tref={this.state.canvasRef}\r\n\t\t\t\t\tonMouseDown={this.onMouseDown}\r\n\t\t\t\t\tonMouseUp={this.onMouseUp}\r\n\t\t\t\t\tonMouseMove={this.onMouseMove}\r\n\t\t\t\t\tonMouseOver={this.onMouseOver}\r\n\t\t\t\t\tonMouseOut={this.onMouseOut}\r\n\t\t\t\t\tonWheel={this.onWheel}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","///<reference path=\"./types/types.d.ts\" />\r\n\r\nexport const createBounds = (p1: Point, p2: Point) => {\r\n    return {\r\n        min: {\r\n            x: Math.min(p1.x, p2.x),\r\n            y: Math.min(p1.y, p2.y),\r\n        },\r\n        max: {\r\n            x: Math.max(p1.x, p2.x),\r\n            y: Math.max(p1.y, p2.y),\r\n        }\r\n    }\r\n}\r\n\r\nexport const boundsOverlap = (b1: Bounds, b2: Bounds) => !(b2.min.x >= b1.max.x || b2.max.x <= b1.min.x || b2.max.y <= b1.min.y || b2.min.y >= b1.max.y)\r\n\r\nexport const circleOverlapBounds = (p: Point, r: number, b: Bounds) => {\r\n    const bHalfWidth = (b.max.x - b.min.x) / 2\r\n    const bHalfHeight = (b.max.y - b.min.y) / 2\r\n    const bCenter = {\r\n        x: b.min.x + bHalfWidth,\r\n        y: b.min.y + bHalfHeight\r\n    }\r\n    const dist = {\r\n        x: Math.abs(p.x - bCenter.x),\r\n        y: Math.abs(p.y - bCenter.y)\r\n    }\r\n\r\n    if (dist.x > bHalfWidth + r) return false\r\n    if (dist.y > bHalfHeight + r) return false\r\n\r\n    if (dist.x <= bHalfWidth) return true\r\n    if (dist.y <= bHalfHeight) return true\r\n\r\n    const cornerDistSq = Math.pow(dist.x - bHalfWidth, 2) + Math.pow(dist.y - bHalfHeight, 2)\r\n    return cornerDistSq <= Math.pow(r, 2)\r\n}\r\n\r\nexport const distanceSq = (p1: Point, p2: Point) => {\r\n    const dx = p1.x - p2.x\r\n    const dy = p1.y - p2.y\r\n    return dx * dx + dy * dy\r\n}\r\n\r\nexport const pointInBounds = (p: Point, b: Bounds, includeEdges: boolean = true) => {\r\n    if (includeEdges)\r\n        return p.x >= b.min.x && p.x <= b.max.x && p.y >= b.min.y && p.y <= b.max.y\r\n    else\r\n        return p.x > b.min.x && p.x < b.max.x && p.y > b.min.y && p.y < b.max.y\r\n}\r\n\r\nexport const pointNearBounds = (p: Point, r: number, b: Bounds) => {\r\n    return  p.x - r < b.min.x ||\r\n            p.x + r > b.max.x ||\r\n            p.y - r < b.min.y ||\r\n            p.y + r > b.max.y\r\n}\r\n\r\nexport const resizeBounds2WaySplit = (boundaries: Array<Boundary>, mousePos: Point, vertical: boolean) => {\r\n\r\n}\r\n\r\nexport const resizeBounds4WaySplit = (boundaries: Array<Boundary>, mousePos: Point) => {\r\n\r\n}\r\n\r\nexport const evaluateUtilFunction = (func: SubUtilityFunction, boundary: Boundary, constants: UtilityVariables, globalVars: UtilityVariables) => {\r\n    try {\r\n        return func.evalFunc({\r\n            [func.utilVar]: boundary.vars[func.utilVar],\r\n    \r\n            // Non-boundary variables\r\n            ...constants,\r\n            ...globalVars\r\n        })\r\n    } catch {\r\n        return 0\r\n    }\r\n}\r\n\r\nexport const evaluateServerUtilFunction = (serverUtilFunc: UtilityFunction, utilFuncs: Array<SubUtilityFunction>, boundary: Boundary, constants: UtilityVariables, globalVars: UtilityVariables) => {\r\n    if (!serverUtilFunc.evalFunc)\r\n        return 0\r\n\r\n    const utilValues = {...boundary.vars, ...constants, ...globalVars}\r\n    utilFuncs.forEach(func => {\r\n        if (!func.evalFunc || func.utilVar === 'x')\r\n            return\r\n        utilValues[`U_${func.utilVar}`] = evaluateUtilFunction(func, boundary, constants, globalVars)\r\n    })\r\n\r\n    try {\r\n        return serverUtilFunc.evalFunc(utilValues)\r\n    } catch(e) {\r\n        return 0\r\n    }\r\n}","///<reference path=\"./types/types.d.ts\" />\r\n\r\nimport * as React from 'react'\r\n\r\nimport MathJax from 'react-mathjax2'\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nimport ContentEditable from 'react-contenteditable'\r\n \r\n/*\r\ncost of sending and receiving an object migration\r\ncost of sending and receiving an aura creation\r\ncost of sending and receiving an aura update\r\ncost of sending and receiving an aura deletion\r\ncost of maintaining an aura on the sending and receiving side\r\nand then of course cost of simulating an object, but this is really dependent on what it is doing (sleeping or not, number of contacts, number of nearby objects)\r\nthen you can calculate the cost of having a boundary in particular place, depending on all the above factors\r\nthere's also the cost of number of objects that are completely out of their host server's region as the islands check has to be performed on them\r\n*/\r\n\r\nexport const constants: Variables = {\r\n    C_m: {\r\n        desc: \"Cost of sending and receiving an object migration\",\r\n        defaultValue: 1\r\n    },\r\n    C_c: {\r\n        desc: \"Cost of sending and receiving an aura creation\",\r\n        defaultValue: 1\r\n    },\r\n    C_u: {\r\n        desc: \"Cost of sending and receiving an aura update\",\r\n        defaultValue: 1\r\n    },\r\n    C_d: {\r\n        desc: \"Cost of sending and receiving an aura deletion\",\r\n        defaultValue: 1\r\n    },\r\n    C_i: {\r\n        desc: \"Cost of number of objects out of host region (islands)\",\r\n        defaultValue: 1\r\n    }\r\n}\r\n\r\nexport const globalVars: Variables = {\r\n    sigma: {\r\n        type: \"count\",\r\n        desc: \"Number of servers\"\r\n    },\r\n    N: {\r\n        type: \"count\",\r\n        desc: \"Total number of objects in the world\"\r\n    },\r\n    t: {\r\n        type: \"count\",\r\n        desc: \"Time since boundaries were last moved (seconds)\"\r\n    }\r\n}\r\n\r\nexport const vars: Variables = {\r\n    lambda: {\r\n        type: \"proportion\",\r\n        desc: \"CPU load of the server\",\r\n    },\r\n    delta: {\r\n        type: \"count\",\r\n        desc: \"Frame time for the physics simulation step (milliseconds)\",\r\n    },\r\n    alpha: {\r\n        type: \"proportion\",\r\n        desc: \"Number of active (awake) objects\",\r\n    },\r\n    beta: {\r\n        type: \"proportion\",\r\n        desc: \"Number of objects near a boundary\",\r\n    },\r\n    n: {\r\n        type: \"count\",\r\n        desc: \"Number of objects managed by this server\",\r\n    }\r\n}\r\n\r\ninterface VariablesProps {\r\n    boundaries: Array<Boundary>,\r\n    utilConstants: UtilityConstants,\r\n    utilGlobalVars: UtilityVariables,\r\n    onUtilConstantUpdated: UtilConstantUpdatedCallback\r\n}\r\n\r\nexport const Variables: React.FC<VariablesProps> = (props) => {\r\n    return (\r\n        <div>\r\n            <h5>Constants (click to edit)</h5>\r\n            <Table hover striped size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Value</th>\r\n                        <th>Description</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                { Object.keys(props.utilConstants).map((v, i) =>\r\n                    <tr key={i}>\r\n                        <td><MathJax.Node>{v}</MathJax.Node></td>\r\n                        <ContentEditable html={`${props.utilConstants[v]}`} tagName=\"td\" onChange={ e => props.onUtilConstantUpdated(v, parseFloat(e.target.value.trim())) }/>\r\n                        <td>{constants[v].desc}</td>\r\n                    </tr>\r\n                ) }\r\n                </tbody>\r\n            </Table>\r\n\r\n            <h5>Global variables</h5>\r\n            <Table hover striped size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Value</th>\r\n                        <th>Type</th>\r\n                        <th>Description</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                { Object.keys(props.utilGlobalVars).map((v, i) =>\r\n                    <tr key={i}>\r\n                        <td><MathJax.Node>{v}</MathJax.Node></td>\r\n                        <td>{props.utilGlobalVars[v].toFixed(2)}</td>\r\n                        <td>{globalVars[v].type}</td>\r\n                        <td>{globalVars[v].desc}</td>\r\n                    </tr>\r\n                ) }\r\n                </tbody>\r\n            </Table>\r\n\r\n            <h5>Server-local variables</h5>\r\n            <Table hover striped size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Description</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                { Object.keys(vars).map((v, i) =>\r\n                    <tr key={i}>\r\n                        <td><MathJax.Node>{v}</MathJax.Node></td>\r\n                        <td>{vars[v].type}</td>\r\n                        <td>{vars[v].desc}</td>\r\n                    </tr>\r\n                ) }\r\n                </tbody>\r\n            </Table>\r\n\r\n            <h5>Server-local variable values</h5>\r\n            { props.boundaries.length > 0 && <Table hover striped size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Server</th>\r\n                        { Object.keys(props.boundaries[0].vars).map((v, i) => <th key={i} title={`${vars[v].desc} (${vars[v].type})`}><MathJax.Node>{v}</MathJax.Node></th>) }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                { props.boundaries.map((b, i) =>\r\n                    <tr key={i}>\r\n                        <td>{i}</td>\r\n                        { Object.keys(b.vars).map((v, j) => <td key={j}>{b.vars[v].toFixed(2)}</td>) }\r\n                    </tr>\r\n                ) }\r\n                </tbody>\r\n            </Table> }\r\n        </div>\r\n    )\r\n}","///<reference path=\"./types/types.d.ts\" />\r\n\r\nimport * as React from 'react'\r\n\r\nimport MathJax from 'react-mathjax2'\r\nimport * as ReactColor from 'react-color'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\n\r\nimport { evaluateServerUtilFunction } from './util'\r\nimport { vars, Variables } from './variables'\r\n\r\ninterface ControlPanelProps {\r\n\tshowColorPicker: boolean,\r\n\tcolorIndex?: number,\r\n\tonChangeColorClicked: ChangeColorClickedCallback,\r\n\tonColorUpdated: ColorUpdatedCallback,\r\n\r\n\tboundaries: Array<Boundary>,\r\n\tutilServer: UtilityFunction,\r\n\tutilFunctions: Array<SubUtilityFunction>,\r\n\tutilConstants: UtilityVariables,\r\n\tutilGlobalVars: UtilityVariables,\r\n\tonUtilFunctionAdded: UtilFuncAddedCallback,\r\n\tonUtilFunctionDeleted: UtilFuncDeletedCallback,\r\n\tonUtilFunctionUpdated: UtilFuncExpressionUpdatedCallback,\r\n\tonServerUtilFunctionUpdated: ServerUtilFuncExpressionUpdatedCallback,\r\n\tonUtilVarUpdated: UtilFuncVarUpdatedCallback,\r\n\tonUtilConstantUpdated: UtilConstantUpdatedCallback\r\n}\r\n\r\nexport const ControlPanel: React.FC<ControlPanelProps> = (props) => {\r\n\tconst popover: React.CSSProperties = {\r\n\t\tposition: 'absolute',\r\n\t\ttop: '2.5rem',\r\n\t\tright: 0,\r\n\t\tzIndex: 200,\r\n\t}\r\n\tconst cover: React.CSSProperties = {\r\n\t\tposition: 'fixed',\r\n\t\ttop: '0px',\r\n\t\tright: '0px',\r\n\t\tbottom: '0px',\r\n\t\tleft: '0px',\r\n\t}\r\n\r\n\tconst serverUtilValues = props.boundaries.map(b => \r\n\t\tevaluateServerUtilFunction(props.utilServer, props.utilFunctions, b, props.utilConstants, props.utilGlobalVars)\r\n\t)\r\n\tconst globalUtilValue = serverUtilValues.length ? serverUtilValues.reduce((a, b) => a + b).toFixed(2) : 0\r\n\r\n\treturn (\r\n\t\t<Tabs id=\"control-panel\">\r\n\t\t\t<Tab eventKey=\"variables\" title=\"Variables\">\r\n\t\t\t\t<Variables boundaries={props.boundaries} utilConstants={props.utilConstants} utilGlobalVars={props.utilGlobalVars} onUtilConstantUpdated={props.onUtilConstantUpdated} />\r\n\t\t\t</Tab>\r\n\r\n\t\t\t<Tab eventKey=\"functions\" title=\"Functions\">\r\n\t\t\t\t<h5>Utility functions</h5>\r\n\t\t\t\t{ props.utilFunctions.map((func, i) =>\r\n\t\t\t\t\t<InputGroup className=\"mb-1\" key={i}>\r\n\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t<InputGroup.Text>\r\n\t\t\t\t\t\t\t\t<MathJax.Node inline>{`U_${func.utilVar}=${func.expression}`}</MathJax.Node>\r\n\t\t\t\t\t\t\t</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tplaceholder=\"Function (in ASCIImath)\"\r\n\t\t\t\t\t\t\taria-label=\"Function (in ASCIImath)\"\r\n\t\t\t\t\t\t\tonChange={ (e: React.ChangeEvent<HTMLInputElement>) => e.currentTarget.value && props.onUtilFunctionUpdated(i, e.currentTarget.value) }\r\n\t\t\t\t\t\t\tvalue={func.expression}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InputGroup.Append>\r\n\t\t\t\t\t\t\t<Dropdown>\r\n\t\t\t\t\t\t\t\t<Dropdown.Toggle id={`util-var-dropdown-${i}`} variant=\"dark\" style={{borderRadius: 0}}>\r\n\t\t\t\t\t\t\t\t\t<MathJax.Node inline>{func.utilVar}</MathJax.Node>\r\n\t\t\t\t\t\t\t\t</Dropdown.Toggle>\r\n\r\n\t\t\t\t\t\t\t\t<Dropdown.Menu>\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Header>Utility variable</Dropdown.Header>\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onSelect={() => { props.onUtilVarUpdated(i, \"x\") }}>\r\n\t\t\t\t\t\t\t\t\t\t<MathJax.Node inline>x</MathJax.Node>\r\n\t\t\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Divider />\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tObject.keys(vars).map((key, j) =>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item key={j} onSelect={() => { props.onUtilVarUpdated(i, key) }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MathJax.Node>{key}</MathJax.Node>\r\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</Dropdown.Menu>\t\r\n\t\t\t\t\t\t\t</Dropdown>\r\n\r\n\t\t\t\t\t\t\t<Button onClick={() => props.onChangeColorClicked(i)} style={{backgroundColor: func.color}}><FontAwesomeIcon icon=\"palette\"/></Button>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tprops.showColorPicker && props.colorIndex === i &&\r\n\t\t\t\t\t\t\t\t<div style={ popover }>\r\n\t\t\t\t\t\t\t\t\t<div style={ cover } onClick={ () => props.onChangeColorClicked(undefined) }/>\r\n\t\t\t\t\t\t\t\t\t<ReactColor.SketchPicker disableAlpha={true} color={func.color} onChange={props.onColorUpdated} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t<Button variant=\"danger\" onClick={ () => props.onUtilFunctionDeleted(i) }>\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"trash\"/>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</InputGroup.Append>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t) }\r\n\t\t\t\t<Button className=\"mb-2\" variant=\"success\" onClick={props.onUtilFunctionAdded}><FontAwesomeIcon icon=\"plus\"/>&nbsp;Add function</Button>\r\n\r\n\t\t\t\t<h5>Local utility</h5>\r\n\t\t\t\t<InputGroup className=\"mb-1\">\r\n\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t<InputGroup.Text>\r\n\t\t\t\t\t\t\t<MathJax.Node inline>{`U_i=${props.utilServer.expression}`}</MathJax.Node>\r\n\t\t\t\t\t\t</InputGroup.Text>\r\n\t\t\t\t\t</InputGroup.Prepend>\r\n\r\n\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\tplaceholder=\"Function (in ASCIImath)\"\r\n\t\t\t\t\t\taria-label=\"Function (in ASCIImath)\"\r\n\t\t\t\t\t\tonChange={ (e: React.ChangeEvent<HTMLInputElement>) => e.currentTarget.value && props.onServerUtilFunctionUpdated(e.currentTarget.value) }\r\n\t\t\t\t\t\tvalue={props.utilServer.expression}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputGroup>\r\n\t\t\t\t<Table hover striped size=\"sm\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Server</th>\r\n\t\t\t\t\t\t\t<th><MathJax.Node>U_i</MathJax.Node></th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t{ props.boundaries.map((b, i) =>\r\n\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t\t<td>{i}</td>\r\n\t\t\t\t\t\t\t<td><MathJax.Node>{ serverUtilValues[i].toFixed(2) }</MathJax.Node></td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t) }\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</Table>\r\n\r\n\t\t\t\t<h5>Global utility</h5>\r\n\t\t\t\t<MathJax.Node>U_g = U_0 + U_1 + ... + U_n</MathJax.Node>\r\n\t\t\t\t= {globalUtilValue}\r\n\t\t\t</Tab>\r\n\r\n\t\t\t<Tab eventKey=\"boundaries\" title=\"Boundaries\">\r\n\t\t\t\t<Table hover striped size=\"sm\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>Server</td>\r\n\t\t\t\t\t\t\t<td><MathJax.Node>x_1</MathJax.Node></td>\r\n\t\t\t\t\t\t\t<td><MathJax.Node>y_1</MathJax.Node></td>\r\n\t\t\t\t\t\t\t<td><MathJax.Node>x_2</MathJax.Node></td>\r\n\t\t\t\t\t\t\t<td><MathJax.Node>y_2</MathJax.Node></td>\r\n\t\t\t\t\t\t\t<td>Width</td>\r\n\t\t\t\t\t\t\t<td>Height</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t{ props.boundaries.map((b, i) =>\r\n\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t\t\t<td>{i}</td>\r\n\t\t\t\t\t\t\t<td>{b.bounds.min.x.toFixed(2)}</td>\r\n\t\t\t\t\t\t\t<td>{b.bounds.min.y.toFixed(2)}</td>\r\n\t\t\t\t\t\t\t<td>{b.bounds.max.x.toFixed(2)}</td>\r\n\t\t\t\t\t\t\t<td>{b.bounds.max.y.toFixed(2)}</td>\r\n\t\t\t\t\t\t\t<td>{(b.bounds.max.x - b.bounds.min.x).toFixed(2)}</td>\r\n\t\t\t\t\t\t\t<td>{(b.bounds.max.y - b.bounds.min.y).toFixed(2)}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t</Tab>\r\n\t\t</Tabs>\r\n\t)\r\n}\r\n\r\nexport default ControlPanel","///<reference path=\"./types/types.d.ts\" />\r\n\r\nimport * as React from 'react'\r\nimport { Scatter } from 'react-chartjs-2'\r\nimport * as chartjs from 'chart.js'\r\nimport memoize from 'memoize-one'\r\n\r\nimport { evaluateUtilFunction } from './util'\r\n\r\ninterface FunctionPlotProps {\r\n    // width: number,\r\n    // height: number,\r\n    boundaries: Array<Boundary>,\r\n    utilFunctions: Array<SubUtilityFunction>,\r\n    utilConstants: UtilityConstants,\r\n    utilGlobalVars: UtilityVariables\r\n}\r\n\r\ninterface FunctionPlotState {\r\n    // width: number,\r\n    // height: number,\r\n    xRange: Array<number>,\r\n    yRange: Array<number>\r\n}\r\n\r\nexport default class FunctionPlot extends React.Component<FunctionPlotProps, FunctionPlotState> {\r\n    constructor(props: FunctionPlotProps) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            //width: props.width,\r\n            //height: props.height,\r\n            xRange: [0, 1],\r\n            yRange: [0, 1],\r\n        }\r\n    }\r\n\r\n    // Memoized function returns cached results when arguments are the same as the last call\r\n    private updateCurves = memoize((funcs: Array<SubUtilityFunction>, constants, globalVars) => {\r\n        const numSteps = 100\r\n        const stepSize = (this.state.xRange[1] - this.state.xRange[0]) / numSteps\r\n\r\n        // Plot curves\r\n        let datasets = new Array<chartjs.ChartDataSets>()\r\n        funcs.forEach(func => {\r\n            if (!func.evalFunc)\r\n                return\r\n\r\n            let dataset: chartjs.ChartDataSets = {\r\n                label: `U(${func.utilVar})`,\r\n                fill: false,\r\n                showLine: true,\r\n                pointRadius: 0,\r\n                pointHitRadius: 2,\r\n                backgroundColor: func.color,\r\n                borderColor: func.color,\r\n                borderWidth: 2\r\n            }\r\n\r\n            dataset.data = new Array<chartjs.ChartPoint>(numSteps)\r\n\r\n            try {\r\n                for (let x: number = this.state.xRange[0]; x <= this.state.xRange[1]; x += stepSize) {\r\n                    const y: number = func.evalFunc({\r\n                        [func.utilVar]: x,\r\n\r\n                        // Non-boundary variables\r\n                        ...constants,\r\n                        ...globalVars\r\n                    })\r\n\r\n                    dataset.data.push({x, y})\r\n                }\r\n                datasets.push(dataset)\r\n            } catch(e) {\r\n                // Skip this function\r\n            }\r\n        })\r\n\r\n        return datasets\r\n    })\r\n\r\n    private updatePoints = memoize((\r\n        boundaries: Array<Boundary>,\r\n        funcs: Array<SubUtilityFunction>,\r\n        constants: UtilityConstants,\r\n        globalVars: UtilityVariables) => {\r\n            let datasets = new Array<chartjs.ChartDataSets>()\r\n\r\n            funcs.forEach(func => {\r\n                if (!func.evalFunc || func.utilVar === 'x')\r\n                    return\r\n\r\n                try {\r\n                boundaries.forEach((b, i) => {\r\n                    const x = b.vars[func.utilVar]\r\n                    const y = evaluateUtilFunction(func, b, constants, globalVars)\r\n\r\n                    datasets.push({\r\n                        label: `B${i} U(${func.utilVar})`,\r\n                        fill: true,\r\n                        showLine: false,\r\n                        pointRadius: 6,\r\n                        pointStyle: 'circle',\r\n                        pointHitRadius: 2,\r\n                        backgroundColor: b.color,\r\n                        borderColor: func.color,\r\n                        data: [{x, y}]\r\n                    })\r\n                })\r\n                } catch(e) {\r\n                    // Skip this function\r\n                }\r\n            })\r\n\r\n        return datasets\r\n    })\r\n\r\n    render() {\r\n        const curves = this.updateCurves(this.props.utilFunctions, this.props.utilConstants, this.props.utilGlobalVars)\r\n        const points = this.updatePoints(this.props.boundaries, this.props.utilFunctions, this.props.utilConstants, this.props.utilGlobalVars)\r\n        const data = { datasets: points.concat(curves) }\r\n\r\n        return (\r\n            <Scatter\r\n                data={ data }\r\n                //width={ this.state.width }\r\n                //height={ this.state.height }\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    animation: {\r\n                        duration: 0\r\n                    }\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n","/**\r\n* Custom Matter.js Canvas renderer based on Matter.Render.\r\n*\r\n* @class RenderAuraProj\r\n*/\r\n\r\nimport Bounds from 'matter-js/src/geometry/Bounds'\r\nimport Common from 'matter-js/src/core/Common'\r\nimport Composite from 'matter-js/src/body/Composite'\r\nimport Events from 'matter-js/src/core/Events'\r\nimport Grid from 'matter-js/src/collision/Grid'\r\nimport Mouse from 'matter-js/src/core/Mouse'\r\nimport Vector from 'matter-js/src/geometry/Vector'\r\nimport { round } from 'lodash'\r\n\r\nexport class RenderAuraProj {\r\n    static _requestAnimationFrame = (() => {\r\n        if (typeof window !== 'undefined') {\r\n            return  window.requestAnimationFrame ||\r\n                    window.webkitRequestAnimationFrame ||\r\n                    window.mozRequestAnimationFrame ||\r\n                    window.msRequestAnimationFrame ||\r\n                    function(callback) { window.setTimeout(function() { callback(Common.now()) }, 1000 / 60) }\r\n                    \r\n        }\r\n    })()\r\n                                \r\n    static _cancelAnimationFrame = (() => {\r\n        if (typeof window !== 'undefined') {\r\n            return  window.cancelAnimationFrame ||\r\n                    window.mozCancelAnimationFrame ||\r\n                    window.webkitCancelAnimationFrame ||\r\n                    window.msCancelAnimationFrame\r\n        }\r\n    })()\r\n\r\n    bounds\r\n    canvas\r\n    context\r\n    currentBackground\r\n    engine\r\n    frame\r\n    frameRequestId\r\n    mouse\r\n    options\r\n    textures\r\n\r\n    /**\r\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\r\n     * See the properties section below for detailed information on what you can pass via the `options` object.\r\n     * @method create\r\n     * @param {object} [options]\r\n     * @return {render} A new renderer\r\n     */\r\n    static create(options) {\r\n        var defaults = {\r\n            controller: RenderAuraProj,\r\n            engine: null,\r\n            element: null,\r\n            canvas: null,\r\n            mouse: null,\r\n            frameRequestId: null,\r\n            options: {\r\n                width: 800,\r\n                height: 600,\r\n                pixelRatio: 1,\r\n                background: '#18181d',\r\n                wireframeBackground: '#0f0f13',\r\n                gridSize: 50,\r\n                hasBounds: !!options.bounds,\r\n                enabled: true,\r\n                wireframes: true,\r\n                showSleeping: true,\r\n                showDebug: false,\r\n                showBroadphase: false,\r\n                showBounds: false,\r\n                showVelocity: false,\r\n                showCollisions: false,\r\n                showSeparations: false,\r\n                showAxes: false,\r\n                showPositions: false,\r\n                showAngleIndicator: false,\r\n                showIds: false,\r\n                showShadows: false,\r\n                showVertexNumbers: false,\r\n                showConvexHulls: false,\r\n                showInternalEdges: false,\r\n                showMousePosition: false,\r\n                showGrid: true,\r\n                crosshairSnap: false,\r\n            }\r\n        };\r\n\r\n        var render = Common.extend(defaults, options);\r\n\r\n        if (render.canvas) {\r\n            render.canvas.width = render.options.width || render.canvas.width;\r\n            render.canvas.height = render.options.height || render.canvas.height;\r\n        }\r\n\r\n        render.mouse = options.mouse;\r\n        render.engine = options.engine;\r\n        render.canvas = render.canvas || RenderAuraProj._createCanvas(render.options.width, render.options.height);\r\n        render.context = render.canvas.getContext('2d');\r\n        render.textures = {};\r\n\r\n        render.bounds = render.bounds || {\r\n            min: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            max: {\r\n                x: render.canvas.width,\r\n                y: render.canvas.height\r\n            }\r\n        };\r\n\r\n        if (render.options.pixelRatio !== 1) {\r\n            RenderAuraProj.setPixelRatio(render, render.options.pixelRatio);\r\n        }\r\n\r\n        if (Common.isElement(render.element)) {\r\n            render.element.appendChild(render.canvas);\r\n        } else if (!render.canvas.parentNode) {\r\n            Common.log('RenderAuraProj.create: options.element was undefined, render.canvas was created but not appended', 'warn');\r\n        }\r\n\r\n        return render;\r\n    }\r\n\r\n    /**\r\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\r\n     * @method run\r\n     * @param {render} render\r\n     */\r\n    static run(render) {\r\n        (function loop(time){\r\n            render.frameRequestId = RenderAuraProj._requestAnimationFrame.call(window, loop);\r\n            RenderAuraProj.world(render);\r\n        })();\r\n    };\r\n\r\n    /**\r\n     * Ends execution of `RenderAuraProj.run` on the given `render`, by canceling the animation frame request event loop.\r\n     * @method stop\r\n     * @param {render} render\r\n     */\r\n    static stop(render) {\r\n        RenderAuraProj._cancelAnimationFrame.call(window, render.frameRequestId);\r\n    };\r\n\r\n    /**\r\n     * Sets the pixel ratio of the renderer and updates the canvas.\r\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\r\n     * @method setPixelRatio\r\n     * @param {render} render\r\n     * @param {number} pixelRatio\r\n     */\r\n    static setPixelRatio(render, pixelRatio) {\r\n        var options = render.options,\r\n            canvas = render.canvas;\r\n\r\n        if (pixelRatio === 'auto') {\r\n            pixelRatio = RenderAuraProj._getPixelRatio(canvas);\r\n        }\r\n\r\n        options.pixelRatio = pixelRatio;\r\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\r\n        canvas.width = options.width * pixelRatio;\r\n        canvas.height = options.height * pixelRatio;\r\n        canvas.style.width = options.width + 'px';\r\n        canvas.style.height = options.height + 'px';\r\n    };\r\n\r\n    /**\r\n     * Positions and sizes the viewport around the given object bounds.\r\n     * Objects must have at least one of the following properties:\r\n     * - `object.bounds`\r\n     * - `object.position`\r\n     * - `object.min` and `object.max`\r\n     * - `object.x` and `object.y`\r\n     * @method lookAt\r\n     * @param {render} render\r\n     * @param {object[]} objects\r\n     * @param {vector} [padding]\r\n     * @param {bool} [center=true]\r\n     */\r\n    static lookAt(render, objects, padding, center) {\r\n        center = typeof center !== 'undefined' ? center : true;\r\n        objects = Common.isArray(objects) ? objects : [objects];\r\n        padding = padding || {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n\r\n        // find bounds of all objects\r\n        var bounds = {\r\n            min: { x: Infinity, y: Infinity },\r\n            max: { x: -Infinity, y: -Infinity }\r\n        };\r\n\r\n        for (var i = 0; i < objects.length; i += 1) {\r\n            var object = objects[i],\r\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\r\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\r\n\r\n            if (min && max) {\r\n                if (min.x < bounds.min.x)\r\n                    bounds.min.x = min.x;\r\n\r\n                if (max.x > bounds.max.x)\r\n                    bounds.max.x = max.x;\r\n\r\n                if (min.y < bounds.min.y)\r\n                    bounds.min.y = min.y;\r\n\r\n                if (max.y > bounds.max.y)\r\n                    bounds.max.y = max.y;\r\n            }\r\n        }\r\n\r\n        // find ratios\r\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\r\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\r\n            viewHeight = render.canvas.height,\r\n            viewWidth = render.canvas.width,\r\n            outerRatio = viewWidth / viewHeight,\r\n            innerRatio = width / height,\r\n            scaleX = 1,\r\n            scaleY = 1;\r\n\r\n        // find scale factor\r\n        if (innerRatio > outerRatio) {\r\n            scaleY = innerRatio / outerRatio;\r\n        } else {\r\n            scaleX = outerRatio / innerRatio;\r\n        }\r\n\r\n        // enable bounds\r\n        render.options.hasBounds = true;\r\n\r\n        // position and size\r\n        render.bounds.min.x = bounds.min.x;\r\n        render.bounds.max.x = bounds.min.x + width * scaleX;\r\n        render.bounds.min.y = bounds.min.y;\r\n        render.bounds.max.y = bounds.min.y + height * scaleY;\r\n\r\n        // center\r\n        if (center) {\r\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\r\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\r\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\r\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\r\n        }\r\n\r\n        // padding\r\n        render.bounds.min.x -= padding.x;\r\n        render.bounds.max.x -= padding.x;\r\n        render.bounds.min.y -= padding.y;\r\n        render.bounds.max.y -= padding.y;\r\n\r\n        // update mouse\r\n        if (render.mouse) {\r\n            Mouse.setScale(render.mouse, {\r\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\r\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\r\n            });\r\n\r\n            Mouse.setOffset(render.mouse, render.bounds.min);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Applies viewport transforms based on `render.bounds` to a render context.\r\n     * @method startViewTransform\r\n     * @param {render} render\r\n     */\r\n    static startViewTransform(render) {\r\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\r\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\r\n            boundsScaleX = boundsWidth / render.options.width,\r\n            boundsScaleY = boundsHeight / render.options.height;\r\n\r\n        render.context.setTransform(\r\n            render.options.pixelRatio / boundsScaleX, 0, 0, \r\n            render.options.pixelRatio / boundsScaleY, 0, 0\r\n        );\r\n        \r\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\r\n    };\r\n\r\n    /**\r\n     * Resets all transforms on the render context.\r\n     * @method endViewTransform\r\n     * @param {render} render\r\n     */\r\n    static endViewTransform(render) {\r\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\r\n    };\r\n\r\n    static drawGrid(render, context) {\r\n\t\tconst gridSize = render.options.gridSize\r\n\t\tconst canvasWidth = render.canvas.width\r\n\t\tconst canvasHeight = render.canvas.height\r\n\t\tconst bounds = render.bounds\r\n\r\n\t\t// Convert between viewport/canvas coords\r\n\t\tconst boundsWidth = (bounds.max.x - bounds.min.x)\r\n\t\tconst boundsHeight = (bounds.max.y - bounds.min.y)\r\n\t\tconst scale = canvasWidth / boundsWidth\r\n\r\n\t\tconst xOriginOffset = -bounds.min.x\r\n\t\tconst yOriginOffset = -bounds.min.y\r\n\r\n\t\tconst xGridOffset = RenderAuraProj._mod(xOriginOffset, gridSize)\r\n\t\tconst yGridOffset = RenderAuraProj._mod(yOriginOffset, gridSize)\r\n\r\n\t\tconst gridStrokeStyle = 'rgb(128, 128, 255, 0.2)'\r\n\t\tconst originStrokeStyle = 'rgb(255, 128, 128, 0.5)'\r\n\r\n\t\tcontext.lineWidth = 1\r\n\t\tcontext.setLineDash([])\r\n        context.strokeStyle = gridStrokeStyle\r\n        context.fillStyle = 'black'\r\n\r\n\t\tconst drawXGridLine = (x, label) => {\r\n\t\t\tx = RenderAuraProj._roundDrawCoord(x)\r\n\t\t\tcontext.beginPath()\r\n\t\t\tcontext.moveTo(x, 0)\r\n\t\t\tcontext.lineTo(x, canvasHeight)\r\n\t\t\tcontext.stroke()\r\n\r\n\t\t\tcontext.fillText(label, x + 2, canvasHeight - 2)\r\n\t\t}\r\n\r\n\t\tconst drawYGridLine = (y, label) => {\r\n\t\t\ty = RenderAuraProj._roundDrawCoord(y)\r\n\t\t\tcontext.beginPath()\r\n\t\t\tcontext.moveTo(0, y)\r\n\t\t\tcontext.lineTo(canvasWidth, y)\r\n\t\t\tcontext.stroke()\r\n\r\n\t\t\tcontext.fillText(label, 0, y + 2)\r\n\t\t}\r\n\r\n\t\t// Axis labels\r\n\t\tvar xLabel = Math.floor(bounds.min.x / gridSize) * gridSize\r\n\t\tvar yLabel = Math.floor(bounds.min.y / gridSize) * gridSize\r\n\t\tif (xGridOffset !== 0) xLabel += gridSize\r\n\t\tif (yGridOffset !== 0) yLabel += gridSize\r\n\r\n\t\tfor (var x = xGridOffset; x < boundsWidth; x += gridSize, xLabel += gridSize) {\r\n\t\t\tif (RenderAuraProj._almostEqual(x, xOriginOffset)) {\r\n\t\t\t\t// Red origin line\r\n\t\t\t\tcontext.save()\r\n\t\t\t\tcontext.strokeStyle = originStrokeStyle\r\n\t\t\t\tdrawXGridLine(x * scale, xLabel)\r\n\t\t\t\tcontext.restore()\r\n\t\t\t}\r\n\t\t\telse drawXGridLine(x * scale, xLabel)\r\n\t\t}\r\n\r\n\t\tfor (var y = yGridOffset; y < boundsHeight; y += gridSize, yLabel += gridSize) {\r\n\t\t\tif (RenderAuraProj._almostEqual(y, yOriginOffset)) {\r\n\t\t\t\t// Red origin line\r\n\t\t\t\tcontext.save()\r\n\t\t\t\tcontext.strokeStyle = originStrokeStyle\r\n\t\t\t\tdrawYGridLine(y * scale, yLabel)\r\n\t\t\t\tcontext.restore()\r\n\t\t\t}\r\n\t\t\telse drawYGridLine(y * scale, yLabel)\r\n\t\t}\r\n    };\r\n\r\n    static drawCrosshair(render, context) {\r\n\t\tconst scale = render.canvas.width / (render.bounds.max.x - render.bounds.min.x)\r\n        const gridSize = render.options.gridSize\r\n\r\n\t\tif (!render.mouse)\r\n\t\t\treturn\r\n\r\n\t\tvar crosshairX = render.mouse.position.x\r\n        var crosshairY = render.mouse.position.y\r\n\r\n\t\tif (render.options.crosshairSnap) {\r\n\t\t\tcrosshairX = Math.round(crosshairX / gridSize) * gridSize\r\n\t\t\tcrosshairY = Math.round(crosshairY / gridSize) * gridSize\r\n\t\t}\r\n\r\n\t\tconst drawX = RenderAuraProj._roundDrawCoord((crosshairX - render.bounds.min.x) * scale)\r\n\t\tconst drawY = RenderAuraProj._roundDrawCoord((crosshairY - render.bounds.min.y) * scale)\r\n\r\n        context.setLineDash([5, 8])\r\n        context.lineWidth = 1\r\n        context.strokeStyle = 'black'\r\n        context.fillStyle = 'black'\r\n        \r\n\t\tcontext.beginPath()\r\n\t\tcontext.moveTo(drawX, 0)\r\n\t\tcontext.lineTo(drawX, render.canvas.height)\r\n\t\tcontext.stroke()\r\n\r\n\t\tcontext.beginPath()\r\n\t\tcontext.moveTo(0, drawY)\r\n\t\tcontext.lineTo(render.canvas.width, drawY)\r\n\t\tcontext.stroke()\r\n\r\n\t\t// Draw coordinates\r\n\t\tcontext.fillText(`${round(crosshairX, 2)}, ${round(crosshairY, 2)}`, drawX + 10, drawY - 10)\r\n    };\r\n\r\n    /**\r\n     * Renders the given `engine`'s `Matter.World` object.\r\n     * This is the entry point for all rendering and should be called every time the scene changes.\r\n     * @method world\r\n     * @param {render} render\r\n     */\r\n    static world(render) {\r\n        var engine = render.engine,\r\n            world = engine.world,\r\n            canvas = render.canvas,\r\n            context = render.context,\r\n            options = render.options,\r\n            allBodies = Composite.allBodies(world),\r\n            allConstraints = Composite.allConstraints(world),\r\n            background = options.wireframes ? options.wireframeBackground : options.background,\r\n            bodies = [],\r\n            constraints = [],\r\n            i;\r\n\r\n        var event = {\r\n            timestamp: engine.timing.timestamp\r\n        };\r\n\r\n        Events.trigger(render, 'beforeRender', event);\r\n\r\n        // apply background if it has changed\r\n        if (render.currentBackground !== background)\r\n            RenderAuraProj._applyBackground(render, background);\r\n\r\n        // clear the canvas with a transparent fill, to allow the canvas background to show\r\n        context.globalCompositeOperation = 'source-in';\r\n        context.fillStyle = \"transparent\";\r\n        context.fillRect(0, 0, canvas.width, canvas.height);\r\n        context.globalCompositeOperation = 'source-over';\r\n\r\n        // Render grid\r\n        if (render.options.showGrid)\r\n            RenderAuraProj.drawGrid(render, context);\r\n\r\n        Events.trigger(render, 'beforeObjects', event);\r\n\r\n        // handle bounds\r\n        if (options.hasBounds) {\r\n            // filter out bodies that are not in view\r\n            for (i = 0; i < allBodies.length; i++) {\r\n                var body = allBodies[i];\r\n                if (Bounds.overlaps(body.bounds, render.bounds))\r\n                    bodies.push(body);\r\n            }\r\n\r\n            // filter out constraints that are not in view\r\n            for (i = 0; i < allConstraints.length; i++) {\r\n                var constraint = allConstraints[i],\r\n                    bodyA = constraint.bodyA,\r\n                    bodyB = constraint.bodyB,\r\n                    pointAWorld = constraint.pointA,\r\n                    pointBWorld = constraint.pointB;\r\n\r\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\r\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\r\n\r\n                if (!pointAWorld || !pointBWorld)\r\n                    continue;\r\n\r\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\r\n                    constraints.push(constraint);\r\n            }\r\n\r\n            // transform the view\r\n            RenderAuraProj.startViewTransform(render);\r\n\r\n            // update mouse\r\n            if (render.mouse) {\r\n                Mouse.setScale(render.mouse, {\r\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.options.width,\r\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.options.height\r\n                });\r\n\r\n                Mouse.setOffset(render.mouse, render.bounds.min);\r\n            }\r\n        } else {\r\n            constraints = allConstraints;\r\n            bodies = allBodies;\r\n\r\n            if (render.options.pixelRatio !== 1) {\r\n                render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\r\n            }\r\n        }\r\n\r\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\r\n            // fully featured rendering of bodies\r\n            RenderAuraProj.bodies(render, bodies, context);\r\n        } else {\r\n            if (options.showConvexHulls)\r\n                RenderAuraProj.bodyConvexHulls(render, bodies, context);\r\n\r\n            // optimised method for wireframes only\r\n            RenderAuraProj.bodyWireframes(render, bodies, context);\r\n        }\r\n\r\n        if (options.showBounds)\r\n            RenderAuraProj.bodyBounds(render, bodies, context);\r\n\r\n        if (options.showAxes || options.showAngleIndicator)\r\n            RenderAuraProj.bodyAxes(render, bodies, context);\r\n\r\n        if (options.showPositions)\r\n            RenderAuraProj.bodyPositions(render, bodies, context);\r\n\r\n        if (options.showVelocity)\r\n            RenderAuraProj.bodyVelocity(render, bodies, context);\r\n\r\n        if (options.showIds)\r\n            RenderAuraProj.bodyIds(render, bodies, context);\r\n\r\n        if (options.showSeparations)\r\n            RenderAuraProj.separations(render, engine.pairs.list, context);\r\n\r\n        if (options.showCollisions)\r\n            RenderAuraProj.collisions(render, engine.pairs.list, context);\r\n\r\n        if (options.showVertexNumbers)\r\n            RenderAuraProj.vertexNumbers(render, bodies, context);\r\n\r\n        if (options.showMousePosition)\r\n            RenderAuraProj.mousePosition(render, render.mouse, context);\r\n\r\n        RenderAuraProj.constraints(constraints, context);\r\n\r\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\r\n            RenderAuraProj.grid(render, engine.broadphase, context);\r\n\r\n        if (options.showDebug)\r\n            RenderAuraProj.debug(render, context);\r\n\r\n        if (options.hasBounds) {\r\n            // revert view transforms\r\n            RenderAuraProj.endViewTransform(render);\r\n        }\r\n\r\n        Events.trigger(render, 'afterRender', event);\r\n\r\n        // Render crosshair\r\n        if (render.options.showCrosshair)\r\n            RenderAuraProj.drawCrosshair(render, context);\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method debug\r\n     * @param {render} render\r\n     * @param {RenderingContext} context\r\n     */\r\n    static debug(render, context) {\r\n        var c = context,\r\n            engine = render.engine,\r\n            world = engine.world,\r\n            metrics = engine.metrics,\r\n            options = render.options,\r\n            bodies = Composite.allBodies(world),\r\n            space = \"    \";\r\n\r\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\r\n            var text = \"\";\r\n\r\n            if (metrics.timing) {\r\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\r\n            }\r\n\r\n            // @if DEBUG\r\n            if (metrics.extended) {\r\n                if (metrics.timing) {\r\n                    text += \"delta: \" + metrics.timing.delta.toFixed(3) + space;\r\n                    text += \"correction: \" + metrics.timing.correction.toFixed(3) + space;\r\n                }\r\n\r\n                text += \"bodies: \" + bodies.length + space;\r\n\r\n                if (engine.broadphase.controller === Grid)\r\n                    text += \"buckets: \" + metrics.buckets + space;\r\n\r\n                text += \"\\n\";\r\n\r\n                text += \"collisions: \" + metrics.collisions + space;\r\n                text += \"pairs: \" + engine.pairs.list.length + space;\r\n                text += \"broad: \" + metrics.broadEff + space;\r\n                text += \"mid: \" + metrics.midEff + space;\r\n                text += \"narrow: \" + metrics.narrowEff + space;\r\n            }\r\n            // @endif\r\n\r\n            render.debugString = text;\r\n            render.debugTimestamp = engine.timing.timestamp;\r\n        }\r\n\r\n        if (render.debugString) {\r\n            c.font = \"12px Arial\";\r\n\r\n            if (options.wireframes) {\r\n                c.fillStyle = 'rgba(255,255,255,0.5)';\r\n            } else {\r\n                c.fillStyle = 'rgba(0,0,0,0.5)';\r\n            }\r\n\r\n            var split = render.debugString.split('\\n');\r\n\r\n            for (var i = 0; i < split.length; i++) {\r\n                c.fillText(split[i], 50, 50 + i * 18);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method constraints\r\n     * @param {constraint[]} constraints\r\n     * @param {RenderingContext} context\r\n     */\r\n    static constraints(constraints, context) {\r\n        var c = context;\r\n\r\n        for (var i = 0; i < constraints.length; i++) {\r\n            var constraint = constraints[i];\r\n\r\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\r\n                continue;\r\n\r\n            var bodyA = constraint.bodyA,\r\n                bodyB = constraint.bodyB,\r\n                start,\r\n                end;\r\n\r\n            if (bodyA) {\r\n                start = Vector.add(bodyA.position, constraint.pointA);\r\n            } else {\r\n                start = constraint.pointA;\r\n            }\r\n\r\n            if (constraint.render.type === 'pin') {\r\n                c.beginPath();\r\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\r\n                c.closePath();\r\n            } else {\r\n                if (bodyB) {\r\n                    end = Vector.add(bodyB.position, constraint.pointB);\r\n                } else {\r\n                    end = constraint.pointB;\r\n                }\r\n\r\n                c.beginPath();\r\n                c.moveTo(start.x, start.y);\r\n\r\n                if (constraint.render.type === 'spring') {\r\n                    var delta = Vector.sub(end, start),\r\n                        normal = Vector.perp(Vector.normalise(delta)),\r\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\r\n                        offset;\r\n\r\n                    for (var j = 1; j < coils; j += 1) {\r\n                        offset = j % 2 === 0 ? 1 : -1;\r\n\r\n                        c.lineTo(\r\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\r\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\r\n                        );\r\n                    }\r\n                }\r\n\r\n                c.lineTo(end.x, end.y);\r\n            }\r\n\r\n            if (constraint.render.lineWidth) {\r\n                c.lineWidth = constraint.render.lineWidth;\r\n                c.strokeStyle = constraint.render.strokeStyle;\r\n                c.stroke();\r\n            }\r\n\r\n            if (constraint.render.anchors) {\r\n                c.fillStyle = constraint.render.strokeStyle;\r\n                c.beginPath();\r\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\r\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\r\n                c.closePath();\r\n                c.fill();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method bodyShadows\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    static bodyShadows(render, bodies, context) {\r\n        var c = context;\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (!body.render.visible)\r\n                continue;\r\n\r\n            if (body.circleRadius) {\r\n                c.beginPath();\r\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\r\n                c.closePath();\r\n            } else {\r\n                c.beginPath();\r\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\r\n                for (var j = 1; j < body.vertices.length; j++) {\r\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\r\n                }\r\n                c.closePath();\r\n            }\r\n\r\n            var distanceX = body.position.x - render.options.width * 0.5,\r\n                distanceY = body.position.y - render.options.height * 0.2,\r\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\r\n\r\n            c.shadowColor = 'rgba(0,0,0,0.15)';\r\n            c.shadowOffsetX = 0.05 * distanceX;\r\n            c.shadowOffsetY = 0.05 * distanceY;\r\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\r\n\r\n            c.fill();\r\n\r\n            c.shadowColor = null;\r\n            c.shadowOffsetX = null;\r\n            c.shadowOffsetY = null;\r\n            c.shadowBlur = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method bodies\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    static bodies(render, bodies, context) {\r\n        var c = context,\r\n            options = render.options,\r\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\r\n            body,\r\n            part,\r\n            i,\r\n            k;\r\n\r\n        for (i = 0; i < bodies.length; i++) {\r\n            body = bodies[i];\r\n\r\n            if (!body.render.visible)\r\n                continue;\r\n\r\n            // handle compound parts\r\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\r\n                part = body.parts[k];\r\n\r\n                if (!part.render.visible)\r\n                    continue;\r\n\r\n                // if (options.showSleeping && body.isSleeping) {\r\n                //     c.globalAlpha = 0.5 * part.render.opacity;\r\n                // } else if (part.render.opacity !== 1) {\r\n                //     c.globalAlpha = part.render.opacity;\r\n                // }\r\n\r\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\r\n                    // part sprite\r\n                    var sprite = part.render.sprite,\r\n                        texture = RenderAuraProj._getTexture(render, sprite.texture);\r\n\r\n                    c.translate(part.position.x, part.position.y);\r\n                    c.rotate(part.angle);\r\n\r\n                    c.drawImage(\r\n                        texture,\r\n                        texture.width * -sprite.xOffset * sprite.xScale,\r\n                        texture.height * -sprite.yOffset * sprite.yScale,\r\n                        texture.width * sprite.xScale,\r\n                        texture.height * sprite.yScale\r\n                    );\r\n\r\n                    // revert translation, hopefully faster than save / restore\r\n                    c.rotate(-part.angle);\r\n                    c.translate(-part.position.x, -part.position.y);\r\n                } else {\r\n                    // part polygon\r\n                    if (part.circleRadius) {\r\n                        c.beginPath();\r\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\r\n                    } else {\r\n                        c.beginPath();\r\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\r\n\r\n                        for (var j = 1; j < part.vertices.length; j++) {\r\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\r\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\r\n                            } else {\r\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\r\n                            }\r\n\r\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\r\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\r\n                            }\r\n                        }\r\n\r\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\r\n                        c.closePath();\r\n                    }\r\n\r\n                    if (!options.wireframes) {\r\n                        if (options.showSleeping && body.isSleeping) {\r\n                            c.fillStyle = RenderAuraProj._colorLuminance(part.render.fillStyle, -0.2)\r\n                        } else {\r\n                            c.fillStyle = part.render.fillStyle;\r\n                        }\r\n\r\n                        if (part.render.lineWidth) {\r\n                            c.lineWidth = part.render.lineWidth;\r\n                            c.strokeStyle = part.render.strokeStyle;\r\n                            c.stroke();\r\n                        }\r\n\r\n                        c.fill();\r\n                    } else {\r\n                        c.lineWidth = 1;\r\n                        c.strokeStyle = '#bbb';\r\n                        c.stroke();\r\n                    }\r\n                }\r\n\r\n                c.globalAlpha = 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Optimised method for drawing body wireframes in one pass\r\n     * @private\r\n     * @method bodyWireframes\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    static bodyWireframes(render, bodies, context) {\r\n        var c = context,\r\n            showInternalEdges = render.options.showInternalEdges,\r\n            body,\r\n            part,\r\n            i,\r\n            j,\r\n            k;\r\n\r\n        c.beginPath();\r\n\r\n        // render all bodies\r\n        for (i = 0; i < bodies.length; i++) {\r\n            body = bodies[i];\r\n\r\n            if (!body.render.visible)\r\n                continue;\r\n\r\n            // handle compound parts\r\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\r\n                part = body.parts[k];\r\n\r\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\r\n\r\n                for (j = 1; j < part.vertices.length; j++) {\r\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\r\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\r\n                    } else {\r\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\r\n                    }\r\n\r\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\r\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\r\n                    }\r\n                }\r\n\r\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\r\n            }\r\n        }\r\n\r\n        c.lineWidth = 1;\r\n        c.strokeStyle = '#bbb';\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Optimised method for drawing body convex hull wireframes in one pass\r\n     * @private\r\n     * @method bodyConvexHulls\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    static bodyConvexHulls(render, bodies, context) {\r\n        var c = context,\r\n            body,\r\n            i,\r\n            j;\r\n\r\n        c.beginPath();\r\n\r\n        // render convex hulls\r\n        for (i = 0; i < bodies.length; i++) {\r\n            body = bodies[i];\r\n\r\n            if (!body.render.visible || body.parts.length === 1)\r\n                continue;\r\n\r\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\r\n\r\n            for (j = 1; j < body.vertices.length; j++) {\r\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\r\n            }\r\n\r\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\r\n        }\r\n\r\n        c.lineWidth = 1;\r\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Renders body vertex numbers.\r\n     * @private\r\n     * @method vertexNumbers\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    static vertexNumbers(render, bodies, context) {\r\n        var c = context,\r\n            i,\r\n            j,\r\n            k;\r\n\r\n        for (i = 0; i < bodies.length; i++) {\r\n            var parts = bodies[i].parts;\r\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\r\n                var part = parts[k];\r\n                for (j = 0; j < part.vertices.length; j++) {\r\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\r\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Renders mouse position.\r\n     * @private\r\n     * @method mousePosition\r\n     * @param {render} render\r\n     * @param {mouse} mouse\r\n     * @param {RenderingContext} context\r\n     */\r\n    static mousePosition(render, mouse, context) {\r\n        var c = context;\r\n        c.fillStyle = 'rgba(255,255,255,0.8)';\r\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\r\n    };\r\n\r\n    /**\r\n     * Draws body bounds\r\n     * @private\r\n     * @method bodyBounds\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    static bodyBounds(render, bodies, context) {\r\n        var c = context,\r\n            options = render.options;\r\n\r\n        c.beginPath();\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (body.render.visible) {\r\n                var parts = bodies[i].parts;\r\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\r\n                    var part = parts[j];\r\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (options.wireframes) {\r\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\r\n        } else {\r\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\r\n        }\r\n\r\n        c.lineWidth = 1;\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Draws body angle indicators and axes\r\n     * @private\r\n     * @method bodyAxes\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    static bodyAxes(render, bodies, context) {\r\n        var c = context,\r\n            options = render.options,\r\n            part,\r\n            i,\r\n            j,\r\n            k;\r\n\r\n        c.beginPath();\r\n\r\n        for (i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i],\r\n                parts = body.parts;\r\n\r\n            if (!body.render.visible)\r\n                continue;\r\n\r\n            if (options.showAxes) {\r\n                // render all axes\r\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\r\n                    part = parts[j];\r\n                    for (k = 0; k < part.axes.length; k++) {\r\n                        var axis = part.axes[k];\r\n                        c.moveTo(part.position.x, part.position.y);\r\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\r\n                    }\r\n                }\r\n            } else {\r\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\r\n                    part = parts[j];\r\n                    for (k = 0; k < part.axes.length; k++) {\r\n                        // render a single axis indicator\r\n                        c.moveTo(part.position.x, part.position.y);\r\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\r\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (options.wireframes) {\r\n            c.strokeStyle = 'indianred';\r\n            c.lineWidth = 1;\r\n        } else {\r\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\r\n            c.globalCompositeOperation = 'overlay';\r\n            c.lineWidth = 2;\r\n        }\r\n\r\n        c.stroke();\r\n        c.globalCompositeOperation = 'source-over';\r\n    };\r\n\r\n    /**\r\n     * Draws body positions\r\n     * @private\r\n     * @method bodyPositions\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    static bodyPositions(render, bodies, context) {\r\n        var c = context,\r\n            options = render.options,\r\n            body,\r\n            part,\r\n            i,\r\n            k;\r\n\r\n        c.beginPath();\r\n\r\n        // render current positions\r\n        for (i = 0; i < bodies.length; i++) {\r\n            body = bodies[i];\r\n\r\n            if (!body.render.visible)\r\n                continue;\r\n\r\n            // handle compound parts\r\n            for (k = 0; k < body.parts.length; k++) {\r\n                part = body.parts[k];\r\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\r\n                c.closePath();\r\n            }\r\n        }\r\n\r\n        if (options.wireframes) {\r\n            c.fillStyle = 'indianred';\r\n        } else {\r\n            c.fillStyle = 'rgba(0,0,0,0.5)';\r\n        }\r\n        c.fill();\r\n\r\n        c.beginPath();\r\n\r\n        // render previous positions\r\n        for (i = 0; i < bodies.length; i++) {\r\n            body = bodies[i];\r\n            if (body.render.visible) {\r\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\r\n                c.closePath();\r\n            }\r\n        }\r\n\r\n        c.fillStyle = 'rgba(255,165,0,0.8)';\r\n        c.fill();\r\n    };\r\n\r\n    /**\r\n     * Draws body velocity\r\n     * @private\r\n     * @method bodyVelocity\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    static bodyVelocity(render, bodies, context) {\r\n        var c = context;\r\n\r\n        c.beginPath();\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (!body.render.visible)\r\n                continue;\r\n\r\n            c.moveTo(body.position.x, body.position.y);\r\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\r\n        }\r\n\r\n        c.lineWidth = 3;\r\n        c.strokeStyle = 'cornflowerblue';\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Draws body ids\r\n     * @private\r\n     * @method bodyIds\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    static bodyIds(render, bodies, context) {\r\n        var c = context,\r\n            i,\r\n            j;\r\n\r\n        for (i = 0; i < bodies.length; i++) {\r\n            if (!bodies[i].render.visible)\r\n                continue;\r\n\r\n            var parts = bodies[i].parts;\r\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\r\n                var part = parts[j];\r\n                c.font = \"12px Arial\";\r\n                c.fillStyle = 'rgba(255,255,255,0.5)';\r\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method collisions\r\n     * @param {render} render\r\n     * @param {pair[]} pairs\r\n     * @param {RenderingContext} context\r\n     */\r\n    static collisions(render, pairs, context) {\r\n        var c = context,\r\n            options = render.options,\r\n            pair,\r\n            collision,\r\n            i,\r\n            j;\r\n\r\n        c.beginPath();\r\n\r\n        // render collision positions\r\n        for (i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n\r\n            if (!pair.isActive)\r\n                continue;\r\n\r\n            collision = pair.collision;\r\n            for (j = 0; j < pair.activeContacts.length; j++) {\r\n                var contact = pair.activeContacts[j],\r\n                    vertex = contact.vertex;\r\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\r\n            }\r\n        }\r\n\r\n        if (options.wireframes) {\r\n            c.fillStyle = 'rgba(255,255,255,0.7)';\r\n        } else {\r\n            c.fillStyle = 'orange';\r\n        }\r\n        c.fill();\r\n\r\n        c.beginPath();\r\n\r\n        // render collision normals\r\n        for (i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n\r\n            if (!pair.isActive)\r\n                continue;\r\n\r\n            collision = pair.collision;\r\n\r\n            if (pair.activeContacts.length > 0) {\r\n                var normalPosX = pair.activeContacts[0].vertex.x,\r\n                    normalPosY = pair.activeContacts[0].vertex.y;\r\n\r\n                if (pair.activeContacts.length === 2) {\r\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\r\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\r\n                }\r\n\r\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\r\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\r\n                } else {\r\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\r\n                }\r\n\r\n                c.lineTo(normalPosX, normalPosY);\r\n            }\r\n        }\r\n\r\n        if (options.wireframes) {\r\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\r\n        } else {\r\n            c.strokeStyle = 'orange';\r\n        }\r\n\r\n        c.lineWidth = 1;\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method separations\r\n     * @param {render} render\r\n     * @param {pair[]} pairs\r\n     * @param {RenderingContext} context\r\n     */\r\n    static separations(render, pairs, context) {\r\n        var c = context,\r\n            options = render.options,\r\n            pair,\r\n            collision,\r\n            bodyA,\r\n            bodyB,\r\n            i;\r\n\r\n        c.beginPath();\r\n\r\n        // render separations\r\n        for (i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n\r\n            if (!pair.isActive)\r\n                continue;\r\n\r\n            collision = pair.collision;\r\n            bodyA = collision.bodyA;\r\n            bodyB = collision.bodyB;\r\n\r\n            var k = 1;\r\n\r\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\r\n            if (bodyB.isStatic) k = 0;\r\n\r\n            c.moveTo(bodyB.position.x, bodyB.position.y);\r\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\r\n\r\n            k = 1;\r\n\r\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\r\n            if (bodyA.isStatic) k = 0;\r\n\r\n            c.moveTo(bodyA.position.x, bodyA.position.y);\r\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\r\n        }\r\n\r\n        if (options.wireframes) {\r\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\r\n        } else {\r\n            c.strokeStyle = 'orange';\r\n        }\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method grid\r\n     * @param {render} render\r\n     * @param {grid} grid\r\n     * @param {RenderingContext} context\r\n     */\r\n    static grid(render, grid, context) {\r\n        var c = context,\r\n            options = render.options;\r\n\r\n        if (options.wireframes) {\r\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\r\n        } else {\r\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\r\n        }\r\n\r\n        c.beginPath();\r\n\r\n        var bucketKeys = Common.keys(grid.buckets);\r\n\r\n        for (var i = 0; i < bucketKeys.length; i++) {\r\n            var bucketId = bucketKeys[i];\r\n\r\n            if (grid.buckets[bucketId].length < 2)\r\n                continue;\r\n\r\n            var region = bucketId.split(/C|R/);\r\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\r\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\r\n                    grid.bucketWidth,\r\n                    grid.bucketHeight);\r\n        }\r\n\r\n        c.lineWidth = 1;\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method inspector\r\n     * @param {inspector} inspector\r\n     * @param {RenderingContext} context\r\n     */\r\n    static inspector(inspector, context) {\r\n        var selected = inspector.selected,\r\n            render = inspector.render,\r\n            options = render.options,\r\n            bounds;\r\n\r\n        if (options.hasBounds) {\r\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\r\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\r\n                boundsScaleX = boundsWidth / render.options.width,\r\n                boundsScaleY = boundsHeight / render.options.height;\r\n\r\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\r\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\r\n        }\r\n\r\n        for (var i = 0; i < selected.length; i++) {\r\n            var item = selected[i].data;\r\n\r\n            context.translate(0.5, 0.5);\r\n            context.lineWidth = 1;\r\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\r\n            context.setLineDash([1,2]);\r\n\r\n            switch (item.type) {\r\n\r\n            case 'body':\r\n\r\n                // render body selections\r\n                bounds = item.bounds;\r\n                context.beginPath();\r\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\r\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\r\n                context.closePath();\r\n                context.stroke();\r\n\r\n                break;\r\n\r\n            case 'constraint':\r\n\r\n                // render constraint selections\r\n                var point = item.pointA;\r\n                if (item.bodyA)\r\n                    point = item.pointB;\r\n                context.beginPath();\r\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\r\n                context.closePath();\r\n                context.stroke();\r\n\r\n                break;\r\n\r\n            default:\r\n                break;\r\n            }\r\n\r\n            context.setLineDash([]);\r\n            context.translate(-0.5, -0.5);\r\n        }\r\n\r\n        // render selection region\r\n        if (inspector.selectStart !== null) {\r\n            context.translate(0.5, 0.5);\r\n            context.lineWidth = 1;\r\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\r\n            context.fillStyle = 'rgba(255,165,0,0.1)';\r\n            bounds = inspector.selectBounds;\r\n            context.beginPath();\r\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\r\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\r\n            context.closePath();\r\n            context.stroke();\r\n            context.fill();\r\n            context.translate(-0.5, -0.5);\r\n        }\r\n\r\n        if (options.hasBounds)\r\n            context.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method _createCanvas\r\n     * @private\r\n     * @param {} width\r\n     * @param {} height\r\n     * @return canvas\r\n     */\r\n    static _createCanvas(width, height) {\r\n        var canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        canvas.oncontextmenu = function() { return false; };\r\n        canvas.onselectstart = function() { return false; };\r\n        return canvas;\r\n    };\r\n\r\n    /**\r\n     * Gets the pixel ratio of the canvas.\r\n     * @method _getPixelRatio\r\n     * @private\r\n     * @param {HTMLElement} canvas\r\n     * @return {Number} pixel ratio\r\n     */\r\n    static _getPixelRatio(canvas) {\r\n        var context = canvas.getContext('2d'),\r\n            devicePixelRatio = window.devicePixelRatio || 1,\r\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\r\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\r\n                                      || context.backingStorePixelRatio || 1;\r\n\r\n        return devicePixelRatio / backingStorePixelRatio;\r\n    };\r\n\r\n    /**\r\n     * Gets the requested texture (an Image) via its path\r\n     * @method _getTexture\r\n     * @private\r\n     * @param {render} render\r\n     * @param {string} imagePath\r\n     * @return {Image} texture\r\n     */\r\n    static _getTexture(render, imagePath) {\r\n        var image = render.textures[imagePath];\r\n\r\n        if (image)\r\n            return image;\r\n\r\n        image = render.textures[imagePath] = new Image();\r\n        image.src = imagePath;\r\n\r\n        return image;\r\n    };\r\n\r\n    /**\r\n     * Applies the background to the canvas using CSS.\r\n     * @method applyBackground\r\n     * @private\r\n     * @param {render} render\r\n     * @param {string} background\r\n     */\r\n    static _applyBackground(render, background) {\r\n        var cssBackground = background;\r\n\r\n        if (/(jpg|gif|png)$/.test(background))\r\n            cssBackground = 'url(' + background + ')';\r\n\r\n        render.canvas.style.background = cssBackground;\r\n        render.canvas.style.backgroundSize = \"contain\";\r\n        render.currentBackground = background;\r\n    };\r\n\r\n    /**\r\n     * Performs modulo operation, handling negative numbers.\r\n     * @method mod\r\n     * @private\r\n     * @param {} x\r\n     * @param {} n\r\n     */\r\n    static _mod(x, n) { return (x % n + n) % n };\r\n\r\n    /**\r\n     * Compares two floating-point numbers for near-equality using an epsilon value.\r\n     * @method almostEqual\r\n     * @private\r\n     * @param {} a\r\n     * @param {} b\r\n     */\r\n    static _almostEqual(a, b) { return Math.abs(a - b) < 0.00001 };\r\n\r\n    /**\r\n     * Aligns a draw coordinate.\r\n     * @method roundDrawCoord\r\n     * @private\r\n     * @param {} x\r\n     */\r\n    static _roundDrawCoord(x) { return Math.round(x) + 0.5 };\r\n\r\n    /**\r\n     * Adjusts a hex string color value's luminosity.\r\n     * Borrowed from https://www.sitepoint.com/javascript-generate-lighter-darker-color/\r\n    */\r\n    static _colorLuminance(hex, lum) {\r\n        // validate hex string\r\n        hex = String(hex).replace(/[^0-9a-f]/gi, '');\r\n        if (hex.length < 6) {\r\n            hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\r\n        }\r\n        lum = lum || 0;\r\n\r\n        // convert to decimal and change luminosity\r\n        var rgb = \"#\", c, i;\r\n        for (i = 0; i < 3; i++) {\r\n            c = parseInt(hex.substr(i*2,2), 16);\r\n            c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n            rgb += (\"00\"+c).substr(c.length);\r\n        }\r\n\r\n        return rgb;\r\n    }\r\n\r\n    /*\r\n    *\r\n    *  Events Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n    * Fired before rendering\r\n    *\r\n    * @event beforeRender\r\n    * @param {} event An event object\r\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired after rendering\r\n    *\r\n    * @event afterRender\r\n    * @param {} event An event object\r\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /*\r\n    *\r\n    *  Properties Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n     * A back-reference to the `Matter.Render` module.\r\n     *\r\n     * @property controller\r\n     * @type render\r\n     */\r\n\r\n    /**\r\n     * A reference to the `Matter.Engine` instance to be used.\r\n     *\r\n     * @property engine\r\n     * @type engine\r\n     */\r\n\r\n    /**\r\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\r\n     *\r\n     * @property element\r\n     * @type HTMLElement\r\n     * @default null\r\n     */\r\n\r\n    /**\r\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\r\n     *\r\n     * @property canvas\r\n     * @type HTMLCanvasElement\r\n     * @default null\r\n     */\r\n\r\n    /**\r\n     * The configuration options of the renderer.\r\n     *\r\n     * @property options\r\n     * @type {}\r\n     */\r\n\r\n    /**\r\n     * The target width in pixels of the `render.canvas` to be created.\r\n     *\r\n     * @property options.width\r\n     * @type number\r\n     * @default 800\r\n     */\r\n\r\n    /**\r\n     * The target height in pixels of the `render.canvas` to be created.\r\n     *\r\n     * @property options.height\r\n     * @type number\r\n     * @default 600\r\n     */\r\n\r\n    /**\r\n     * A flag that specifies if `render.bounds` should be used when rendering.\r\n     *\r\n     * @property options.hasBounds\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A `Bounds` object that specifies the drawing view region.\r\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\r\n     * This allows for creating views that can pan or zoom around the scene.\r\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\r\n     *\r\n     * @property bounds\r\n     * @type bounds\r\n     */\r\n\r\n    /**\r\n     * The 2d rendering context from the `render.canvas` element.\r\n     *\r\n     * @property context\r\n     * @type CanvasRenderingContext2D\r\n     */\r\n\r\n    /**\r\n     * The sprite texture cache.\r\n     *\r\n     * @property textures\r\n     * @type {}\r\n     */\r\n}","///<reference path=\"./types/types.d.ts\" />\r\n\r\nimport { cloneDeep } from 'lodash'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport evaluatex from 'evaluatex/dist/evaluatex'\r\nimport Matter from 'matter-js'\r\nimport * as React from 'react'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport { boundsOverlap, pointInBounds, pointNearBounds } from './util'\r\nimport { constants } from './variables'\r\nimport ControlPanel from './controlpanel'\r\nimport FunctionPlot from './functionplot'\r\nimport Server, { MouseMode } from './server'\r\nimport * as ReactColor from 'react-color';\r\n\r\nconst colors = [\r\n\t'#e6194b',\r\n\t'#3cb44b',\r\n\t'#4363d8',\r\n\t'#f58231',\r\n\t'#911eb4',\r\n\t'#46f0f0',\r\n\t'#f032e6',\r\n\t'#bcf60c',\r\n\t'#fabebe',\r\n\t'#008080',\r\n\t'#e6beff',\r\n\t'#9a6324',\r\n\t'#fffac8',\r\n\t'#800000',\r\n\t'#aaffc3',\r\n\t'#808000',\r\n\t'#ffd8b1',\r\n\t'#000075',\r\n\t'#808080',\r\n\t'#ffe119',\r\n\t'#ffffff',\r\n\t'#000000'\r\n]\r\n\r\nconst A_VERY_BIG_NUMBER = 100000\r\n\r\n// FIXME: Matter.Body is missing circleRadius\r\ninterface BodyHack extends Matter.Body {\r\n\tcircleRadius: number\r\n}\r\n\r\ninterface UtilSimProps {\r\n\r\n}\r\n\r\ninterface UtilSimState {\r\n\r\n\tshowColorPicker: boolean,\r\n\tcolorIndex?: number,\r\n\tlastBoundaryMoveTime: number,\r\n\tmouseMode: MouseMode,\r\n\tgridSize: number,\r\n\tsnapToGrid: boolean,\r\n\tboundaries: Array<Boundary>,\r\n\tutilFunctions: Array<SubUtilityFunction>,\r\n\tutilConstants: UtilityVariables,\r\n\tutilGlobalVars: UtilityVariables,\r\n\tutilServer: UtilityFunction\r\n}\r\n\r\nexport default class UtilSim extends React.Component<UtilSimProps, UtilSimState> {\r\n\t//static whyDidYouRender = true\r\n\r\n\tserverRef: React.RefObject<Server>\r\n\tlastFrameTime: number\r\n\tframeTimeHistory: Array<number>\r\n\r\n\tconstructor(props: UtilSimProps) {\r\n\t\tsuper(props)\r\n\r\n\t\tconst defaultConstantValues: UtilityVariables = {} \r\n\t\tObject.keys(constants).forEach((key) => defaultConstantValues[key] = constants[key].defaultValue as number)\r\n\r\n\t\tthis.serverRef = React.createRef()\r\n\t\tthis.lastFrameTime = 0\r\n\t\tthis.frameTimeHistory = new Array(10)\r\n\r\n\t\tthis.state = {\r\n\t\t\tshowColorPicker: false,\r\n\t\t\tcolorIndex: 0,\r\n\t\t\tlastBoundaryMoveTime: window.performance.now(),\r\n\r\n\t\t\tmouseMode: MouseMode.OBJECT,\r\n\t\t\tgridSize: 50,\r\n\t\t\tsnapToGrid: false,\r\n\r\n\t\t\tboundaries: [\r\n\t\t\t\t{\r\n\t\t\t\t\tbounds: { min: {x: 0, y: -A_VERY_BIG_NUMBER}, max: {x: A_VERY_BIG_NUMBER, y: 0} },\r\n\t\t\t\t\tcolor: colors[0],\r\n\t\t\t\t\tvars: {}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tbounds: { min: {x: 0, y: 0}, max: {x: A_VERY_BIG_NUMBER, y: A_VERY_BIG_NUMBER} },\r\n\t\t\t\t\tcolor: colors[1],\r\n\t\t\t\t\tvars: {}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tbounds: { min: {x: -A_VERY_BIG_NUMBER, y: -0}, max: {x: 0, y: A_VERY_BIG_NUMBER} },\r\n\t\t\t\t\tcolor: colors[2],\r\n\t\t\t\t\tvars: {}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tbounds: { min: {x: -A_VERY_BIG_NUMBER, y: -A_VERY_BIG_NUMBER}, max: {x: 0, y: 0} },\r\n\t\t\t\t\tcolor: colors[3],\r\n\t\t\t\t\tvars: {}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\tutilFunctions: [\r\n\t\t\t\t{\r\n\t\t\t\t\texpression: \"e^(-10alpha)\",\r\n\t\t\t\t\tutilVar: \"alpha\",\r\n\t\t\t\t\tcolor: colors[5]\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\texpression: \"e^(-5beta)\",\r\n\t\t\t\t\tutilVar: \"beta\",\r\n\t\t\t\t\tcolor: colors[6]\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\texpression: \"min(max(0, -log(delta, 1000/60)), 1)\",\r\n\t\t\t\t\tutilVar: \"delta\",\r\n\t\t\t\t\tcolor: colors[7]\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tutilConstants: defaultConstantValues,\r\n\t\t\tutilGlobalVars: {},\r\n\t\t\tutilServer: {\r\n\t\t\t\texpression: \"U_alpha + U_beta + U_delta\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\t// Try to compile the functions\r\n\t\tthis.state.utilFunctions.forEach((func, i) => this.onUtilFunctionUpdated(i, func.expression))\r\n\t\tthis.onServerUtilFunctionUpdated(this.state.utilServer.expression)\r\n\t}\r\n\r\n\tonEngineBeforeUpdate = (event: Matter.IEventTimestamped<Matter.Engine>) => {\r\n\t\tthis.lastFrameTime = window.performance.now()\r\n\t}\r\n\r\n\tonEngineAfterUpdate = (event: Matter.IEventTimestamped<Matter.Engine>) => {\r\n\t\t// Update timing metrics\r\n\t\tconst now = window.performance.now()\r\n\t\tconst delta = (now - this.lastFrameTime)\r\n\t\tthis.frameTimeHistory.push(delta)\r\n\t\tthis.frameTimeHistory.shift()\r\n\t\tconst avgFrameTime = this.frameTimeHistory.reduce((a, b) => a + b) / this.frameTimeHistory.length\r\n\r\n\t\tconst boundaries = this.state.boundaries.slice()\r\n\t\tconst allBodies = Matter.Composite.allBodies(event.source.world)\r\n\t\tconst totalObjects = allBodies.length\r\n\r\n\t\t// Update boundary-local vars\r\n\t\tboundaries.forEach(b => {\r\n\t\t\tvar numObjects = 0\r\n\t\t\tvar numNearBoundary = 0\r\n\t\t\tvar numActive = 0\r\n\r\n\t\t\tvar i = 0\r\n\t\t\twhile (i < allBodies.length) {\r\n\t\t\t\tconst body = allBodies[i]\r\n\t\t\t\tif (!pointInBounds(body.position, b.bounds, true)) {\r\n\t\t\t\t\t++i\r\n\t\t\t\t\tcontinue\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update counters\r\n\t\t\t\t++numObjects\r\n\r\n\t\t\t\t// Is it active?\r\n\t\t\t\tif (!body.isSleeping)\r\n\t\t\t\t\t++numActive\r\n\r\n\t\t\t\t// Is the object near any of the boundary edges?\r\n\t\t\t\tif (pointNearBounds(body.position, (body as BodyHack).circleRadius, b.bounds))\r\n\t\t\t\t\t++numNearBoundary\r\n\r\n\t\t\t\t// Make object same colour as boundary that contains it\r\n\t\t\t\tbody.render.fillStyle = b.color\r\n\r\n\t\t\t\t// Remove from 'all objects array'\r\n\t\t\t\tallBodies.splice(i, 1)\r\n\t\t\t}\r\n\r\n\t\t\t// Fake CPU usage (we can't get real CPU usage in JS)\r\n\t\t\tb.vars.lambda = (numObjects ? Math.min(1.0, numActive / totalObjects) : 0) + Math.random() * 0.1\r\n\t\t\tb.vars.delta = avgFrameTime\r\n\t\t\tb.vars.alpha = numObjects ? numActive / numObjects : 0\r\n\t\t\tb.vars.beta = numObjects ? numNearBoundary / numObjects : 0 \r\n\t\t\tb.vars.n = numObjects\r\n\t\t})\r\n\r\n\t\t// Color remaining bodies (not in any boundary, which is something that should never happen) black\r\n\t\tallBodies.forEach(b => b.render.fillStyle = 'black')\r\n\r\n\t\t// Update global vars\r\n\t\tconst timeSinceBoundaryMoved = (now - this.state.lastBoundaryMoveTime) / 1000\r\n\t\tconst utilGlobalVars = {\r\n\t\t\tsigma: boundaries.length,\r\n\t\t\tt: timeSinceBoundaryMoved,\r\n\t\t\tN: totalObjects\r\n\t\t}\r\n\t\t\t\t\t\r\n\t\tthis.setState({ boundaries, utilGlobalVars })\r\n\t}\r\n\t\r\n\t// Validate the bounds\r\n\tvalidateResize = (resizeInfo: Array<BoundaryResizeInfo>) => {\r\n\t\t// Get the boundaries not being updated\r\n\t\tvar notBeingUpdated: Bounds[] = []\r\n\t\tthis.state.boundaries.forEach(b => {\r\n\t\t\tif (!resizeInfo.some(r => r.boundary === b))\r\n\t\t\t\tnotBeingUpdated.push(b.bounds)\r\n\t\t})\r\n\r\n\t\treturn resizeInfo.every(info => {\r\n\t\t\tconst bounds = info.newBounds\r\n\r\n\t\t// Reject min == max\r\n\t\tif (bounds.min.x === bounds.max.x || bounds.min.y === bounds.max.y)\r\n\t\t\treturn false\r\n\r\n\t\t\t// Combine check list with boundaries being updated\r\n\t\t\tconst checkList = [...notBeingUpdated]\r\n\t\t\tresizeInfo.forEach(r => (r !== info) && checkList.push(r.newBounds))\r\n\r\n\t\t\t// Reject overlapping boundaries\r\n\t\t\treturn !checkList.some(b => boundsOverlap(bounds, b))\r\n\t\t})\r\n\t}\r\n\r\n\tvalidateBoundary = (bounds: Bounds, boundaryToIgnore?: Boundary) => {\r\n\t\t// Reject min == max\r\n\t\tif (bounds.min.x === bounds.max.x || bounds.min.y === bounds.max.y)\r\n\t\t\treturn false\r\n\r\n\t\t// Reject overlapping boundaries\r\n\t\treturn this.state.boundaries.every(boundary => {\r\n\t\t\t// Prevent comparison against self\r\n\t\t\tif (boundary === boundaryToIgnore)\r\n\t\t\t\treturn true\r\n\r\n\t\t\t// Check it doesn't overlap\r\n\t\t\treturn !boundsOverlap(bounds, boundary.bounds)\r\n\t\t})\r\n\t}\r\n\r\n\tonBoundaryAdded = (bounds: Bounds) => {\r\n\t\tif (!this.validateBoundary(bounds))\r\n\t\t\treturn\r\n\r\n\t\tvar boundaries = this.state.boundaries.slice()\r\n\t\tboundaries.push({\r\n\t\t\tbounds: bounds,\r\n\t\t\tcolor: colors[boundaries.length % colors.length],\r\n\t\t\tvars: {}\r\n\t\t})\r\n\t\tthis.setState({ boundaries, lastBoundaryMoveTime: window.performance.now() })\r\n\t}\r\n\r\n\tonBoundaryDeleted = (boundary: Boundary) => {\r\n\t\tconst index = this.state.boundaries.findIndex(b => b === boundary)\r\n\t\tif (index === -1)\r\n\t\t\treturn\r\n\r\n\t\tvar boundaries = this.state.boundaries.slice()\r\n\t\tboundaries.splice(index, 1)\r\n\t\tthis.setState({ boundaries, lastBoundaryMoveTime: window.performance.now() })\r\n\t}\r\n\r\n\tonBoundariesUpdated = (resizeInfo: Array<BoundaryResizeInfo>, validate: boolean = true) => {\r\n\t\tif (validate && !this.validateResize(resizeInfo))\r\n\t\t\treturn\r\n\r\n\t\tconst boundaries = this.state.boundaries.slice()\r\n\t\tresizeInfo.forEach(info => {\r\n\t\t\t// Find the right boundary object to to update\r\n\t\t\tfor (let i = 0; i < boundaries.length; ++i) {\r\n\t\t\t\tif (info.boundary === boundaries[i]) {\r\n\t\t\t\t\tconst oldBounds = boundaries[i].bounds\r\n\t\t\t\t\toldBounds.min.x = info.newBounds.min.x\r\n\t\t\t\t\toldBounds.min.y = info.newBounds.min.y\r\n\t\t\t\t\toldBounds.max.x = info.newBounds.max.x\r\n\t\t\t\t\toldBounds.max.y = info.newBounds.max.y\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.setState({\r\n\t\t\tboundaries,\r\n\t\t\tlastBoundaryMoveTime: window.performance.now()\r\n\t\t})\r\n\t}\r\n\r\n\tonUtilFunctionUpdated = (index: number, value: string) => {\r\n\t\tconst utilFunctions = this.state.utilFunctions.slice()\r\n\t\tutilFunctions[index].expression = value\r\n\r\n\t\t// Try to compile the function\r\n\t\ttry {\r\n\t\t\tutilFunctions[index].evalFunc = evaluatex(value, { e: Math.E, pi: Math.PI })\r\n\t\t} catch {\r\n\t\t\tutilFunctions[index].evalFunc = null\r\n\t\t}\r\n\r\n\t\tthis.setState({ utilFunctions })\r\n\t}\r\n\r\n\tonServerUtilFunctionUpdated = (value: string) => {\r\n\t\tconst utilServer = cloneDeep(this.state.utilServer)\r\n\t\tutilServer.expression = value\r\n\r\n\t\t// Try to compile the function\r\n\t\ttry {\r\n\t\t\tutilServer.evalFunc = evaluatex(value, { e: Math.E, pi: Math.PI })\r\n\t\t} catch {\r\n\t\t\tutilServer.evalFunc = null\r\n\t\t}\r\n\r\n\t\tthis.setState({ utilServer })\r\n\t}\r\n\r\n\tonUtilConstantUpdated = (key: string, value: number) => {\r\n\t\tconst utilConstants = cloneDeep(this.state.utilConstants)\r\n\t\tutilConstants[key] = value\r\n\t\tthis.setState({ utilConstants })\r\n\t}\r\n\r\n\tonUtilVarUpdated = (index: number, value: string) => {\r\n\t\tlet utilFunctions = this.state.utilFunctions.slice()\r\n\t\tutilFunctions[index].utilVar = value\r\n\t\tthis.setState({ utilFunctions })\r\n\t}\r\n\r\n\tonUtilFunctionAdded = () => {\r\n\t\tlet utilFunctions = this.state.utilFunctions.slice()\r\n\t\tutilFunctions.push({\r\n\t\t\texpression: \"\",\r\n\t\t\tutilVar: \"x\",\r\n\t\t\tcolor: colors[utilFunctions.length % colors.length]\r\n\t\t})\r\n\t\tthis.setState({ utilFunctions })\r\n\t}\r\n\r\n\tonUtilFunctionDeleted = (index: number) => {\r\n\t\tlet utilFunctions = this.state.utilFunctions.slice()\r\n\t\tutilFunctions.splice(index, 1)\r\n\t\tthis.setState({ utilFunctions })\r\n\t}\r\n\r\n\tonChangeColorClicked = (index?: number) => {\r\n\t\tthis.setState({\r\n\t\t\tshowColorPicker: !this.state.showColorPicker,\r\n\t\t\tcolorIndex: !this.state.showColorPicker ? index : undefined\r\n\t\t})\r\n\t}\r\n\r\n\tonColorUpdated = (color: ReactColor.ColorResult) => {\r\n\t\tlet utilFunctions = this.state.utilFunctions.slice()\r\n\t\tutilFunctions[this.state.colorIndex as number].color = color.hex\r\n\t\tthis.setState({ utilFunctions })\r\n\t}\r\n\r\n\tonRandomClicked = () => {\r\n\t\tif (!this.serverRef.current)\r\n\t\t\treturn;\r\n\t\tthis.serverRef.current.spawnRandomObjects(100)\r\n\t}\r\n\r\n\tonClearClicked = () => {\r\n\t\tif (!this.serverRef.current)\r\n\t\t\treturn;\r\n\t\tthis.serverRef.current.clearAllObjects()\r\n\t}\r\n\r\n\tonHomeClicked = () => {\r\n\t\tif (!this.serverRef.current)\r\n\t\t\treturn;\r\n\t\tthis.serverRef.current.resetView()\r\n\t}\r\n\r\n\tonShowAllObjectsClicked = () => {\r\n\t\tif (!this.serverRef.current)\r\n\t\t\treturn;\r\n\t\tthis.serverRef.current.showAllObjects()\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Navbar bg=\"dark\" variant=\"dark\">\r\n\t\t\t\t\t<Navbar.Brand href=\"#home\">\r\n\t\t\t\t\t\tAura Projection - Utility Function Simulator\r\n\t\t\t\t\t</Navbar.Brand>\r\n\t\t\t\t</Navbar>\r\n\r\n\t\t\t\t<Container fluid={true} className=\"mt-2\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<ButtonToolbar className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t\t<ButtonGroup className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Object mode\" active={this.state.mouseMode === MouseMode.OBJECT} onClick={() => { this.setState({mouseMode: MouseMode.OBJECT })}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"cube\"></FontAwesomeIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Boundary mode\" active={this.state.mouseMode === MouseMode.BOUNDARY_EDIT} onClick={() => { this.setState({mouseMode: MouseMode.BOUNDARY_EDIT })}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"vector-square\"></FontAwesomeIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Snooker mode\" active={this.state.mouseMode === MouseMode.SNOOKER} onClick={() => { this.setState({mouseMode: MouseMode.SNOOKER })}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"bowling-ball\"></FontAwesomeIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ButtonGroup className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Reset view\" onClick={this.onHomeClicked}><FontAwesomeIcon icon=\"home\"></FontAwesomeIcon></Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Show all objects\" onClick={this.onShowAllObjectsClicked}><FontAwesomeIcon icon=\"eye\"></FontAwesomeIcon></Button>\r\n\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ButtonGroup className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Toggle snap to grid\" active={this.state.snapToGrid} onClick={() => { this.setState({snapToGrid: !this.state.snapToGrid })}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"magnet\"></FontAwesomeIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Decrease grid size\" onClick={() => { this.setState({gridSize: Math.max(25, this.state.gridSize / 2)}) }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"th\"></FontAwesomeIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Increase grid size\" onClick={() => { this.setState({gridSize: this.state.gridSize * 2}) }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"th-large\"></FontAwesomeIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ButtonGroup className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Spawn random objects\" onClick={this.onRandomClicked}><FontAwesomeIcon icon=\"dice\"></FontAwesomeIcon></Button>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"warning\" title=\"Remove all objects\" onClick={this.onClearClicked}><FontAwesomeIcon icon=\"radiation\"></FontAwesomeIcon></Button>\r\n\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t\t\t</ButtonToolbar>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Server\r\n\t\t\t\t\t\t\t\t\t\tref={this.serverRef}\r\n\t\t\t\t\t\t\t\t\t\tboundaries={this.state.boundaries}\r\n\t\t\t\t\t\t\t\t\t\t//objects={this.state.objects}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// State\r\n\t\t\t\t\t\t\t\t\t\tgridSize={this.state.gridSize}\r\n\t\t\t\t\t\t\t\t\t\tmouseMode={this.state.mouseMode}\r\n\t\t\t\t\t\t\t\t\t\tsnapToGrid={this.state.snapToGrid}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Callbacks\r\n\t\t\t\t\t\t\t\t\t\tonBoundaryAdded={this.onBoundaryAdded}\r\n\t\t\t\t\t\t\t\t\t\tonBoundariesUpdated={this.onBoundariesUpdated}\r\n\t\t\t\t\t\t\t\t\t\tonBoundaryDeleted={this.onBoundaryDeleted}\r\n\r\n\t\t\t\t\t\t\t\t\t\tonEngineBeforeUpdate={this.onEngineBeforeUpdate}\r\n\t\t\t\t\t\t\t\t\t\tonEngineAfterUpdate={this.onEngineAfterUpdate}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<FunctionPlot\r\n\t\t\t\t\t\t\t\tboundaries={this.state.boundaries}\r\n\t\t\t\t\t\t\t\tutilFunctions={this.state.utilFunctions}\r\n\t\t\t\t\t\t\t\tutilConstants={this.state.utilConstants}\r\n\t\t\t\t\t\t\t\tutilGlobalVars={this.state.utilGlobalVars}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<ControlPanel\r\n\t\t\t\t\t\t\t\t// Physics state\r\n\t\t\t\t\t\t\t\tboundaries={this.state.boundaries}\r\n\r\n\t\t\t\t\t\t\t\t// Utility state\r\n\t\t\t\t\t\t\t\tutilFunctions={this.state.utilFunctions}\r\n\t\t\t\t\t\t\t\tutilConstants={this.state.utilConstants}\r\n\t\t\t\t\t\t\t\tutilGlobalVars={this.state.utilGlobalVars}\r\n\t\t\t\t\t\t\t\tutilServer={this.state.utilServer}\r\n\r\n\t\t\t\t\t\t\t\t// Control panel callbacks\r\n\t\t\t\t\t\t\t\tonUtilFunctionUpdated={this.onUtilFunctionUpdated}\r\n\t\t\t\t\t\t\t\tonUtilFunctionAdded={this.onUtilFunctionAdded}\r\n\t\t\t\t\t\t\t\tonUtilFunctionDeleted={this.onUtilFunctionDeleted}\r\n\t\t\t\t\t\t\t\tonServerUtilFunctionUpdated={this.onServerUtilFunctionUpdated}\r\n\t\t\t\t\t\t\t\tonUtilConstantUpdated={this.onUtilConstantUpdated}\r\n\t\t\t\t\t\t\t\tonUtilVarUpdated={this.onUtilVarUpdated}\r\n\t\t\t\t\t\t\t\tonChangeColorClicked={this.onChangeColorClicked}\r\n\t\t\t\t\t\t\t\tonColorUpdated={this.onColorUpdated}\r\n\t\t\t\t\t\t\t\tshowColorPicker={this.state.showColorPicker}\r\n\t\t\t\t\t\t\t\tcolorIndex={this.state.colorIndex}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport MathJax from 'react-mathjax2';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nimport UtilSim from './utilsim'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// Setup Font Awesome\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {\r\n\tfaBorderAll, faBowlingBall, faChartLine, faCube, faDice,\r\n\tfaEye, faHome, faMagnet, faPlus, faPalette, faRadiation,\r\n\tfaTh, faThLarge, faTrash, faVectorSquare\r\n} from '@fortawesome/free-solid-svg-icons'\r\nlibrary.add(\r\n\tfaBorderAll, faBowlingBall, faChartLine, faCube, faDice,\r\n\tfaEye, faHome, faMagnet, faPlus, faPalette, faRadiation,\r\n\tfaTh, faThLarge, faTrash, faVectorSquare\r\n)\r\n\r\n// Setup Why Did You Render?\r\n// if (process.env.NODE_ENV !== 'production') {\r\n// \tconst whyDidYouRender = require('@welldone-software/why-did-you-render/dist/no-classes-transpile/umd/whyDidYouRender.min.js');\r\n// \twhyDidYouRender(React);\r\n// }\r\n\r\nReactDOM.render(\r\n\t<MathJax.Context\r\n\t\tinput='ascii'\r\n\t\toptions={{\r\n\t\t\tasciimath2jax: {\r\n\t\t\t\tuseMathMLspacing: true,\r\n\t\t\t\tpreview: \"none\",\r\n\t\t\t}\r\n\t\t}}\r\n\t>\r\n\t\t<UtilSim/>\r\n\t</MathJax.Context>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}