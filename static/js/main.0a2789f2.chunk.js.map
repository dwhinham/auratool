{"version":3,"sources":["assets/logo.svg","../node_modules/matter-js/src/core sync","Utility.ts","components/Variables.tsx","Layout.ts","components/ControlPanel.tsx","components/FunctionPlot.tsx","components/Header.tsx","components/ImportDropTarget.tsx","components/ImportModal.tsx","PhysicsRenderer.js","components/PhysicsSim.tsx","components/PhysicsToolbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","createBounds","p1","p2","min","x","Math","y","max","boundsOverlap","b1","b2","distanceSq","dx","dy","pointInBounds","p","b","includeEdges","pointNearBounds","r","evaluateUtilFunction","func","boundary","constants","globalVars","evalFunc","utilVar","vars","C_m","desc","defaultValue","C_c","C_u","C_d","C_i","sigma","type","N","t","lambda","delta","alpha","beta","n","Variables","props","Table","hover","striped","size","Object","utilConstants","map","v","i","key","Node","html","tagName","onChange","onUtilConstantUpdated","parseFloat","target","value","trim","utilGlobalVars","toFixed","boundaries","length","title","j","FillParentFlexItem","styled","div","ColumnFlexContainer","RowFlexContainer","ControlsContainer","ControlPanelContainer","ControlPanel","popover","position","top","right","zIndex","cover","bottom","left","serverUtilValues","serverUtilFunc","utilFuncs","utilValues","forEach","evaluateServerUtilFunction","utilServer","utilFunctions","globalUtilValue","reduce","a","Tabs","Tab","eventKey","InputGroup","className","Prepend","Text","inline","expression","FormControl","placeholder","aria-label","currentTarget","onUtilFunctionUpdated","Append","Dropdown","Toggle","variant","style","borderRadius","Menu","Header","Item","onSelect","onUtilVarUpdated","Divider","Button","onClick","onChangeColorClicked","backgroundColor","color","icon","showColorPicker","colorIndex","undefined","disableAlpha","onColorUpdated","onUtilFunctionDeleted","onUtilFunctionAdded","onServerUtilFunctionUpdated","bounds","FunctionPlot","updateCurves","memoize","funcs","stepSize","state","xRange","datasets","Array","dataset","label","fill","showLine","pointRadius","pointHitRadius","borderColor","borderWidth","data","push","updatePoints","pointStyle","yRange","curves","this","concat","options","responsive","maintainAspectRatio","animation","duration","React","Navbar","bg","expand","Brand","href","src","logo","width","alt","process","aria-controls","Collapse","Nav","Link","onImportClickedCallback","faFileImport","onExportClickedCallback","faFileExport","outerStyle","height","padding","textAlign","fontSize","lineHeight","border","display","middleStyle","verticalAlign","innerStyle","marginLeft","marginRight","ImportDropTarget","fileUploader","useDrop","accept","NativeTypes","FILE","drop","item","monitor","files","getItem","onFilesSelected","collect","isOver","canDrop","ref","click","faFolderOpen","input","event","ImportModal","Modal","show","onHide","closeButton","Title","Body","DndProvider","backend","Backend","Footer","onClosed","PhysicsRenderer","defaults","controller","engine","element","canvas","mouse","frameRequestId","pixelRatio","background","wireframeBackground","gridSize","hasBounds","enabled","wireframes","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","showGrid","crosshairSnap","render","Common","extend","_createCanvas","context","getContext","textures","setPixelRatio","isElement","appendChild","parentNode","log","loop","time","_requestAnimationFrame","call","window","world","_cancelAnimationFrame","_getPixelRatio","setAttribute","objects","center","isArray","Infinity","object","viewHeight","outerRatio","innerRatio","scaleX","scaleY","Mouse","setScale","setOffset","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","setTransform","translate","canvasWidth","canvasHeight","scale","xOriginOffset","yOriginOffset","xGridOffset","_mod","yGridOffset","lineWidth","setLineDash","strokeStyle","fillStyle","drawXGridLine","_roundDrawCoord","beginPath","moveTo","lineTo","stroke","fillText","drawYGridLine","xLabel","floor","yLabel","_almostEqual","save","restore","crosshairX","crosshairY","round","drawX","drawY","allBodies","Composite","allConstraints","bodies","constraints","timestamp","timing","Events","trigger","currentBackground","_applyBackground","globalCompositeOperation","fillRect","drawGrid","body","Bounds","overlaps","constraint","bodyA","bodyB","pointAWorld","pointA","pointBWorld","pointB","Vector","add","contains","startViewTransform","enableSleeping","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","pairs","list","collisions","vertexNumbers","mousePosition","broadphase","Grid","grid","debug","endViewTransform","showCrosshair","drawCrosshair","c","metrics","debugTimestamp","text","fps","extended","correction","buckets","broadEff","midEff","narrowEff","debugString","font","split","visible","start","end","arc","PI","closePath","offset","sub","normal","perp","normalise","coils","ceil","clamp","anchors","circleRadius","vertices","distanceX","distanceY","distance","abs","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","part","k","parts","sprite","texture","_getTexture","rotate","angle","drawImage","xOffset","xScale","yOffset","yScale","isInternal","isSleeping","_colorLuminance","globalAlpha","rect","axes","axis","positionPrev","pair","collision","isActive","activeContacts","vertex","normalPosX","normalPosY","supports","isStatic","penetration","bucketKeys","bucketId","region","parseInt","bucketWidth","bucketHeight","inspector","selected","point","selectStart","selectBounds","document","createElement","oncontextmenu","onselectstart","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","imagePath","image","Image","cssBackground","test","backgroundSize","hex","lum","String","replace","rgb","substr","toString","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","now","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","MouseMode","ResizeMode","PhysicsCanvas","cursor","PhysicsSim","matterEngine","matterMouse","matterMouseConstraint","matterRender","matterRunner","matterWorld","componentDidMount","canvasRef","current","ctx","updateCanvasDimensions","Matter","World","create","gravity","Engine","MouseConstraint","stiffness","Bodies","circle","restitution","Runner","isFixed","on","onBodyDragStart","onBodyDragEnd","onBeforeUpdate","onEngineBeforeUpdate","onEngineAfterUpdate","onBeforeRender","onBeforeObjects","run","addEventListener","console","mouseMode","OBJECT","collisionFilter","mask","snapToGrid","source","mousePos","getMousePos","mousePosUnsnapped","topLeft","worldToCanvas","bottomRight","extents","mouseInBounds","isClickedBoundary","clickedBoundary","BOUNDARY_EDIT","resizeMode","NONE","mouseDownPos","resizeBoundaries","SNOOKER","snookerBody","bodyPos","setState","draggingBody","checkResizeMode","bUnder","bNear","CROSS_SPLIT","HORIZONTAL_SPLIT","VERTICAL_SPLIT","mousePosCanvas","boundsCanvas","leftDist","rightDist","topDist","bottomDist","TOP_LEFT_CORNER","TOP_RIGHT_CORNER","BOTTOM_RIGHT_CORNER","BOTTOM_LEFT_CORNER","LEFT_EDGE","RIGHT_EDGE","TOP_EDGE","BOTTOM_EDGE","onMouseDown","mouseButton","button","mouseDownPosCanvas","bodyAtPosition","boundaryUnderMouse","boundariesNearMouse","clickedOldBounds","assign","onMouseUp","onObjectAdded","onObjectDeleted","remove","force","mult","mass","applyForce","onBoundaryDeleted","onBoundaryAdded","resizingMultiple","onMouseMove","onBoundariesUpdated","resizeInfo","newBounds","minIndex","dist","dists","resizeBounds4WaySplit","vertical","newBounds1","newBounds2","resizeBounds2WaySplit","mouseDelta","onMouseOver","onMouseOut","onWheel","zoomFactor","deltaY","clientWidth","clientHeight","spawnRandomObjects","count","random","clearAllObjects","clear","showAllObjects","lookAt","resetView","halfExtent","neg","find","filter","bHalfWidth","bHalfHeight","bCenter","pow","circleOverlapBounds","MOUSE_BOUNDS_THRESHOLD","Query","forceUnsnapped","getCanvasCursorStyle","dragStartPos","dragLastPos","PhysicsToolbar","ButtonToolbar","ButtonGroup","active","onMouseModeChanged","onHomeClicked","onShowAllObjectsClicked","onSnapToGridChanged","onDecreaseGridSizeClicked","onIncreaseGridSizeClicked","onRandomClicked","onClearClicked","colors","App","physicsSimRef","lastFrameTime","frameTimeHistory","performance","shift","avgFrameTime","slice","totalObjects","numObjects","numNearBoundary","numActive","splice","timeSinceBoundaryMoved","lastBoundaryMoveTime","validateResize","notBeingUpdated","some","every","info","checkList","validateBoundary","boundaryToIgnore","index","findIndex","validate","oldBounds","evaluatex","E","pi","cloneDeep","onImportClicked","showImportModal","onImportModalClosed","onExportClicked","saveObj","simState","bodyData","inverseMass","speed","velocity","saveAs","Blob","JSON","stringify","date","Date","pad","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getDateString","createExportFilename","fileList","file","reader","FileReader","readAsBinaryString","onloadend","newState","parse","result","setVelocity","defaultConstantValues","localStorageState","get","Boolean","location","hostname","match","library","faBorderAll","faBowlingBall","faChartLine","faCube","faDice","faEye","faHome","faMagnet","faPalette","faPlus","faRadiation","faTh","faThLarge","faTrash","faVectorSquare","ReactDOM","Context","asciimath2jax","useMathMLspacing","preview","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a2789f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d8948e3c.svg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 385;","///<reference path=\"./types/types.d.ts\" />\n\nexport const createBounds = (p1: Vector2D, p2: Vector2D) => {\n\treturn {\n\t\tmin: {\n\t\t\tx: Math.min(p1.x, p2.x),\n\t\t\ty: Math.min(p1.y, p2.y),\n\t\t},\n\t\tmax: {\n\t\t\tx: Math.max(p1.x, p2.x),\n\t\t\ty: Math.max(p1.y, p2.y),\n\t\t}\n\t}\n}\n\nexport const boundsOverlap = (b1: Bounds, b2: Bounds) => !(b2.min.x >= b1.max.x || b2.max.x <= b1.min.x || b2.max.y <= b1.min.y || b2.min.y >= b1.max.y)\n\nexport const circleOverlapBounds = (p: Vector2D, r: number, b: Bounds) => {\n\tconst bHalfWidth = (b.max.x - b.min.x) / 2\n\tconst bHalfHeight = (b.max.y - b.min.y) / 2\n\tconst bCenter = {\n\t\tx: b.min.x + bHalfWidth,\n\t\ty: b.min.y + bHalfHeight\n\t}\n\tconst dist = {\n\t\tx: Math.abs(p.x - bCenter.x),\n\t\ty: Math.abs(p.y - bCenter.y)\n\t}\n\n\tif (dist.x > bHalfWidth + r) return false\n\tif (dist.y > bHalfHeight + r) return false\n\n\tif (dist.x <= bHalfWidth) return true\n\tif (dist.y <= bHalfHeight) return true\n\n\tconst cornerDistSq = Math.pow(dist.x - bHalfWidth, 2) + Math.pow(dist.y - bHalfHeight, 2)\n\treturn cornerDistSq <= Math.pow(r, 2)\n}\n\nexport const distanceSq = (p1: Vector2D, p2: Vector2D) => {\n\tconst dx = p1.x - p2.x\n\tconst dy = p1.y - p2.y\n\treturn dx * dx + dy * dy\n}\n\nexport const pointInBounds = (p: Vector2D, b: Bounds, includeEdges: boolean = true) => {\n\tif (includeEdges)\n\t\treturn p.x >= b.min.x && p.x <= b.max.x && p.y >= b.min.y && p.y <= b.max.y\n\telse\n\t\treturn p.x > b.min.x && p.x < b.max.x && p.y > b.min.y && p.y < b.max.y\n}\n\nexport const pointNearBounds = (p: Vector2D, r: number, b: Bounds) => {\n\treturn  p.x - r < b.min.x ||\n\t\t\tp.x + r > b.max.x ||\n\t\t\tp.y - r < b.min.y ||\n\t\t\tp.y + r > b.max.y\n}\n\nexport const resizeBounds2WaySplit = (boundaries: Array<Boundary>, mousePos: Vector2D, vertical: boolean): Array<BoundaryResizeInfo> => {\n\tlet [b1, b2] = [boundaries[0], boundaries[1]]\n\tlet newBounds1, newBounds2\n\n\tif (vertical) {\n\t\t// Swap boundary order if necessary\n\t\tif (b1.bounds.max.x > b2.bounds.min.x)\n\t\t\t[b1, b2] = [b2, b1]\n\t\tnewBounds1 = createBounds(b1.bounds.min, { x: mousePos.x, y: b1.bounds.max.y })\n\t\tnewBounds2 = createBounds({ x: mousePos.x, y: b2.bounds.min.y }, b2.bounds.max)\n\t} else {\n\t\tif (b1.bounds.max.y > b2.bounds.min.y)\n\t\t\t[b1, b2] = [b2, b1]\n\t\tnewBounds1 = createBounds(b1.bounds.min, { x: b1.bounds.max.x, y: mousePos.y })\n\t\tnewBounds2 = createBounds({ x: b2.bounds.min.x, y: mousePos.y }, b2.bounds.max)\n\t}\n\n\treturn [\n\t\t{ boundary: b1, newBounds: newBounds1 },\n\t\t{ boundary: b2, newBounds: newBounds2 },\n\t]\n}\n\nexport const resizeBounds4WaySplit = (boundaries: Array<Boundary>, mousePos: Vector2D): Array<BoundaryResizeInfo> => {\n\treturn boundaries.map((b) => {\n\t\tconst bounds = b.bounds\n\n\t\tlet newBounds = {\n\t\t\tmin: Object.assign({}, bounds.min),\n\t\t\tmax: Object.assign({}, bounds.max)\n\t\t}\n\n\t\t// Find the closest corner to the mouse\n\t\tconst dists = [\n\t\t\tdistanceSq(mousePos, bounds.min),\t\t\t\t\t\t\t// Top left\n\t\t\tdistanceSq(mousePos, { x: bounds.max.x, y: bounds.min.y }),\t// Top right\n\t\t\tdistanceSq(mousePos, bounds.max),\t\t\t\t\t\t\t// Bottom right\n\t\t\tdistanceSq(mousePos, { x: bounds.min.x, y: bounds.max.y }),\t// Bottom left\n\t\t]\n\t\tconst minIndex = dists.reduce((minIndex, dist, i, dists) => dist < dists[minIndex] ? i : minIndex, 0)\n\n\t\t// Adjust the closest corner\n\t\tswitch (minIndex) {\n\t\t\t// Top left\n\t\t\tcase 0:\n\t\t\t\tnewBounds.min.x = mousePos.x\n\t\t\t\tnewBounds.min.y = mousePos.y\n\t\t\t\tbreak\n\n\t\t\t// Top right\n\t\t\tcase 1:\n\t\t\t\tnewBounds.max.x = mousePos.x\n\t\t\t\tnewBounds.min.y = mousePos.y\n\t\t\t\tbreak\n\n\t\t\t// Bottom right\n\t\t\tcase 2:\n\t\t\t\tnewBounds.max.x = mousePos.x\n\t\t\t\tnewBounds.max.y = mousePos.y\n\t\t\t\tbreak\n\n\t\t\t// Bottom left\n\t\t\tcase 3:\n\t\t\t\tnewBounds.min.x = mousePos.x\n\t\t\t\tnewBounds.max.y = mousePos.y\n\t\t\t\tbreak\n\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\n\t\t// Fixup so that min is always at the top left and max is always at the bottom right\n\t\treturn {\n\t\t\tboundary: b,\n\t\t\tnewBounds: createBounds(newBounds.min, newBounds.max)\n\t\t}\n\t})\n}\n\nexport const evaluateUtilFunction = (func: SubUtilityFunction, boundary: Boundary, constants: UtilityVariables, globalVars: UtilityVariables) => {\n\ttry {\n\t\treturn func.evalFunc({\n\t\t\t[func.utilVar]: boundary.vars[func.utilVar],\n\n\t\t\t// Non-boundary variables\n\t\t\t...constants,\n\t\t\t...globalVars\n\t\t})\n\t} catch {\n\t\treturn 0\n\t}\n}\n\nexport const evaluateServerUtilFunction = (serverUtilFunc: UtilityFunction, utilFuncs: Array<SubUtilityFunction>, boundary: Boundary, constants: UtilityVariables, globalVars: UtilityVariables) => {\n\tif (!serverUtilFunc.evalFunc)\n\t\treturn 0\n\n\tconst utilValues = {...boundary.vars, ...constants, ...globalVars}\n\tutilFuncs.forEach(func => {\n\t\tif (!func.evalFunc || func.utilVar === 'x')\n\t\t\treturn\n\t\tutilValues[`U_${func.utilVar}`] = evaluateUtilFunction(func, boundary, constants, globalVars)\n\t})\n\n\ttry {\n\t\treturn serverUtilFunc.evalFunc(utilValues)\n\t} catch(e) {\n\t\treturn 0\n\t}\n}\n\nexport const getDateString = (date: Date) => {\n\tconst pad = (n: number) => n < 10 ? '0' + n : n \n\n\treturn date.getFullYear() + '-'\n\t\t+ pad(date.getMonth() + 1) + '-'\n\t\t+ pad(date.getDate()) + '_'\n\t\t+ pad(date.getHours()) + '-'\n\t\t+ pad(date.getMinutes()) + '-'\n\t\t+ pad(date.getSeconds())\n}\n\nexport const createExportFilename = () => {\n\tconst date = new Date()\n\treturn `auratool_export_${getDateString(date)}.json`\n}\n","///<reference path=\"../types/types.d.ts\" />\n\nimport * as React from 'react'\n\nimport MathJax from 'react-mathjax2'\nimport Table from 'react-bootstrap/Table'\n\nimport ContentEditable from 'react-contenteditable'\n\n/*\ncost of sending and receiving an object migration\ncost of sending and receiving an aura creation\ncost of sending and receiving an aura update\ncost of sending and receiving an aura deletion\ncost of maintaining an aura on the sending and receiving side\nand then of course cost of simulating an object, but this is really dependent on what it is doing (sleeping or not, number of contacts, number of nearby objects)\nthen you can calculate the cost of having a boundary in particular place, depending on all the above factors\nthere's also the cost of number of objects that are completely out of their host server's region as the islands check has to be performed on them\n*/\n\nexport const constants: Variables = {\n\tC_m: {\n\t\tdesc: \"Cost of sending and receiving an object migration\",\n\t\tdefaultValue: 1\n\t},\n\tC_c: {\n\t\tdesc: \"Cost of sending and receiving an aura creation\",\n\t\tdefaultValue: 1\n\t},\n\tC_u: {\n\t\tdesc: \"Cost of sending and receiving an aura update\",\n\t\tdefaultValue: 1\n\t},\n\tC_d: {\n\t\tdesc: \"Cost of sending and receiving an aura deletion\",\n\t\tdefaultValue: 1\n\t},\n\tC_i: {\n\t\tdesc: \"Cost of number of objects out of host region (islands)\",\n\t\tdefaultValue: 1\n\t}\n}\n\nexport const globalVars: Variables = {\n\tsigma: {\n\t\ttype: \"count\",\n\t\tdesc: \"Number of servers\"\n\t},\n\tN: {\n\t\ttype: \"count\",\n\t\tdesc: \"Total number of objects in the world\"\n\t},\n\tt: {\n\t\ttype: \"count\",\n\t\tdesc: \"Time since boundaries were last moved (seconds)\"\n\t}\n}\n\nexport const vars: Variables = {\n\tlambda: {\n\t\ttype: \"proportion\",\n\t\tdesc: \"CPU load of the server\",\n\t},\n\tdelta: {\n\t\ttype: \"count\",\n\t\tdesc: \"Frame time for the physics simulation step (milliseconds)\",\n\t},\n\talpha: {\n\t\ttype: \"proportion\",\n\t\tdesc: \"Number of active (awake) objects\",\n\t},\n\tbeta: {\n\t\ttype: \"proportion\",\n\t\tdesc: \"Number of objects near a boundary\",\n\t},\n\tn: {\n\t\ttype: \"count\",\n\t\tdesc: \"Number of objects managed by this server\",\n\t}\n}\n\ninterface VariablesProps {\n\tboundaries: Array<Boundary>,\n\tutilConstants: UtilityConstants,\n\tutilGlobalVars: UtilityVariables,\n\tonUtilConstantUpdated: UtilConstantUpdatedCallback\n}\n\nexport const Variables: React.FC<VariablesProps> = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<h5>Constants (click to edit)</h5>\n\t\t\t<Table hover striped size=\"sm\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>Value</th>\n\t\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t{ Object.keys(props.utilConstants).map((v, i) =>\n\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t<td><MathJax.Node>{v}</MathJax.Node></td>\n\t\t\t\t\t\t<ContentEditable html={`${props.utilConstants[v]}`} tagName=\"td\" onChange={ e => props.onUtilConstantUpdated(v, parseFloat(e.target.value.trim())) }/>\n\t\t\t\t\t\t<td>{constants[v].desc}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t) }\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\n\t\t\t<h5>Global variables</h5>\n\t\t\t<Table hover striped size=\"sm\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>Value</th>\n\t\t\t\t\t\t<th>Type</th>\n\t\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t{ Object.keys(props.utilGlobalVars).map((v, i) =>\n\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t<td><MathJax.Node>{v}</MathJax.Node></td>\n\t\t\t\t\t\t<td>{props.utilGlobalVars[v].toFixed(2)}</td>\n\t\t\t\t\t\t<td>{globalVars[v].type}</td>\n\t\t\t\t\t\t<td>{globalVars[v].desc}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t) }\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\n\t\t\t<h5>Server-local variables</h5>\n\t\t\t<Table hover striped size=\"sm\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>Type</th>\n\t\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t{ Object.keys(vars).map((v, i) =>\n\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t<td><MathJax.Node>{v}</MathJax.Node></td>\n\t\t\t\t\t\t<td>{vars[v].type}</td>\n\t\t\t\t\t\t<td>{vars[v].desc}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t) }\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\n\t\t\t<h5>Server-local variable values</h5>\n\t\t\t{ props.boundaries.length > 0 && <Table hover striped size=\"sm\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Server</th>\n\t\t\t\t\t\t{ Object.keys(props.boundaries[0].vars).map((v, i) => <th key={i} title={`${vars[v].desc} (${vars[v].type})`}><MathJax.Node>{v}</MathJax.Node></th>) }\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t{ props.boundaries.map((b, i) =>\n\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t<td>{i}</td>\n\t\t\t\t\t\t{ Object.keys(b.vars).map((v, j) => <td key={j}>{b.vars[v].toFixed(2)}</td>) }\n\t\t\t\t\t</tr>\n\t\t\t\t) }\n\t\t\t\t</tbody>\n\t\t\t</Table> }\n\t\t</div>\n\t)\n}","import styled from 'styled-components'\n\n\nexport const FillParentFlexItem = styled.div`\n\tflex: 1;\n\theight: 100%;\n\twidth: 100%;\n\tmin-width: 0;\n\tmin-height: 0;\n`\n\nexport const ColumnFlexContainer = styled(FillParentFlexItem)`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\nexport const RowFlexContainer = styled(FillParentFlexItem)`\n\tdisplay: flex;\n\tflex-direction: row;\n`\n\nexport const ControlsContainer = styled.div`\n\tpadding: 0.25rem;\n\tposition: absolute;\n`\n","///<reference path=\"../types/types.d.ts\" />\n\nimport * as React from 'react'\n\nimport MathJax from 'react-mathjax2'\nimport * as ReactColor from 'react-color'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport styled from 'styled-components'\n\nimport Button from 'react-bootstrap/Button'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport FormControl from 'react-bootstrap/FormControl'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Tab from 'react-bootstrap/Tab'\nimport Table from 'react-bootstrap/Table'\nimport Tabs from 'react-bootstrap/Tabs'\n\nimport { evaluateServerUtilFunction } from '../Utility'\nimport { vars, Variables } from './Variables'\nimport { FillParentFlexItem } from '../Layout'\n\nexport const ControlPanelContainer = styled(FillParentFlexItem)`\n\toverflow-y: scroll;\n`\n\ninterface ControlPanelProps {\n\tshowColorPicker: boolean,\n\tcolorIndex?: number,\n\tonChangeColorClicked: ChangeColorClickedCallback,\n\tonColorUpdated: ColorUpdatedCallback,\n\n\tboundaries: Array<Boundary>,\n\tutilServer: UtilityFunction,\n\tutilFunctions: Array<SubUtilityFunction>,\n\tutilConstants: UtilityVariables,\n\tutilGlobalVars: UtilityVariables,\n\tonUtilFunctionAdded: UtilFuncAddedCallback,\n\tonUtilFunctionDeleted: UtilFuncDeletedCallback,\n\tonUtilFunctionUpdated: UtilFuncExpressionUpdatedCallback,\n\tonServerUtilFunctionUpdated: ServerUtilFuncExpressionUpdatedCallback,\n\tonUtilVarUpdated: UtilFuncVarUpdatedCallback,\n\tonUtilConstantUpdated: UtilConstantUpdatedCallback\n}\n\nexport const ControlPanel: React.FC<ControlPanelProps> = (props) => {\n\tconst popover: React.CSSProperties = {\n\t\tposition: 'absolute',\n\t\ttop: '2.5rem',\n\t\tright: 0,\n\t\tzIndex: 200,\n\t}\n\tconst cover: React.CSSProperties = {\n\t\tposition: 'fixed',\n\t\ttop: '0px',\n\t\tright: '0px',\n\t\tbottom: '0px',\n\t\tleft: '0px',\n\t}\n\n\tconst serverUtilValues = props.boundaries.map(b =>\n\t\tevaluateServerUtilFunction(props.utilServer, props.utilFunctions, b, props.utilConstants, props.utilGlobalVars)\n\t)\n\tconst globalUtilValue = serverUtilValues.length ? serverUtilValues.reduce((a, b) => a + b).toFixed(2) : 0\n\n\n/*\n<MathJax.Context\n\t\tinput='ascii'\n\t\toptions={{\n\t\t\tasciimath2jax: {\n\t\t\t\tuseMathMLspacing: true,\n\t\t\t\tpreview: \"none\",\n\t\t\t}\n\t\t}}\n\t>\n*/\n\n\treturn (\n\t\t<ControlPanelContainer>\n\t\t\t<Tabs id=\"control-panel\">\n\t\t\t\t<Tab eventKey=\"variables\" title=\"Variables\">\n\t\t\t\t\t<Variables boundaries={props.boundaries} utilConstants={props.utilConstants} utilGlobalVars={props.utilGlobalVars} onUtilConstantUpdated={props.onUtilConstantUpdated} />\n\t\t\t\t</Tab>\n\n\t\t\t\t<Tab eventKey=\"functions\" title=\"Functions\">\n\t\t\t\t\t<h5>Utility functions</h5>\n\t\t\t\t\t{ props.utilFunctions.map((func, i) =>\n\t\t\t\t\t\t<InputGroup className=\"mb-1\" key={i}>\n\t\t\t\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t\t\t\t<InputGroup.Text>\n\t\t\t\t\t\t\t\t\t<MathJax.Node inline>{`U_${func.utilVar}=${func.expression}`}</MathJax.Node>\n\t\t\t\t\t\t\t\t</InputGroup.Text>\n\t\t\t\t\t\t\t</InputGroup.Prepend>\n\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tplaceholder=\"Function (in ASCIImath)\"\n\t\t\t\t\t\t\t\taria-label=\"Function (in ASCIImath)\"\n\t\t\t\t\t\t\t\tonChange={ (e: React.FormEvent<HTMLInputElement>) => e.currentTarget.value && props.onUtilFunctionUpdated(i, e.currentTarget.value) }\n\t\t\t\t\t\t\t\tvalue={func.expression}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t\t\t<Dropdown>\n\t\t\t\t\t\t\t\t\t<Dropdown.Toggle id={`util-var-dropdown-${i}`} variant=\"dark\" style={{borderRadius: 0}}>\n\t\t\t\t\t\t\t\t\t\t<MathJax.Node inline>{func.utilVar}</MathJax.Node>\n\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\n\n\t\t\t\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t\t\t\t<Dropdown.Header>Utility variable</Dropdown.Header>\n\t\t\t\t\t\t\t\t\t\t<Dropdown.Item onSelect={() => { props.onUtilVarUpdated(i, \"x\") }}>\n\t\t\t\t\t\t\t\t\t\t\t<MathJax.Node inline>x</MathJax.Node>\n\t\t\t\t\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t\t<Dropdown.Divider />\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tObject.keys(vars).map((key, j) =>\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item key={j} onSelect={() => { props.onUtilVarUpdated(i, key) }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MathJax.Node>{key}</MathJax.Node>\n\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t\t\t</Dropdown>\n\n\t\t\t\t\t\t\t\t<Button onClick={() => props.onChangeColorClicked(i)} style={{backgroundColor: func.color}}><FontAwesomeIcon icon=\"palette\"/></Button>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tprops.showColorPicker && props.colorIndex === i &&\n\t\t\t\t\t\t\t\t\t<div style={ popover }>\n\t\t\t\t\t\t\t\t\t\t<div style={ cover } onClick={ () => props.onChangeColorClicked(undefined) }/>\n\t\t\t\t\t\t\t\t\t\t<ReactColor.SketchPicker disableAlpha={true} color={func.color} onChange={props.onColorUpdated} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t<Button variant=\"danger\" onClick={ () => props.onUtilFunctionDeleted(i) }>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"trash\"/>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t) }\n\t\t\t\t\t<Button className=\"mb-2\" variant=\"success\" onClick={props.onUtilFunctionAdded}><FontAwesomeIcon icon=\"plus\"/>&nbsp;Add function</Button>\n\n\t\t\t\t\t<h5>Local utility</h5>\n\t\t\t\t\t<InputGroup className=\"mb-1\">\n\t\t\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t\t\t<InputGroup.Text>\n\t\t\t\t\t\t\t\t<MathJax.Node inline>{`U_i=${props.utilServer.expression}`}</MathJax.Node>\n\t\t\t\t\t\t\t</InputGroup.Text>\n\t\t\t\t\t\t</InputGroup.Prepend>\n\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tplaceholder=\"Function (in ASCIImath)\"\n\t\t\t\t\t\t\taria-label=\"Function (in ASCIImath)\"\n\t\t\t\t\t\t\tonChange={ (e: React.FormEvent<HTMLInputElement>) => e.currentTarget.value && props.onServerUtilFunctionUpdated(e.currentTarget.value) }\n\t\t\t\t\t\t\tvalue={props.utilServer.expression}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t\t<Table hover striped size=\"sm\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Server</th>\n\t\t\t\t\t\t\t\t<th><MathJax.Node>U_i</MathJax.Node></th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{ props.boundaries.map((b, i) =>\n\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t<td>{i}</td>\n\t\t\t\t\t\t\t\t<td><MathJax.Node>{ serverUtilValues[i].toFixed(2) }</MathJax.Node></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\n\t\t\t\t\t<h5>Global utility</h5>\n\t\t\t\t\t<MathJax.Node>U_g = U_0 + U_1 + ... + U_n</MathJax.Node>\n\t\t\t\t\t= {globalUtilValue}\n\t\t\t\t</Tab>\n\n\t\t\t\t<Tab eventKey=\"boundaries\" title=\"Boundaries\">\n\t\t\t\t\t<Table hover striped size=\"sm\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Server</td>\n\t\t\t\t\t\t\t\t<td><MathJax.Node>x_1</MathJax.Node></td>\n\t\t\t\t\t\t\t\t<td><MathJax.Node>y_1</MathJax.Node></td>\n\t\t\t\t\t\t\t\t<td><MathJax.Node>x_2</MathJax.Node></td>\n\t\t\t\t\t\t\t\t<td><MathJax.Node>y_2</MathJax.Node></td>\n\t\t\t\t\t\t\t\t<td>Width</td>\n\t\t\t\t\t\t\t\t<td>Height</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{ props.boundaries.map((b, i) =>\n\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t<td>{i}</td>\n\t\t\t\t\t\t\t\t<td>{b.bounds.min.x.toFixed(2)}</td>\n\t\t\t\t\t\t\t\t<td>{b.bounds.min.y.toFixed(2)}</td>\n\t\t\t\t\t\t\t\t<td>{b.bounds.max.x.toFixed(2)}</td>\n\t\t\t\t\t\t\t\t<td>{b.bounds.max.y.toFixed(2)}</td>\n\t\t\t\t\t\t\t\t<td>{(b.bounds.max.x - b.bounds.min.x).toFixed(2)}</td>\n\t\t\t\t\t\t\t\t<td>{(b.bounds.max.y - b.bounds.min.y).toFixed(2)}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</Tab>\n\t\t\t</Tabs>\n\t\t</ControlPanelContainer>\n\t)\n}\n\nexport default ControlPanel","///<reference path=\"../types/types.d.ts\" />\n\nimport * as React from 'react'\nimport { Scatter } from 'react-chartjs-2'\nimport * as chartjs from 'chart.js'\nimport memoize from 'memoize-one'\n\nimport { evaluateUtilFunction } from '../Utility'\n\ninterface FunctionPlotProps {\n\t// width: number,\n\t// height: number,\n\tboundaries: Array<Boundary>,\n\tutilFunctions: Array<SubUtilityFunction>,\n\tutilConstants: UtilityConstants,\n\tutilGlobalVars: UtilityVariables\n}\n\ninterface FunctionPlotState {\n\t// width: number,\n\t// height: number,\n\txRange: Array<number>,\n\tyRange: Array<number>\n}\n\nexport default class FunctionPlot extends React.Component<FunctionPlotProps, FunctionPlotState> {\n\tconstructor(props: FunctionPlotProps) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\t//width: props.width,\n\t\t\t//height: props.height,\n\t\t\txRange: [0, 1],\n\t\t\tyRange: [0, 1],\n\t\t}\n\t}\n\n\t// Memoized function returns cached results when arguments are the same as the last call\n\tprivate updateCurves = memoize((funcs: Array<SubUtilityFunction>, constants, globalVars) => {\n\t\tconst numSteps = 100\n\t\tconst stepSize = (this.state.xRange[1] - this.state.xRange[0]) / numSteps\n\n\t\t// Plot curves\n\t\tlet datasets = new Array<chartjs.ChartDataSets>()\n\t\tfuncs.forEach(func => {\n\t\t\tif (!func.evalFunc)\n\t\t\t\treturn\n\n\t\t\tlet dataset: chartjs.ChartDataSets = {\n\t\t\t\tlabel: `U(${func.utilVar})`,\n\t\t\t\tfill: false,\n\t\t\t\tshowLine: true,\n\t\t\t\tpointRadius: 0,\n\t\t\t\tpointHitRadius: 2,\n\t\t\t\tbackgroundColor: func.color,\n\t\t\t\tborderColor: func.color,\n\t\t\t\tborderWidth: 2\n\t\t\t}\n\n\t\t\tdataset.data = new Array<chartjs.ChartPoint>(numSteps)\n\n\t\t\ttry {\n\t\t\t\tfor (let x: number = this.state.xRange[0]; x <= this.state.xRange[1]; x += stepSize) {\n\t\t\t\t\tconst y: number = func.evalFunc({\n\t\t\t\t\t\t[func.utilVar]: x,\n\n\t\t\t\t\t\t// Non-boundary variables\n\t\t\t\t\t\t...constants,\n\t\t\t\t\t\t...globalVars\n\t\t\t\t\t})\n\n\t\t\t\t\tdataset.data.push({x, y})\n\t\t\t\t}\n\t\t\t\tdatasets.push(dataset)\n\t\t\t} catch(e) {\n\t\t\t\t// Skip this function\n\t\t\t}\n\t\t})\n\n\t\treturn datasets\n\t})\n\n\tprivate updatePoints = memoize((\n\t\tboundaries: Array<Boundary>,\n\t\tfuncs: Array<SubUtilityFunction>,\n\t\tconstants: UtilityConstants,\n\t\tglobalVars: UtilityVariables) => {\n\t\t\tlet datasets = new Array<chartjs.ChartDataSets>()\n\n\t\t\tfuncs.forEach(func => {\n\t\t\t\tif (!func.evalFunc || func.utilVar === 'x')\n\t\t\t\t\treturn\n\n\t\t\t\ttry {\n\t\t\t\tboundaries.forEach((b, i) => {\n\t\t\t\t\tconst x = b.vars[func.utilVar]\n\t\t\t\t\tconst y = evaluateUtilFunction(func, b, constants, globalVars)\n\n\t\t\t\t\tdatasets.push({\n\t\t\t\t\t\tlabel: `B${i} U(${func.utilVar})`,\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t\tshowLine: false,\n\t\t\t\t\t\tpointRadius: 6,\n\t\t\t\t\t\tpointStyle: 'circle',\n\t\t\t\t\t\tpointHitRadius: 2,\n\t\t\t\t\t\tbackgroundColor: b.color,\n\t\t\t\t\t\tborderColor: func.color,\n\t\t\t\t\t\tdata: [{x, y}]\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t} catch(e) {\n\t\t\t\t\t// Skip this function\n\t\t\t\t}\n\t\t\t})\n\n\t\treturn datasets\n\t})\n\n\trender() {\n\t\tconst curves = this.updateCurves(this.props.utilFunctions, this.props.utilConstants, this.props.utilGlobalVars)\n\t\tconst points = this.updatePoints(this.props.boundaries, this.props.utilFunctions, this.props.utilConstants, this.props.utilGlobalVars)\n\t\tconst data = { datasets: points.concat(curves) }\n\n\t\treturn (\n\t\t\t<Scatter\n\t\t\t\tdata={ data }\n\t\t\t\toptions={{\n\t\t\t\t\tresponsive: true,\n\t\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\t\tanimation: {\n\t\t\t\t\t\tduration: 0\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n","///<reference path=\"../types/types.d.ts\" />\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport * as React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport logo from '../assets/logo.svg';\nimport { faFileImport, faFileExport } from '@fortawesome/free-solid-svg-icons';\n\ninterface HeaderProps {\n\tonImportClickedCallback?: ImportClickedCallback,\n\tonExportClickedCallback?: ExportClickedCallback\n}\n\nexport const Header: React.FC<HeaderProps> = (props) => {\n\treturn (\n\t\t<Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n\t\t\t<Navbar.Brand href=\"#home\">\n\t\t\t\t<img\n\t\t\t\t\tsrc={ logo }\n\t\t\t\t\twidth=\"200\"\n\t\t\t\t\tclassName=\"d-inline-block align-top\"\n\t\t\t\t\talt=\"auratool\"\n\t\t\t\t/>\n\t\t\t</Navbar.Brand>\n\t\t\t<Navbar.Text>\n\t\t\t\t<a href={`https://github.com/dwhinham/auratool/commit/${process.env.REACT_APP_GIT_SHA}`}>{process.env.REACT_APP_GIT_VERSION}</a>\n\t\t\t</Navbar.Text>\n\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\n\t\t\t\t<Nav className=\"ml-auto\">\n\t\t\t\t\t<Nav.Link onClick={ () => props.onImportClickedCallback && props.onImportClickedCallback() }>\n\t\t\t\t\t\t<FontAwesomeIcon icon={faFileImport} /> Import\n\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t<Nav.Link onClick={ () => props.onExportClickedCallback && props.onExportClickedCallback() }>\n\t\t\t\t\t\t<FontAwesomeIcon icon={faFileExport} /> Export\n\t\t\t\t\t</Nav.Link>\n\t\t\t\t</Nav>\n\t\t\t</Navbar.Collapse>\n\t\t</Navbar>\n\t)\n}\n\nexport default Header\n","///<reference path=\"../types/types.d.ts\" />\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport React from 'react'\n\nimport { useDrop } from 'react-dnd'\nimport { NativeTypes } from 'react-dnd-html5-backend'\nimport Button from 'react-bootstrap/Button'\nimport { faFolderOpen } from '@fortawesome/free-solid-svg-icons'\n\nconst outerStyle: React.CSSProperties = {\n\theight: '12rem',\n\tpadding: '1rem',\n\ttextAlign: 'center',\n\tfontSize: '1rem',\n\tlineHeight: 'normal',\n\tborder: '1px dashed darkgrey',\n\tborderRadius: '1rem',\n\tdisplay: 'table',\n\twidth: '100%'\n}\n\nconst middleStyle: React.CSSProperties = {\n\tdisplay: 'table-cell',\n\tverticalAlign: 'middle'\n}\n\nconst innerStyle: React.CSSProperties = {\n\tmarginLeft: 'auto',\n\tmarginRight: 'auto',\n}\n\ninterface ImportDropTargetProps {\n\tonFilesSelected?: FilesSelectedCallback\n}\n\nconst ImportDropTarget: React.FC<ImportDropTargetProps> = (props) => {\n\tlet fileUploader: HTMLInputElement | null = null\n\n\tconst [{ canDrop, isOver }, drop] = useDrop({\n\t\taccept: [ NativeTypes.FILE ],\n\t\tdrop: (item, monitor) => {\n\t\t\tconst files = monitor.getItem().files\n\t\t\tif (files && props.onFilesSelected)\n\t\t\t\tprops.onFilesSelected(files)\n\t\t},\n\t\tcollect: monitor => ({\n\t\t\tisOver: monitor.isOver(),\n\t\t\tcanDrop: monitor.canDrop()\n\t\t}),\n\t})\n\n\tlet backgroundColor = 'white'\n\n\t// Dragged file is over the drop zone\n\tif (canDrop && isOver) {\n\t\tbackgroundColor = 'lightgreen'\n\t\treturn (\n\t\t\t<div ref={drop} style={{ ...outerStyle, backgroundColor }}>\n\t\t\t\t<div style={ middleStyle }>\n\t\t\t\t\t<div style={ innerStyle }>\n\t\t\t\t\t\tRelease to drop!\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t// Dragged file is in the browser window\n\tif (canDrop) {\n\t\tbackgroundColor = 'lightyellow'\n\t\treturn (\n\t\t\t<div ref={drop} style={{ ...outerStyle, backgroundColor }}>\n\t\t\t\t<div style={ middleStyle }>\n\t\t\t\t\t<div style={ innerStyle }>\n\t\t\t\t\t\tDrag file here...\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t// No dragging\n\treturn (\n\t\t<div ref={drop} style={{ ...outerStyle, backgroundColor }}>\n\t\t\t<div style={ middleStyle }>\n\t\t\t\t<div style={ innerStyle }>\n\t\t\t\t\t<p>Drag and drop an exported .json file</p>\n\t\t\t\t\t<p>or:</p>\n\t\t\t\t\t<Button variant=\"success\" onClick={ () => { fileUploader && fileUploader.click() } }>\n\t\t\t\t\t\t<FontAwesomeIcon icon={faFolderOpen} /> Select from your computer\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\tid='file'\n\t\t\t\t\t\tref={ (input) => { fileUploader = input } }\n\t\t\t\t\t\tstyle={ {display: 'none'} }\n\t\t\t\t\t\tonChange={ (event) => { event.target.files && props.onFilesSelected && props.onFilesSelected(event.target.files) } }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default ImportDropTarget\n","///<reference path=\"../types/types.d.ts\" />\n\nimport Backend from 'react-dnd-html5-backend'\nimport { DndProvider } from 'react-dnd'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileImport } from '@fortawesome/free-solid-svg-icons'\nimport * as React from 'react'\n\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\nimport ImportDropTarget from './ImportDropTarget'\n\ninterface ImportModalProps {\n\tshow: boolean,\n\tonClosed?: ModalClosedCallback,\n\tonHide?: ModalHideCallback,\n\tonFilesSelected?: FilesSelectedCallback,\n}\n\nconst ImportModal: React.FC<ImportModalProps> = (props) => {\n\treturn (\n\t\t<Modal show={ props.show } onHide={ () => { props.onHide && props.onHide() } }>\n\t\t\t<Modal.Header closeButton>\n\t\t\t\t<Modal.Title>Import data</Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Body>\n\t\t\t\t<DndProvider backend={Backend}>\n\t\t\t\t\t<ImportDropTarget onFilesSelected={ (files) => { props.onFilesSelected && props.onFilesSelected(files) } } />\n\t\t\t\t</DndProvider>\n\t\t\t</Modal.Body>\n\t\t\t<Modal.Footer>\n\t\t\t\t<Button variant=\"primary\" onClick={ () => { props.onClosed && props.onClosed() } }>\n\t\t\t\t\t<FontAwesomeIcon icon={ faFileImport } /> Import\n\t\t\t\t</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t)\n}\n\nexport default ImportModal\n","/**\n* Custom Matter.js Canvas renderer based on Matter.Render.\n*\n* @class PhysicsRenderer\n*/\n\nimport Bounds from 'matter-js/src/geometry/Bounds'\nimport Common from 'matter-js/src/core/Common'\nimport Composite from 'matter-js/src/body/Composite'\nimport Events from 'matter-js/src/core/Events'\nimport Grid from 'matter-js/src/collision/Grid'\nimport Mouse from 'matter-js/src/core/Mouse'\nimport Vector from 'matter-js/src/geometry/Vector'\nimport { round } from 'lodash'\n\nexport class PhysicsRenderer {\n\tstatic _requestAnimationFrame = (() => {\n\t\tif (typeof window !== 'undefined') {\n\t\t\treturn  window.requestAnimationFrame ||\n\t\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\t\twindow.msRequestAnimationFrame ||\n\t\t\t\t\tfunction(callback) { window.setTimeout(function() { callback(Common.now()) }, 1000 / 60) }\n\n\t\t}\n\t})()\n\n\tstatic _cancelAnimationFrame = (() => {\n\t\tif (typeof window !== 'undefined') {\n\t\t\treturn  window.cancelAnimationFrame ||\n\t\t\t\t\twindow.mozCancelAnimationFrame ||\n\t\t\t\t\twindow.webkitCancelAnimationFrame ||\n\t\t\t\t\twindow.msCancelAnimationFrame\n\t\t}\n\t})()\n\n\tbounds\n\tcanvas\n\tcontext\n\tcurrentBackground\n\tengine\n\tframe\n\tframeRequestId\n\tmouse\n\toptions\n\ttextures\n\n\t/**\n\t * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n\t * All properties have default values, and many are pre-calculated automatically based on other properties.\n\t * See the properties section below for detailed information on what you can pass via the `options` object.\n\t * @method create\n\t * @param {object} [options]\n\t * @return {render} A new renderer\n\t */\n\tstatic create(options) {\n\t\tvar defaults = {\n\t\t\tcontroller: PhysicsRenderer,\n\t\t\tengine: null,\n\t\t\telement: null,\n\t\t\tcanvas: null,\n\t\t\tmouse: null,\n\t\t\tframeRequestId: null,\n\t\t\toptions: {\n\t\t\t\twidth: 800,\n\t\t\t\theight: 600,\n\t\t\t\tpixelRatio: 1,\n\t\t\t\tbackground: '#18181d',\n\t\t\t\twireframeBackground: '#0f0f13',\n\t\t\t\tgridSize: 50,\n\t\t\t\thasBounds: !!options.bounds,\n\t\t\t\tenabled: true,\n\t\t\t\twireframes: true,\n\t\t\t\tshowSleeping: true,\n\t\t\t\tshowDebug: false,\n\t\t\t\tshowBroadphase: false,\n\t\t\t\tshowBounds: false,\n\t\t\t\tshowVelocity: false,\n\t\t\t\tshowCollisions: false,\n\t\t\t\tshowSeparations: false,\n\t\t\t\tshowAxes: false,\n\t\t\t\tshowPositions: false,\n\t\t\t\tshowAngleIndicator: false,\n\t\t\t\tshowIds: false,\n\t\t\t\tshowShadows: false,\n\t\t\t\tshowVertexNumbers: false,\n\t\t\t\tshowConvexHulls: false,\n\t\t\t\tshowInternalEdges: false,\n\t\t\t\tshowMousePosition: false,\n\t\t\t\tshowGrid: true,\n\t\t\t\tcrosshairSnap: false,\n\t\t\t}\n\t\t};\n\n\t\tvar render = Common.extend(defaults, options);\n\n\t\tif (render.canvas) {\n\t\t\trender.canvas.width = render.options.width || render.canvas.width;\n\t\t\trender.canvas.height = render.options.height || render.canvas.height;\n\t\t}\n\n\t\trender.mouse = options.mouse;\n\t\trender.engine = options.engine;\n\t\trender.canvas = render.canvas || PhysicsRenderer._createCanvas(render.options.width, render.options.height);\n\t\trender.context = render.canvas.getContext('2d');\n\t\trender.textures = {};\n\n\t\trender.bounds = render.bounds || {\n\t\t\tmin: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0\n\t\t\t},\n\t\t\tmax: {\n\t\t\t\tx: render.canvas.width,\n\t\t\t\ty: render.canvas.height\n\t\t\t}\n\t\t};\n\n\t\tif (render.options.pixelRatio !== 1) {\n\t\t\tPhysicsRenderer.setPixelRatio(render, render.options.pixelRatio);\n\t\t}\n\n\t\tif (Common.isElement(render.element)) {\n\t\t\trender.element.appendChild(render.canvas);\n\t\t} else if (!render.canvas.parentNode) {\n\t\t\tCommon.log('PhysicsRenderer.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n\t\t}\n\n\t\treturn render;\n\t}\n\n\t/**\n\t * Continuously updates the render canvas on the `requestAnimationFrame` event.\n\t * @method run\n\t * @param {render} render\n\t */\n\tstatic run(render) {\n\t\t(function loop(time){\n\t\t\trender.frameRequestId = PhysicsRenderer._requestAnimationFrame.call(window, loop);\n\t\t\tPhysicsRenderer.world(render);\n\t\t})();\n\t};\n\n\t/**\n\t * Ends execution of `PhysicsRenderer.run` on the given `render`, by canceling the animation frame request event loop.\n\t * @method stop\n\t * @param {render} render\n\t */\n\tstatic stop(render) {\n\t\tPhysicsRenderer._cancelAnimationFrame.call(window, render.frameRequestId);\n\t};\n\n\t/**\n\t * Sets the pixel ratio of the renderer and updates the canvas.\n\t * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n\t * @method setPixelRatio\n\t * @param {render} render\n\t * @param {number} pixelRatio\n\t */\n\tstatic setPixelRatio(render, pixelRatio) {\n\t\tvar options = render.options,\n\t\t\tcanvas = render.canvas;\n\n\t\tif (pixelRatio === 'auto') {\n\t\t\tpixelRatio = PhysicsRenderer._getPixelRatio(canvas);\n\t\t}\n\n\t\toptions.pixelRatio = pixelRatio;\n\t\tcanvas.setAttribute('data-pixel-ratio', pixelRatio);\n\t\tcanvas.width = options.width * pixelRatio;\n\t\tcanvas.height = options.height * pixelRatio;\n\t\tcanvas.style.width = options.width + 'px';\n\t\tcanvas.style.height = options.height + 'px';\n\t};\n\n\t/**\n\t * Positions and sizes the viewport around the given object bounds.\n\t * Objects must have at least one of the following properties:\n\t * - `object.bounds`\n\t * - `object.position`\n\t * - `object.min` and `object.max`\n\t * - `object.x` and `object.y`\n\t * @method lookAt\n\t * @param {render} render\n\t * @param {object[]} objects\n\t * @param {vector} [padding]\n\t * @param {bool} [center=true]\n\t */\n\tstatic lookAt(render, objects, padding, center) {\n\t\tcenter = typeof center !== 'undefined' ? center : true;\n\t\tobjects = Common.isArray(objects) ? objects : [objects];\n\t\tpadding = padding || {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t};\n\n\t\t// find bounds of all objects\n\t\tvar bounds = {\n\t\t\tmin: { x: Infinity, y: Infinity },\n\t\t\tmax: { x: -Infinity, y: -Infinity }\n\t\t};\n\n\t\tfor (var i = 0; i < objects.length; i += 1) {\n\t\t\tvar object = objects[i],\n\t\t\t\tmin = object.bounds ? object.bounds.min : (object.min || object.position || object),\n\t\t\t\tmax = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n\t\t\tif (min && max) {\n\t\t\t\tif (min.x < bounds.min.x)\n\t\t\t\t\tbounds.min.x = min.x;\n\n\t\t\t\tif (max.x > bounds.max.x)\n\t\t\t\t\tbounds.max.x = max.x;\n\n\t\t\t\tif (min.y < bounds.min.y)\n\t\t\t\t\tbounds.min.y = min.y;\n\n\t\t\t\tif (max.y > bounds.max.y)\n\t\t\t\t\tbounds.max.y = max.y;\n\t\t\t}\n\t\t}\n\n\t\t// find ratios\n\t\tvar width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n\t\t\theight = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n\t\t\tviewHeight = render.canvas.height,\n\t\t\tviewWidth = render.canvas.width,\n\t\t\touterRatio = viewWidth / viewHeight,\n\t\t\tinnerRatio = width / height,\n\t\t\tscaleX = 1,\n\t\t\tscaleY = 1;\n\n\t\t// find scale factor\n\t\tif (innerRatio > outerRatio) {\n\t\t\tscaleY = innerRatio / outerRatio;\n\t\t} else {\n\t\t\tscaleX = outerRatio / innerRatio;\n\t\t}\n\n\t\t// enable bounds\n\t\trender.options.hasBounds = true;\n\n\t\t// position and size\n\t\trender.bounds.min.x = bounds.min.x;\n\t\trender.bounds.max.x = bounds.min.x + width * scaleX;\n\t\trender.bounds.min.y = bounds.min.y;\n\t\trender.bounds.max.y = bounds.min.y + height * scaleY;\n\n\t\t// center\n\t\tif (center) {\n\t\t\trender.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n\t\t\trender.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n\t\t\trender.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n\t\t\trender.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n\t\t}\n\n\t\t// padding\n\t\trender.bounds.min.x -= padding.x;\n\t\trender.bounds.max.x -= padding.x;\n\t\trender.bounds.min.y -= padding.y;\n\t\trender.bounds.max.y -= padding.y;\n\n\t\t// update mouse\n\t\tif (render.mouse) {\n\t\t\tMouse.setScale(render.mouse, {\n\t\t\t\tx: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n\t\t\t\ty: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n\t\t\t});\n\n\t\t\tMouse.setOffset(render.mouse, render.bounds.min);\n\t\t}\n\t};\n\n\t/**\n\t * Applies viewport transforms based on `render.bounds` to a render context.\n\t * @method startViewTransform\n\t * @param {render} render\n\t */\n\tstatic startViewTransform(render) {\n\t\tvar boundsWidth = render.bounds.max.x - render.bounds.min.x,\n\t\t\tboundsHeight = render.bounds.max.y - render.bounds.min.y,\n\t\t\tboundsScaleX = boundsWidth / render.options.width,\n\t\t\tboundsScaleY = boundsHeight / render.options.height;\n\n\t\trender.context.setTransform(\n\t\t\trender.options.pixelRatio / boundsScaleX, 0, 0,\n\t\t\trender.options.pixelRatio / boundsScaleY, 0, 0\n\t\t);\n\n\t\trender.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n\t};\n\n\t/**\n\t * Resets all transforms on the render context.\n\t * @method endViewTransform\n\t * @param {render} render\n\t */\n\tstatic endViewTransform(render) {\n\t\trender.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n\t};\n\n\tstatic drawGrid(render, context) {\n\t\tvar gridSize = render.options.gridSize\n\t\tconst canvasWidth = render.canvas.width\n\t\tconst canvasHeight = render.canvas.height\n\t\tconst bounds = render.bounds\n\n\t\t// Convert between viewport/canvas coords\n\t\tconst boundsWidth = (bounds.max.x - bounds.min.x)\n\t\tconst boundsHeight = (bounds.max.y - bounds.min.y)\n\t\tconst scale = canvasWidth / boundsWidth\n\n\t\tconst xOriginOffset = -bounds.min.x\n\t\tconst yOriginOffset = -bounds.min.y\n\n\t\tconst xGridOffset = PhysicsRenderer._mod(xOriginOffset, gridSize)\n\t\tconst yGridOffset = PhysicsRenderer._mod(yOriginOffset, gridSize)\n\n\t\tconst gridStrokeStyle = 'rgb(128, 128, 255, 0.2)'\n\t\tconst originStrokeStyle = 'rgb(255, 128, 128, 0.5)'\n\n\t\tcontext.lineWidth = 1\n\t\tcontext.setLineDash([])\n\t\tcontext.strokeStyle = gridStrokeStyle\n\t\tcontext.fillStyle = 'black'\n\n\t\tconst drawXGridLine = (x, label) => {\n\t\t\tx = PhysicsRenderer._roundDrawCoord(x)\n\t\t\tcontext.beginPath()\n\t\t\tcontext.moveTo(x, 0)\n\t\t\tcontext.lineTo(x, canvasHeight)\n\t\t\tcontext.stroke()\n\n\t\t\tcontext.fillText(label, x + 2, canvasHeight - 2)\n\t\t}\n\n\t\tconst drawYGridLine = (y, label) => {\n\t\t\ty = PhysicsRenderer._roundDrawCoord(y)\n\t\t\tcontext.beginPath()\n\t\t\tcontext.moveTo(0, y)\n\t\t\tcontext.lineTo(canvasWidth, y)\n\t\t\tcontext.stroke()\n\n\t\t\tcontext.fillText(label, 0, y - 4)\n\t\t}\n\n\t\t// Axis labels\n\t\tvar xLabel = Math.floor(bounds.min.x / gridSize) * gridSize\n\t\tvar yLabel = Math.floor(bounds.min.y / gridSize) * gridSize\n\t\tif (xGridOffset !== 0) xLabel += gridSize\n\t\tif (yGridOffset !== 0) yLabel += gridSize\n\n\t\tfor (var x = xGridOffset; x < boundsWidth; x += gridSize, xLabel += gridSize) {\n\t\t\tif (PhysicsRenderer._almostEqual(x, xOriginOffset)) {\n\t\t\t\t// Red origin line\n\t\t\t\tcontext.save()\n\t\t\t\tcontext.strokeStyle = originStrokeStyle\n\t\t\t\tdrawXGridLine(x * scale, xLabel)\n\t\t\t\tcontext.restore()\n\t\t\t}\n\t\t\telse drawXGridLine(x * scale, xLabel)\n\t\t}\n\n\t\tfor (var y = yGridOffset; y < boundsHeight; y += gridSize, yLabel += gridSize) {\n\t\t\tif (PhysicsRenderer._almostEqual(y, yOriginOffset)) {\n\t\t\t\t// Red origin line\n\t\t\t\tcontext.save()\n\t\t\t\tcontext.strokeStyle = originStrokeStyle\n\t\t\t\tdrawYGridLine(y * scale, yLabel)\n\t\t\t\tcontext.restore()\n\t\t\t}\n\t\t\telse drawYGridLine(y * scale, yLabel)\n\t\t}\n\t};\n\n\tstatic drawCrosshair(render, context) {\n\t\tconst scale = render.canvas.width / (render.bounds.max.x - render.bounds.min.x)\n\t\tconst gridSize = render.options.gridSize\n\n\t\tif (!render.mouse)\n\t\t\treturn\n\n\t\tvar crosshairX = render.mouse.position.x\n\t\tvar crosshairY = render.mouse.position.y\n\n\t\tif (render.options.crosshairSnap) {\n\t\t\tcrosshairX = Math.round(crosshairX / gridSize) * gridSize\n\t\t\tcrosshairY = Math.round(crosshairY / gridSize) * gridSize\n\t\t}\n\n\t\tconst drawX = PhysicsRenderer._roundDrawCoord((crosshairX - render.bounds.min.x) * scale)\n\t\tconst drawY = PhysicsRenderer._roundDrawCoord((crosshairY - render.bounds.min.y) * scale)\n\n\t\tcontext.setLineDash([5, 8])\n\t\tcontext.lineWidth = 1\n\t\tcontext.strokeStyle = 'black'\n\t\tcontext.fillStyle = 'black'\n\n\t\tcontext.beginPath()\n\t\tcontext.moveTo(drawX, 0)\n\t\tcontext.lineTo(drawX, render.canvas.height)\n\t\tcontext.stroke()\n\n\t\tcontext.beginPath()\n\t\tcontext.moveTo(0, drawY)\n\t\tcontext.lineTo(render.canvas.width, drawY)\n\t\tcontext.stroke()\n\n\t\t// Draw coordinates\n\t\tcontext.fillText(`${round(crosshairX, 2)}, ${round(crosshairY, 2)}`, drawX + 10, drawY - 10)\n\t};\n\n\t/**\n\t * Renders the given `engine`'s `Matter.World` object.\n\t * This is the entry point for all rendering and should be called every time the scene changes.\n\t * @method world\n\t * @param {render} render\n\t */\n\tstatic world(render) {\n\t\tvar engine = render.engine,\n\t\t\tworld = engine.world,\n\t\t\tcanvas = render.canvas,\n\t\t\tcontext = render.context,\n\t\t\toptions = render.options,\n\t\t\tallBodies = Composite.allBodies(world),\n\t\t\tallConstraints = Composite.allConstraints(world),\n\t\t\tbackground = options.wireframes ? options.wireframeBackground : options.background,\n\t\t\tbodies = [],\n\t\t\tconstraints = [],\n\t\t\ti;\n\n\t\tvar event = {\n\t\t\ttimestamp: engine.timing.timestamp\n\t\t};\n\n\t\tEvents.trigger(render, 'beforeRender', event);\n\n\t\t// apply background if it has changed\n\t\tif (render.currentBackground !== background)\n\t\t\tPhysicsRenderer._applyBackground(render, background);\n\n\t\t// clear the canvas with a transparent fill, to allow the canvas background to show\n\t\tcontext.globalCompositeOperation = 'source-in';\n\t\tcontext.fillStyle = \"transparent\";\n\t\tcontext.fillRect(0, 0, canvas.width, canvas.height);\n\t\tcontext.globalCompositeOperation = 'source-over';\n\n\t\t// Render grid\n\t\tif (render.options.showGrid)\n\t\t\tPhysicsRenderer.drawGrid(render, context);\n\n\t\tEvents.trigger(render, 'beforeObjects', event);\n\n\t\t// handle bounds\n\t\tif (options.hasBounds) {\n\t\t\t// filter out bodies that are not in view\n\t\t\tfor (i = 0; i < allBodies.length; i++) {\n\t\t\t\tvar body = allBodies[i];\n\t\t\t\tif (Bounds.overlaps(body.bounds, render.bounds))\n\t\t\t\t\tbodies.push(body);\n\t\t\t}\n\n\t\t\t// filter out constraints that are not in view\n\t\t\tfor (i = 0; i < allConstraints.length; i++) {\n\t\t\t\tvar constraint = allConstraints[i],\n\t\t\t\t\tbodyA = constraint.bodyA,\n\t\t\t\t\tbodyB = constraint.bodyB,\n\t\t\t\t\tpointAWorld = constraint.pointA,\n\t\t\t\t\tpointBWorld = constraint.pointB;\n\n\t\t\t\tif (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n\t\t\t\tif (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n\t\t\t\tif (!pointAWorld || !pointBWorld)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n\t\t\t\t\tconstraints.push(constraint);\n\t\t\t}\n\n\t\t\t// transform the view\n\t\t\tPhysicsRenderer.startViewTransform(render);\n\n\t\t\t// update mouse\n\t\t\tif (render.mouse) {\n\t\t\t\tMouse.setScale(render.mouse, {\n\t\t\t\t\tx: (render.bounds.max.x - render.bounds.min.x) / render.options.width,\n\t\t\t\t\ty: (render.bounds.max.y - render.bounds.min.y) / render.options.height\n\t\t\t\t});\n\n\t\t\t\tMouse.setOffset(render.mouse, render.bounds.min);\n\t\t\t}\n\t\t} else {\n\t\t\tconstraints = allConstraints;\n\t\t\tbodies = allBodies;\n\n\t\t\tif (render.options.pixelRatio !== 1) {\n\t\t\t\trender.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n\t\t\t// fully featured rendering of bodies\n\t\t\tPhysicsRenderer.bodies(render, bodies, context);\n\t\t} else {\n\t\t\tif (options.showConvexHulls)\n\t\t\t\tPhysicsRenderer.bodyConvexHulls(render, bodies, context);\n\n\t\t\t// optimised method for wireframes only\n\t\t\tPhysicsRenderer.bodyWireframes(render, bodies, context);\n\t\t}\n\n\t\tif (options.showBounds)\n\t\t\tPhysicsRenderer.bodyBounds(render, bodies, context);\n\n\t\tif (options.showAxes || options.showAngleIndicator)\n\t\t\tPhysicsRenderer.bodyAxes(render, bodies, context);\n\n\t\tif (options.showPositions)\n\t\t\tPhysicsRenderer.bodyPositions(render, bodies, context);\n\n\t\tif (options.showVelocity)\n\t\t\tPhysicsRenderer.bodyVelocity(render, bodies, context);\n\n\t\tif (options.showIds)\n\t\t\tPhysicsRenderer.bodyIds(render, bodies, context);\n\n\t\tif (options.showSeparations)\n\t\t\tPhysicsRenderer.separations(render, engine.pairs.list, context);\n\n\t\tif (options.showCollisions)\n\t\t\tPhysicsRenderer.collisions(render, engine.pairs.list, context);\n\n\t\tif (options.showVertexNumbers)\n\t\t\tPhysicsRenderer.vertexNumbers(render, bodies, context);\n\n\t\tif (options.showMousePosition)\n\t\t\tPhysicsRenderer.mousePosition(render, render.mouse, context);\n\n\t\tPhysicsRenderer.constraints(constraints, context);\n\n\t\tif (options.showBroadphase && engine.broadphase.controller === Grid)\n\t\t\tPhysicsRenderer.grid(render, engine.broadphase, context);\n\n\t\tif (options.showDebug)\n\t\t\tPhysicsRenderer.debug(render, context);\n\n\t\tif (options.hasBounds) {\n\t\t\t// revert view transforms\n\t\t\tPhysicsRenderer.endViewTransform(render);\n\t\t}\n\n\t\tEvents.trigger(render, 'afterRender', event);\n\n\t\t// Render crosshair\n\t\tif (render.options.showCrosshair)\n\t\t\tPhysicsRenderer.drawCrosshair(render, context);\n\t};\n\n\t/**\n\t * Description\n\t * @private\n\t * @method debug\n\t * @param {render} render\n\t * @param {RenderingContext} context\n\t */\n\tstatic debug(render, context) {\n\t\tvar c = context,\n\t\t\tengine = render.engine,\n\t\t\tworld = engine.world,\n\t\t\tmetrics = engine.metrics,\n\t\t\toptions = render.options,\n\t\t\tbodies = Composite.allBodies(world),\n\t\t\tspace = \"    \";\n\n\t\tif (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n\t\t\tvar text = \"\";\n\n\t\t\tif (metrics.timing) {\n\t\t\t\ttext += \"fps: \" + Math.round(metrics.timing.fps) + space;\n\t\t\t}\n\n\t\t\t// @if DEBUG\n\t\t\tif (metrics.extended) {\n\t\t\t\tif (metrics.timing) {\n\t\t\t\t\ttext += \"delta: \" + metrics.timing.delta.toFixed(3) + space;\n\t\t\t\t\ttext += \"correction: \" + metrics.timing.correction.toFixed(3) + space;\n\t\t\t\t}\n\n\t\t\t\ttext += \"bodies: \" + bodies.length + space;\n\n\t\t\t\tif (engine.broadphase.controller === Grid)\n\t\t\t\t\ttext += \"buckets: \" + metrics.buckets + space;\n\n\t\t\t\ttext += \"\\n\";\n\n\t\t\t\ttext += \"collisions: \" + metrics.collisions + space;\n\t\t\t\ttext += \"pairs: \" + engine.pairs.list.length + space;\n\t\t\t\ttext += \"broad: \" + metrics.broadEff + space;\n\t\t\t\ttext += \"mid: \" + metrics.midEff + space;\n\t\t\t\ttext += \"narrow: \" + metrics.narrowEff + space;\n\t\t\t}\n\t\t\t// @endif\n\n\t\t\trender.debugString = text;\n\t\t\trender.debugTimestamp = engine.timing.timestamp;\n\t\t}\n\n\t\tif (render.debugString) {\n\t\t\tc.font = \"12px Arial\";\n\n\t\t\tif (options.wireframes) {\n\t\t\t\tc.fillStyle = 'rgba(255,255,255,0.5)';\n\t\t\t} else {\n\t\t\t\tc.fillStyle = 'rgba(0,0,0,0.5)';\n\t\t\t}\n\n\t\t\tvar split = render.debugString.split('\\n');\n\n\t\t\tfor (var i = 0; i < split.length; i++) {\n\t\t\t\tc.fillText(split[i], 50, 50 + i * 18);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Description\n\t * @private\n\t * @method constraints\n\t * @param {constraint[]} constraints\n\t * @param {RenderingContext} context\n\t */\n\tstatic constraints(constraints, context) {\n\t\tvar c = context;\n\n\t\tfor (var i = 0; i < constraints.length; i++) {\n\t\t\tvar constraint = constraints[i];\n\n\t\t\tif (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n\t\t\t\tcontinue;\n\n\t\t\tvar bodyA = constraint.bodyA,\n\t\t\t\tbodyB = constraint.bodyB,\n\t\t\t\tstart,\n\t\t\t\tend;\n\n\t\t\tif (bodyA) {\n\t\t\t\tstart = Vector.add(bodyA.position, constraint.pointA);\n\t\t\t} else {\n\t\t\t\tstart = constraint.pointA;\n\t\t\t}\n\n\t\t\tif (constraint.render.type === 'pin') {\n\t\t\t\tc.beginPath();\n\t\t\t\tc.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n\t\t\t\tc.closePath();\n\t\t\t} else {\n\t\t\t\tif (bodyB) {\n\t\t\t\t\tend = Vector.add(bodyB.position, constraint.pointB);\n\t\t\t\t} else {\n\t\t\t\t\tend = constraint.pointB;\n\t\t\t\t}\n\n\t\t\t\tc.beginPath();\n\t\t\t\tc.moveTo(start.x, start.y);\n\n\t\t\t\tif (constraint.render.type === 'spring') {\n\t\t\t\t\tvar delta = Vector.sub(end, start),\n\t\t\t\t\t\tnormal = Vector.perp(Vector.normalise(delta)),\n\t\t\t\t\t\tcoils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n\t\t\t\t\t\toffset;\n\n\t\t\t\t\tfor (var j = 1; j < coils; j += 1) {\n\t\t\t\t\t\toffset = j % 2 === 0 ? 1 : -1;\n\n\t\t\t\t\t\tc.lineTo(\n\t\t\t\t\t\t\tstart.x + delta.x * (j / coils) + normal.x * offset * 4,\n\t\t\t\t\t\t\tstart.y + delta.y * (j / coils) + normal.y * offset * 4\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tc.lineTo(end.x, end.y);\n\t\t\t}\n\n\t\t\tif (constraint.render.lineWidth) {\n\t\t\t\tc.lineWidth = constraint.render.lineWidth;\n\t\t\t\tc.strokeStyle = constraint.render.strokeStyle;\n\t\t\t\tc.stroke();\n\t\t\t}\n\n\t\t\tif (constraint.render.anchors) {\n\t\t\t\tc.fillStyle = constraint.render.strokeStyle;\n\t\t\t\tc.beginPath();\n\t\t\t\tc.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n\t\t\t\tc.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n\t\t\t\tc.closePath();\n\t\t\t\tc.fill();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Description\n\t * @private\n\t * @method bodyShadows\n\t * @param {render} render\n\t * @param {body[]} bodies\n\t * @param {RenderingContext} context\n\t */\n\tstatic bodyShadows(render, bodies, context) {\n\t\tvar c = context;\n\n\t\tfor (var i = 0; i < bodies.length; i++) {\n\t\t\tvar body = bodies[i];\n\n\t\t\tif (!body.render.visible)\n\t\t\t\tcontinue;\n\n\t\t\tif (body.circleRadius) {\n\t\t\t\tc.beginPath();\n\t\t\t\tc.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n\t\t\t\tc.closePath();\n\t\t\t} else {\n\t\t\t\tc.beginPath();\n\t\t\t\tc.moveTo(body.vertices[0].x, body.vertices[0].y);\n\t\t\t\tfor (var j = 1; j < body.vertices.length; j++) {\n\t\t\t\t\tc.lineTo(body.vertices[j].x, body.vertices[j].y);\n\t\t\t\t}\n\t\t\t\tc.closePath();\n\t\t\t}\n\n\t\t\tvar distanceX = body.position.x - render.options.width * 0.5,\n\t\t\t\tdistanceY = body.position.y - render.options.height * 0.2,\n\t\t\t\tdistance = Math.abs(distanceX) + Math.abs(distanceY);\n\n\t\t\tc.shadowColor = 'rgba(0,0,0,0.15)';\n\t\t\tc.shadowOffsetX = 0.05 * distanceX;\n\t\t\tc.shadowOffsetY = 0.05 * distanceY;\n\t\t\tc.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n\t\t\tc.fill();\n\n\t\t\tc.shadowColor = null;\n\t\t\tc.shadowOffsetX = null;\n\t\t\tc.shadowOffsetY = null;\n\t\t\tc.shadowBlur = null;\n\t\t}\n\t};\n\n\t/**\n\t * Description\n\t * @private\n\t * @method bodies\n\t * @param {render} render\n\t * @param {body[]} bodies\n\t * @param {RenderingContext} context\n\t */\n\tstatic bodies(render, bodies, context) {\n\t\tvar c = context,\n\t\t\toptions = render.options,\n\t\t\tshowInternalEdges = options.showInternalEdges || !options.wireframes,\n\t\t\tbody,\n\t\t\tpart,\n\t\t\ti,\n\t\t\tk;\n\n\t\tfor (i = 0; i < bodies.length; i++) {\n\t\t\tbody = bodies[i];\n\n\t\t\tif (!body.render.visible)\n\t\t\t\tcontinue;\n\n\t\t\t// handle compound parts\n\t\t\tfor (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n\t\t\t\tpart = body.parts[k];\n\n\t\t\t\tif (!part.render.visible)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// if (options.showSleeping && body.isSleeping) {\n\t\t\t\t//     c.globalAlpha = 0.5 * part.render.opacity;\n\t\t\t\t// } else if (part.render.opacity !== 1) {\n\t\t\t\t//     c.globalAlpha = part.render.opacity;\n\t\t\t\t// }\n\n\t\t\t\tif (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n\t\t\t\t\t// part sprite\n\t\t\t\t\tvar sprite = part.render.sprite,\n\t\t\t\t\t\ttexture = PhysicsRenderer._getTexture(render, sprite.texture);\n\n\t\t\t\t\tc.translate(part.position.x, part.position.y);\n\t\t\t\t\tc.rotate(part.angle);\n\n\t\t\t\t\tc.drawImage(\n\t\t\t\t\t\ttexture,\n\t\t\t\t\t\ttexture.width * -sprite.xOffset * sprite.xScale,\n\t\t\t\t\t\ttexture.height * -sprite.yOffset * sprite.yScale,\n\t\t\t\t\t\ttexture.width * sprite.xScale,\n\t\t\t\t\t\ttexture.height * sprite.yScale\n\t\t\t\t\t);\n\n\t\t\t\t\t// revert translation, hopefully faster than save / restore\n\t\t\t\t\tc.rotate(-part.angle);\n\t\t\t\t\tc.translate(-part.position.x, -part.position.y);\n\t\t\t\t} else {\n\t\t\t\t\t// part polygon\n\t\t\t\t\tif (part.circleRadius) {\n\t\t\t\t\t\tc.beginPath();\n\t\t\t\t\t\tc.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.beginPath();\n\t\t\t\t\t\tc.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n\t\t\t\t\t\tfor (var j = 1; j < part.vertices.length; j++) {\n\t\t\t\t\t\t\tif (!part.vertices[j - 1].isInternal || showInternalEdges) {\n\t\t\t\t\t\t\t\tc.lineTo(part.vertices[j].x, part.vertices[j].y);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tc.moveTo(part.vertices[j].x, part.vertices[j].y);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (part.vertices[j].isInternal && !showInternalEdges) {\n\t\t\t\t\t\t\t\tc.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.lineTo(part.vertices[0].x, part.vertices[0].y);\n\t\t\t\t\t\tc.closePath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!options.wireframes) {\n\t\t\t\t\t\tif (options.showSleeping && body.isSleeping) {\n\t\t\t\t\t\t\tc.fillStyle = PhysicsRenderer._colorLuminance(part.render.fillStyle, -0.2)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tc.fillStyle = part.render.fillStyle;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (part.render.lineWidth) {\n\t\t\t\t\t\t\tc.lineWidth = part.render.lineWidth;\n\t\t\t\t\t\t\tc.strokeStyle = part.render.strokeStyle;\n\t\t\t\t\t\t\tc.stroke();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tc.fill();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.lineWidth = 1;\n\t\t\t\t\t\tc.strokeStyle = '#bbb';\n\t\t\t\t\t\tc.stroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tc.globalAlpha = 1;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Optimised method for drawing body wireframes in one pass\n\t * @private\n\t * @method bodyWireframes\n\t * @param {render} render\n\t * @param {body[]} bodies\n\t * @param {RenderingContext} context\n\t */\n\tstatic bodyWireframes(render, bodies, context) {\n\t\tvar c = context,\n\t\t\tshowInternalEdges = render.options.showInternalEdges,\n\t\t\tbody,\n\t\t\tpart,\n\t\t\ti,\n\t\t\tj,\n\t\t\tk;\n\n\t\tc.beginPath();\n\n\t\t// render all bodies\n\t\tfor (i = 0; i < bodies.length; i++) {\n\t\t\tbody = bodies[i];\n\n\t\t\tif (!body.render.visible)\n\t\t\t\tcontinue;\n\n\t\t\t// handle compound parts\n\t\t\tfor (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n\t\t\t\tpart = body.parts[k];\n\n\t\t\t\tc.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n\t\t\t\tfor (j = 1; j < part.vertices.length; j++) {\n\t\t\t\t\tif (!part.vertices[j - 1].isInternal || showInternalEdges) {\n\t\t\t\t\t\tc.lineTo(part.vertices[j].x, part.vertices[j].y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc.moveTo(part.vertices[j].x, part.vertices[j].y);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (part.vertices[j].isInternal && !showInternalEdges) {\n\t\t\t\t\t\tc.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tc.lineTo(part.vertices[0].x, part.vertices[0].y);\n\t\t\t}\n\t\t}\n\n\t\tc.lineWidth = 1;\n\t\tc.strokeStyle = '#bbb';\n\t\tc.stroke();\n\t};\n\n\t/**\n\t * Optimised method for drawing body convex hull wireframes in one pass\n\t * @private\n\t * @method bodyConvexHulls\n\t * @param {render} render\n\t * @param {body[]} bodies\n\t * @param {RenderingContext} context\n\t */\n\tstatic bodyConvexHulls(render, bodies, context) {\n\t\tvar c = context,\n\t\t\tbody,\n\t\t\ti,\n\t\t\tj;\n\n\t\tc.beginPath();\n\n\t\t// render convex hulls\n\t\tfor (i = 0; i < bodies.length; i++) {\n\t\t\tbody = bodies[i];\n\n\t\t\tif (!body.render.visible || body.parts.length === 1)\n\t\t\t\tcontinue;\n\n\t\t\tc.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n\t\t\tfor (j = 1; j < body.vertices.length; j++) {\n\t\t\t\tc.lineTo(body.vertices[j].x, body.vertices[j].y);\n\t\t\t}\n\n\t\t\tc.lineTo(body.vertices[0].x, body.vertices[0].y);\n\t\t}\n\n\t\tc.lineWidth = 1;\n\t\tc.strokeStyle = 'rgba(255,255,255,0.2)';\n\t\tc.stroke();\n\t};\n\n\t/**\n\t * Renders body vertex numbers.\n\t * @private\n\t * @method vertexNumbers\n\t * @param {render} render\n\t * @param {body[]} bodies\n\t * @param {RenderingContext} context\n\t */\n\tstatic vertexNumbers(render, bodies, context) {\n\t\tvar c = context,\n\t\t\ti,\n\t\t\tj,\n\t\t\tk;\n\n\t\tfor (i = 0; i < bodies.length; i++) {\n\t\t\tvar parts = bodies[i].parts;\n\t\t\tfor (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n\t\t\t\tvar part = parts[k];\n\t\t\t\tfor (j = 0; j < part.vertices.length; j++) {\n\t\t\t\t\tc.fillStyle = 'rgba(255,255,255,0.2)';\n\t\t\t\t\tc.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Renders mouse position.\n\t * @private\n\t * @method mousePosition\n\t * @param {render} render\n\t * @param {mouse} mouse\n\t * @param {RenderingContext} context\n\t */\n\tstatic mousePosition(render, mouse, context) {\n\t\tvar c = context;\n\t\tc.fillStyle = 'rgba(255,255,255,0.8)';\n\t\tc.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n\t};\n\n\t/**\n\t * Draws body bounds\n\t * @private\n\t * @method bodyBounds\n\t * @param {render} render\n\t * @param {body[]} bodies\n\t * @param {RenderingContext} context\n\t */\n\tstatic bodyBounds(render, bodies, context) {\n\t\tvar c = context,\n\t\t\toptions = render.options;\n\n\t\tc.beginPath();\n\n\t\tfor (var i = 0; i < bodies.length; i++) {\n\t\t\tvar body = bodies[i];\n\n\t\t\tif (body.render.visible) {\n\t\t\t\tvar parts = bodies[i].parts;\n\t\t\t\tfor (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n\t\t\t\t\tvar part = parts[j];\n\t\t\t\t\tc.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (options.wireframes) {\n\t\t\tc.strokeStyle = 'rgba(255,255,255,0.08)';\n\t\t} else {\n\t\t\tc.strokeStyle = 'rgba(0,0,0,0.1)';\n\t\t}\n\n\t\tc.lineWidth = 1;\n\t\tc.stroke();\n\t};\n\n\t/**\n\t * Draws body angle indicators and axes\n\t * @private\n\t * @method bodyAxes\n\t * @param {render} render\n\t * @param {body[]} bodies\n\t * @param {RenderingContext} context\n\t */\n\tstatic bodyAxes(render, bodies, context) {\n\t\tvar c = context,\n\t\t\toptions = render.options,\n\t\t\tpart,\n\t\t\ti,\n\t\t\tj,\n\t\t\tk;\n\n\t\tc.beginPath();\n\n\t\tfor (i = 0; i < bodies.length; i++) {\n\t\t\tvar body = bodies[i],\n\t\t\t\tparts = body.parts;\n\n\t\t\tif (!body.render.visible)\n\t\t\t\tcontinue;\n\n\t\t\tif (options.showAxes) {\n\t\t\t\t// render all axes\n\t\t\t\tfor (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n\t\t\t\t\tpart = parts[j];\n\t\t\t\t\tfor (k = 0; k < part.axes.length; k++) {\n\t\t\t\t\t\tvar axis = part.axes[k];\n\t\t\t\t\t\tc.moveTo(part.position.x, part.position.y);\n\t\t\t\t\t\tc.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n\t\t\t\t\tpart = parts[j];\n\t\t\t\t\tfor (k = 0; k < part.axes.length; k++) {\n\t\t\t\t\t\t// render a single axis indicator\n\t\t\t\t\t\tc.moveTo(part.position.x, part.position.y);\n\t\t\t\t\t\tc.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n\t\t\t\t\t\t\t\t (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (options.wireframes) {\n\t\t\tc.strokeStyle = 'indianred';\n\t\t\tc.lineWidth = 1;\n\t\t} else {\n\t\t\tc.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n\t\t\tc.globalCompositeOperation = 'overlay';\n\t\t\tc.lineWidth = 2;\n\t\t}\n\n\t\tc.stroke();\n\t\tc.globalCompositeOperation = 'source-over';\n\t};\n\n\t/**\n\t * Draws body positions\n\t * @private\n\t * @method bodyPositions\n\t * @param {render} render\n\t * @param {body[]} bodies\n\t * @param {RenderingContext} context\n\t */\n\tstatic bodyPositions(render, bodies, context) {\n\t\tvar c = context,\n\t\t\toptions = render.options,\n\t\t\tbody,\n\t\t\tpart,\n\t\t\ti,\n\t\t\tk;\n\n\t\tc.beginPath();\n\n\t\t// render current positions\n\t\tfor (i = 0; i < bodies.length; i++) {\n\t\t\tbody = bodies[i];\n\n\t\t\tif (!body.render.visible)\n\t\t\t\tcontinue;\n\n\t\t\t// handle compound parts\n\t\t\tfor (k = 0; k < body.parts.length; k++) {\n\t\t\t\tpart = body.parts[k];\n\t\t\t\tc.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n\t\t\t\tc.closePath();\n\t\t\t}\n\t\t}\n\n\t\tif (options.wireframes) {\n\t\t\tc.fillStyle = 'indianred';\n\t\t} else {\n\t\t\tc.fillStyle = 'rgba(0,0,0,0.5)';\n\t\t}\n\t\tc.fill();\n\n\t\tc.beginPath();\n\n\t\t// render previous positions\n\t\tfor (i = 0; i < bodies.length; i++) {\n\t\t\tbody = bodies[i];\n\t\t\tif (body.render.visible) {\n\t\t\t\tc.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n\t\t\t\tc.closePath();\n\t\t\t}\n\t\t}\n\n\t\tc.fillStyle = 'rgba(255,165,0,0.8)';\n\t\tc.fill();\n\t};\n\n\t/**\n\t * Draws body velocity\n\t * @private\n\t * @method bodyVelocity\n\t * @param {render} render\n\t * @param {body[]} bodies\n\t * @param {RenderingContext} context\n\t */\n\tstatic bodyVelocity(render, bodies, context) {\n\t\tvar c = context;\n\n\t\tc.beginPath();\n\n\t\tfor (var i = 0; i < bodies.length; i++) {\n\t\t\tvar body = bodies[i];\n\n\t\t\tif (!body.render.visible)\n\t\t\t\tcontinue;\n\n\t\t\tc.moveTo(body.position.x, body.position.y);\n\t\t\tc.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n\t\t}\n\n\t\tc.lineWidth = 3;\n\t\tc.strokeStyle = 'cornflowerblue';\n\t\tc.stroke();\n\t};\n\n\t/**\n\t * Draws body ids\n\t * @private\n\t * @method bodyIds\n\t * @param {render} render\n\t * @param {body[]} bodies\n\t * @param {RenderingContext} context\n\t */\n\tstatic bodyIds(render, bodies, context) {\n\t\tvar c = context,\n\t\t\ti,\n\t\t\tj;\n\n\t\tfor (i = 0; i < bodies.length; i++) {\n\t\t\tif (!bodies[i].render.visible)\n\t\t\t\tcontinue;\n\n\t\t\tvar parts = bodies[i].parts;\n\t\t\tfor (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n\t\t\t\tvar part = parts[j];\n\t\t\t\tc.font = \"12px Arial\";\n\t\t\t\tc.fillStyle = 'rgba(255,255,255,0.5)';\n\t\t\t\tc.fillText(part.id, part.position.x + 10, part.position.y - 10);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Description\n\t * @private\n\t * @method collisions\n\t * @param {render} render\n\t * @param {pair[]} pairs\n\t * @param {RenderingContext} context\n\t */\n\tstatic collisions(render, pairs, context) {\n\t\tvar c = context,\n\t\t\toptions = render.options,\n\t\t\tpair,\n\t\t\tcollision,\n\t\t\ti,\n\t\t\tj;\n\n\t\tc.beginPath();\n\n\t\t// render collision positions\n\t\tfor (i = 0; i < pairs.length; i++) {\n\t\t\tpair = pairs[i];\n\n\t\t\tif (!pair.isActive)\n\t\t\t\tcontinue;\n\n\t\t\tcollision = pair.collision;\n\t\t\tfor (j = 0; j < pair.activeContacts.length; j++) {\n\t\t\t\tvar contact = pair.activeContacts[j],\n\t\t\t\t\tvertex = contact.vertex;\n\t\t\t\tc.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n\t\t\t}\n\t\t}\n\n\t\tif (options.wireframes) {\n\t\t\tc.fillStyle = 'rgba(255,255,255,0.7)';\n\t\t} else {\n\t\t\tc.fillStyle = 'orange';\n\t\t}\n\t\tc.fill();\n\n\t\tc.beginPath();\n\n\t\t// render collision normals\n\t\tfor (i = 0; i < pairs.length; i++) {\n\t\t\tpair = pairs[i];\n\n\t\t\tif (!pair.isActive)\n\t\t\t\tcontinue;\n\n\t\t\tcollision = pair.collision;\n\n\t\t\tif (pair.activeContacts.length > 0) {\n\t\t\t\tvar normalPosX = pair.activeContacts[0].vertex.x,\n\t\t\t\t\tnormalPosY = pair.activeContacts[0].vertex.y;\n\n\t\t\t\tif (pair.activeContacts.length === 2) {\n\t\t\t\t\tnormalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n\t\t\t\t\tnormalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n\t\t\t\t}\n\n\t\t\t\tif (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n\t\t\t\t\tc.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n\t\t\t\t} else {\n\t\t\t\t\tc.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n\t\t\t\t}\n\n\t\t\t\tc.lineTo(normalPosX, normalPosY);\n\t\t\t}\n\t\t}\n\n\t\tif (options.wireframes) {\n\t\t\tc.strokeStyle = 'rgba(255,165,0,0.7)';\n\t\t} else {\n\t\t\tc.strokeStyle = 'orange';\n\t\t}\n\n\t\tc.lineWidth = 1;\n\t\tc.stroke();\n\t};\n\n\t/**\n\t * Description\n\t * @private\n\t * @method separations\n\t * @param {render} render\n\t * @param {pair[]} pairs\n\t * @param {RenderingContext} context\n\t */\n\tstatic separations(render, pairs, context) {\n\t\tvar c = context,\n\t\t\toptions = render.options,\n\t\t\tpair,\n\t\t\tcollision,\n\t\t\tbodyA,\n\t\t\tbodyB,\n\t\t\ti;\n\n\t\tc.beginPath();\n\n\t\t// render separations\n\t\tfor (i = 0; i < pairs.length; i++) {\n\t\t\tpair = pairs[i];\n\n\t\t\tif (!pair.isActive)\n\t\t\t\tcontinue;\n\n\t\t\tcollision = pair.collision;\n\t\t\tbodyA = collision.bodyA;\n\t\t\tbodyB = collision.bodyB;\n\n\t\t\tvar k = 1;\n\n\t\t\tif (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n\t\t\tif (bodyB.isStatic) k = 0;\n\n\t\t\tc.moveTo(bodyB.position.x, bodyB.position.y);\n\t\t\tc.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n\t\t\tk = 1;\n\n\t\t\tif (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n\t\t\tif (bodyA.isStatic) k = 0;\n\n\t\t\tc.moveTo(bodyA.position.x, bodyA.position.y);\n\t\t\tc.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n\t\t}\n\n\t\tif (options.wireframes) {\n\t\t\tc.strokeStyle = 'rgba(255,165,0,0.5)';\n\t\t} else {\n\t\t\tc.strokeStyle = 'orange';\n\t\t}\n\t\tc.stroke();\n\t};\n\n\t/**\n\t * Description\n\t * @private\n\t * @method grid\n\t * @param {render} render\n\t * @param {grid} grid\n\t * @param {RenderingContext} context\n\t */\n\tstatic grid(render, grid, context) {\n\t\tvar c = context,\n\t\t\toptions = render.options;\n\n\t\tif (options.wireframes) {\n\t\t\tc.strokeStyle = 'rgba(255,180,0,0.1)';\n\t\t} else {\n\t\t\tc.strokeStyle = 'rgba(255,180,0,0.5)';\n\t\t}\n\n\t\tc.beginPath();\n\n\t\tvar bucketKeys = Common.keys(grid.buckets);\n\n\t\tfor (var i = 0; i < bucketKeys.length; i++) {\n\t\t\tvar bucketId = bucketKeys[i];\n\n\t\t\tif (grid.buckets[bucketId].length < 2)\n\t\t\t\tcontinue;\n\n\t\t\tvar region = bucketId.split(/C|R/);\n\t\t\tc.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n\t\t\t\t\t0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n\t\t\t\t\tgrid.bucketWidth,\n\t\t\t\t\tgrid.bucketHeight);\n\t\t}\n\n\t\tc.lineWidth = 1;\n\t\tc.stroke();\n\t};\n\n\t/**\n\t * Description\n\t * @private\n\t * @method inspector\n\t * @param {inspector} inspector\n\t * @param {RenderingContext} context\n\t */\n\tstatic inspector(inspector, context) {\n\t\tvar selected = inspector.selected,\n\t\t\trender = inspector.render,\n\t\t\toptions = render.options,\n\t\t\tbounds;\n\n\t\tif (options.hasBounds) {\n\t\t\tvar boundsWidth = render.bounds.max.x - render.bounds.min.x,\n\t\t\t\tboundsHeight = render.bounds.max.y - render.bounds.min.y,\n\t\t\t\tboundsScaleX = boundsWidth / render.options.width,\n\t\t\t\tboundsScaleY = boundsHeight / render.options.height;\n\n\t\t\tcontext.scale(1 / boundsScaleX, 1 / boundsScaleY);\n\t\t\tcontext.translate(-render.bounds.min.x, -render.bounds.min.y);\n\t\t}\n\n\t\tfor (var i = 0; i < selected.length; i++) {\n\t\t\tvar item = selected[i].data;\n\n\t\t\tcontext.translate(0.5, 0.5);\n\t\t\tcontext.lineWidth = 1;\n\t\t\tcontext.strokeStyle = 'rgba(255,165,0,0.9)';\n\t\t\tcontext.setLineDash([1,2]);\n\n\t\t\tswitch (item.type) {\n\n\t\t\tcase 'body':\n\n\t\t\t\t// render body selections\n\t\t\t\tbounds = item.bounds;\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n\t\t\t\t\t\t\t Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n\t\t\t\tcontext.closePath();\n\t\t\t\tcontext.stroke();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'constraint':\n\n\t\t\t\t// render constraint selections\n\t\t\t\tvar point = item.pointA;\n\t\t\t\tif (item.bodyA)\n\t\t\t\t\tpoint = item.pointB;\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n\t\t\t\tcontext.closePath();\n\t\t\t\tcontext.stroke();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcontext.setLineDash([]);\n\t\t\tcontext.translate(-0.5, -0.5);\n\t\t}\n\n\t\t// render selection region\n\t\tif (inspector.selectStart !== null) {\n\t\t\tcontext.translate(0.5, 0.5);\n\t\t\tcontext.lineWidth = 1;\n\t\t\tcontext.strokeStyle = 'rgba(255,165,0,0.6)';\n\t\t\tcontext.fillStyle = 'rgba(255,165,0,0.1)';\n\t\t\tbounds = inspector.selectBounds;\n\t\t\tcontext.beginPath();\n\t\t\tcontext.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n\t\t\t\t\t\t Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n\t\t\tcontext.closePath();\n\t\t\tcontext.stroke();\n\t\t\tcontext.fill();\n\t\t\tcontext.translate(-0.5, -0.5);\n\t\t}\n\n\t\tif (options.hasBounds)\n\t\t\tcontext.setTransform(1, 0, 0, 1, 0, 0);\n\t};\n\n\t/**\n\t * Description\n\t * @method _createCanvas\n\t * @private\n\t * @param {} width\n\t * @param {} height\n\t * @return canvas\n\t */\n\tstatic _createCanvas(width, height) {\n\t\tvar canvas = document.createElement('canvas');\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\tcanvas.oncontextmenu = function() { return false; };\n\t\tcanvas.onselectstart = function() { return false; };\n\t\treturn canvas;\n\t};\n\n\t/**\n\t * Gets the pixel ratio of the canvas.\n\t * @method _getPixelRatio\n\t * @private\n\t * @param {HTMLElement} canvas\n\t * @return {Number} pixel ratio\n\t */\n\tstatic _getPixelRatio(canvas) {\n\t\tvar context = canvas.getContext('2d'),\n\t\t\tdevicePixelRatio = window.devicePixelRatio || 1,\n\t\t\tbackingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n\t\t\t\t\t\t\t\t\t  || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n\t\t\t\t\t\t\t\t\t  || context.backingStorePixelRatio || 1;\n\n\t\treturn devicePixelRatio / backingStorePixelRatio;\n\t};\n\n\t/**\n\t * Gets the requested texture (an Image) via its path\n\t * @method _getTexture\n\t * @private\n\t * @param {render} render\n\t * @param {string} imagePath\n\t * @return {Image} texture\n\t */\n\tstatic _getTexture(render, imagePath) {\n\t\tvar image = render.textures[imagePath];\n\n\t\tif (image)\n\t\t\treturn image;\n\n\t\timage = render.textures[imagePath] = new Image();\n\t\timage.src = imagePath;\n\n\t\treturn image;\n\t};\n\n\t/**\n\t * Applies the background to the canvas using CSS.\n\t * @method applyBackground\n\t * @private\n\t * @param {render} render\n\t * @param {string} background\n\t */\n\tstatic _applyBackground(render, background) {\n\t\tvar cssBackground = background;\n\n\t\tif (/(jpg|gif|png)$/.test(background))\n\t\t\tcssBackground = 'url(' + background + ')';\n\n\t\trender.canvas.style.background = cssBackground;\n\t\trender.canvas.style.backgroundSize = \"contain\";\n\t\trender.currentBackground = background;\n\t};\n\n\t/**\n\t * Performs modulo operation, handling negative numbers.\n\t * @method mod\n\t * @private\n\t * @param {} x\n\t * @param {} n\n\t */\n\tstatic _mod(x, n) { return (x % n + n) % n };\n\n\t/**\n\t * Compares two floating-point numbers for near-equality using an epsilon value.\n\t * @method almostEqual\n\t * @private\n\t * @param {} a\n\t * @param {} b\n\t */\n\tstatic _almostEqual(a, b) { return Math.abs(a - b) < 0.00001 };\n\n\t/**\n\t * Aligns a draw coordinate.\n\t * @method roundDrawCoord\n\t * @private\n\t * @param {} x\n\t */\n\tstatic _roundDrawCoord(x) { return Math.round(x) + 0.5 };\n\n\t/**\n\t * Adjusts a hex string color value's luminosity.\n\t * Borrowed from https://www.sitepoint.com/javascript-generate-lighter-darker-color/\n\t*/\n\tstatic _colorLuminance(hex, lum) {\n\t\t// validate hex string\n\t\thex = String(hex).replace(/[^0-9a-f]/gi, '');\n\t\tif (hex.length < 6) {\n\t\t\thex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n\t\t}\n\t\tlum = lum || 0;\n\n\t\t// convert to decimal and change luminosity\n\t\tvar rgb = \"#\", c, i;\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tc = parseInt(hex.substr(i*2,2), 16);\n\t\t\tc = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\n\t\t\trgb += (\"00\"+c).substr(c.length);\n\t\t}\n\n\t\treturn rgb;\n\t}\n\n\t/*\n\t*\n\t*  Events Documentation\n\t*\n\t*/\n\n\t/**\n\t* Fired before rendering\n\t*\n\t* @event beforeRender\n\t* @param {} event An event object\n\t* @param {number} event.timestamp The engine.timing.timestamp of the event\n\t* @param {} event.source The source object of the event\n\t* @param {} event.name The name of the event\n\t*/\n\n\t/**\n\t* Fired after rendering\n\t*\n\t* @event afterRender\n\t* @param {} event An event object\n\t* @param {number} event.timestamp The engine.timing.timestamp of the event\n\t* @param {} event.source The source object of the event\n\t* @param {} event.name The name of the event\n\t*/\n\n\t/*\n\t*\n\t*  Properties Documentation\n\t*\n\t*/\n\n\t/**\n\t * A back-reference to the `Matter.Render` module.\n\t *\n\t * @property controller\n\t * @type render\n\t */\n\n\t/**\n\t * A reference to the `Matter.Engine` instance to be used.\n\t *\n\t * @property engine\n\t * @type engine\n\t */\n\n\t/**\n\t * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n\t *\n\t * @property element\n\t * @type HTMLElement\n\t * @default null\n\t */\n\n\t/**\n\t * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n\t *\n\t * @property canvas\n\t * @type HTMLCanvasElement\n\t * @default null\n\t */\n\n\t/**\n\t * The configuration options of the renderer.\n\t *\n\t * @property options\n\t * @type {}\n\t */\n\n\t/**\n\t * The target width in pixels of the `render.canvas` to be created.\n\t *\n\t * @property options.width\n\t * @type number\n\t * @default 800\n\t */\n\n\t/**\n\t * The target height in pixels of the `render.canvas` to be created.\n\t *\n\t * @property options.height\n\t * @type number\n\t * @default 600\n\t */\n\n\t/**\n\t * A flag that specifies if `render.bounds` should be used when rendering.\n\t *\n\t * @property options.hasBounds\n\t * @type boolean\n\t * @default false\n\t */\n\n\t/**\n\t * A `Bounds` object that specifies the drawing view region.\n\t * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n\t * This allows for creating views that can pan or zoom around the scene.\n\t * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n\t *\n\t * @property bounds\n\t * @type bounds\n\t */\n\n\t/**\n\t * The 2d rendering context from the `render.canvas` element.\n\t *\n\t * @property context\n\t * @type CanvasRenderingContext2D\n\t */\n\n\t/**\n\t * The sprite texture cache.\n\t *\n\t * @property textures\n\t * @type {}\n\t */\n}","///<reference path=\"../types/types.d.ts\" />\n\nimport * as React from 'react'\nimport Matter from 'matter-js'\nimport {\n\tcircleOverlapBounds,\n\tcreateBounds,\n\tpointInBounds,\n\tresizeBounds2WaySplit,\n\tresizeBounds4WaySplit\n} from '../Utility'\nimport { random } from 'lodash'\nimport styled from 'styled-components'\n\n// Custom renderer\nimport { PhysicsRenderer } from '../PhysicsRenderer'\n\ninterface PhysicsCanvasProps {\n\tcursor: string\n}\n\nconst PhysicsCanvas = styled.canvas<PhysicsCanvasProps>`\n\tcursor: ${props => props.cursor};\n`\n\nconst MOUSE_BOUNDS_THRESHOLD = 10\n\nexport enum MouseMode {\n\tOBJECT,\n\tBOUNDARY_EDIT,\n\tSNOOKER\n}\n\nenum ResizeMode {\n\tNONE,\n\tLEFT_EDGE,\n\tRIGHT_EDGE,\n\tTOP_EDGE,\n\tBOTTOM_EDGE,\n\tTOP_LEFT_CORNER,\n\tTOP_RIGHT_CORNER,\n\tBOTTOM_RIGHT_CORNER,\n\tBOTTOM_LEFT_CORNER,\n\tHORIZONTAL_SPLIT,\n\tVERTICAL_SPLIT,\n\tCROSS_SPLIT\n}\n\ninterface PhysicsSimProps {\n\tboundaries: Array<Boundary>,\n\tmouseMode: MouseMode,\n\tsnapToGrid: boolean,\n\tgridSize: number,\n\n\tonEngineBeforeUpdate?: (event: Matter.IEventTimestamped<Matter.Engine>) => void,\n\tonEngineAfterUpdate?: (event: Matter.IEventTimestamped<Matter.Engine>) => void,\n\n\tonObjectAdded?: ObjectAddedCallback,\n\tonObjectDeleted?: ObjectDeletedCallback,\n\n\tonBoundaryAdded?: BoundaryAddedCallback,\n\tonBoundariesUpdated?: BoundariesUpdatedCallback,\n\tonBoundaryDeleted?: BoundaryDeletedCallback\n}\n\ninterface PhysicsSimState {\n\tcanvasRef: React.RefObject<HTMLCanvasElement>,\n\tshowCrosshair: boolean,\n\tdraggingBody: boolean,\n\tmouseButton?: number,\n\tmouseDownPos?: Vector2D,\n\tmouseDownPosCanvas?: Vector2D,\n\tdragStartPos?: Vector2D,\n\tdragLastPos?: Vector2D,\n\tsnookerBody?: Matter.Body,\n\tclickedBoundary?: Boundary,\n\tclickedOldBounds?: Bounds,\n\tresizeBoundaries?: Array<Boundary>,\n\tresizeMode: ResizeMode,\n}\n\nexport default class PhysicsSim extends React.PureComponent<PhysicsSimProps, PhysicsSimState> {\n\tmatterEngine?: Matter.Engine\n\tmatterMouse?: Matter.Mouse\n\tmatterMouseConstraint?: Matter.MouseConstraint\n\tmatterRender?: PhysicsRenderer\n\tmatterRunner?: Matter.Runner\n\tmatterWorld?: Matter.World\n\n\tconstructor(props: PhysicsSimProps) {\n\t\tsuper(props)\n\n\t\tconst canvasRef: React.RefObject<HTMLCanvasElement> = React.createRef()\n\n\t\tthis.state = {\n\t\t\tcanvasRef: canvasRef,\n\t\t\tshowCrosshair: false,\n\t\t\tdraggingBody: false,\n\t\t\tmouseButton: undefined,\n\t\t\tmouseDownPos: undefined,\n\t\t\tmouseDownPosCanvas: undefined,\n\t\t\tdragStartPos: undefined,\n\t\t\tdragLastPos: undefined,\n\t\t\tsnookerBody: undefined,\n\t\t\tclickedBoundary: undefined,\n\t\t\tclickedOldBounds: undefined,\n\t\t\tresizeBoundaries: undefined,\n\t\t\tresizeMode: ResizeMode.NONE,\n\t\t}\n\t}\n\n\tcomponentDidMount = () => {\n\t\t// Get canvas context and set it up\n\t\tconst canvas = this.state.canvasRef.current\n\t\tif (!canvas) {\n\t\t\tconsole.log(\"Canvas ref is null\")\n\t\t\treturn\n\t\t}\n\n\t\tconst ctx = canvas.getContext(\"2d\")\n\t\tif (!ctx) {\n\t\t\tconsole.log(\"Couldn't get a 2D canvas context\")\n\t\t\treturn\n\t\t}\n\n\t\tctx.font = \"12px Arial\"\n\n\t\t// Fit canvas to container\n\t\tcanvas.style.width = \"100%\"\n\t\tcanvas.style.height = \"100%\"\n\n\t\t// Set up canvas dimensions\n\t\tthis.updateCanvasDimensions()\n\n\t\t// Prevent menus on canvas\n\t\tcanvas.oncontextmenu = () => false\n\t\tcanvas.onselectstart = () => false\n\n\t\t// Create a physics world\n\t\tthis.matterWorld = Matter.World.create({\n\t\t\t// Top-down, so no gravity\n\t\t\tgravity: {\n\t\t\t\tscale: 1,\n\t\t\t\tx: 0,\n\t\t\t\ty: 0\n\t\t\t}\n\t\t})\n\n\t\t// Create a physics engine\n\t\tthis.matterEngine = Matter.Engine.create({\n\t\t\tenableSleeping: true,\n\t\t\tworld: this.matterWorld\n\t\t})\n\n\t\t// Add mouse control\n\t\tthis.matterMouse = Matter.Mouse.create(canvas)\n\t\tthis.matterMouseConstraint = Matter.MouseConstraint.create(this.matterEngine, {\n\t\t\tmouse: this.matterMouse,\n\t\t\tconstraint: {\n\t\t\t\tstiffness: 0.2,\n\t\t\t\trender: {\n\t\t\t\t\tlineWidth: 0,\n\t\t\t\t\tstrokeStyle: 'black',\n\t\t\t\t\tvisible: false\n\t\t\t\t}\n\t\t\t} as Matter.Constraint\n\t\t})\n\n\t\t// Create a renderer\n\t\tthis.matterRender = PhysicsRenderer.create({\n\t\t\t// Bounds begin centered about the origin\n\t\t\tbounds: {\n\t\t\t\tmin: {\n\t\t\t\t\tx: -canvas.width / 2,\n\t\t\t\t\ty: -canvas.height / 2\n\t\t\t\t},\n\t\t\t\tmax: {\n\t\t\t\t\tx: canvas.width / 2,\n\t\t\t\t\ty: canvas.height / 2\n\t\t\t\t}\n\t\t\t},\n\t\t\tcanvas: canvas,\n\t\t\tengine: this.matterEngine,\n\t\t\tmouse: this.matterMouse,\n\t\t\toptions: {\n\t\t\t\twidth: canvas.width,\n\t\t\t\theight: canvas.height,\n\t\t\t\tbackground: 'rgb(0, 0, 0, 0)',\n\t\t\t\twireframes: false,\n\t\t\t}\n\t\t})\n\n\t\tMatter.World.add(this.matterWorld, this.matterMouseConstraint)\n\n\t\t// Temp\n\t\tfor (let x = 0; x < 9; ++x) {\n\t\t\tfor (let y = 0; y < 9; ++y) {\n\t\t\t\tconst body = Matter.Bodies.circle(x * 50 - 200, y * 50 - 200, 20, { restitution: 0.5 })\n\t\t\t\tMatter.World.add(this.matterWorld, body)\n\t\t\t}\n\t\t}\n\n\t\tconst body = Matter.Bodies.circle(0, 300, 50, { restitution: 0.5 })\n\t\tMatter.World.add(this.matterWorld, body)\n\n\t\t// Create runner\n\t\tthis.matterRunner = Matter.Runner.create({ isFixed: false })\n\n\t\t// Mouse handlers\n\t\tMatter.Events.on(this.matterMouseConstraint, 'startdrag', this.onBodyDragStart)\n\t\tMatter.Events.on(this.matterMouseConstraint, 'enddrag', this.onBodyDragEnd)\n\n\t\t// Engine/runner hooks\n\t\tMatter.Events.on(this.matterEngine, 'beforeUpdate', this.onBeforeUpdate)\n\t\tif (this.props.onEngineBeforeUpdate)\n\t\t\tMatter.Events.on(this.matterEngine, 'beforeUpdate', this.props.onEngineBeforeUpdate)\n\t\tif (this.props.onEngineAfterUpdate)\n\t\t\tMatter.Events.on(this.matterEngine, 'afterUpdate', this.props.onEngineAfterUpdate)\n\n\t\t// Renderer hooks\n\t\tMatter.Events.on(this.matterRender, 'beforeRender', this.onBeforeRender)\n\t\tMatter.Events.on(this.matterRender, 'beforeObjects', this.onBeforeObjects)\n\n\t\t// Run the engine\n\t\tMatter.Runner.run(this.matterRunner, this.matterEngine)\n\n\t\t// Run the renderer\n\t\tPhysicsRenderer.run(this.matterRender)\n\n\t\t// Listen for resize events so we can adjust the canvas\n\t\twindow.addEventListener('resize', () => {\n\t\t\tthis.updateCanvasDimensions()\n\t\t})\n\t}\n\n\tonBeforeUpdate = (event: Matter.IEventTimestamped<Matter.Engine>) => {\n\t\tif (!this.matterMouseConstraint)\n\t\t\treturn\n\n\t\t// Should we disable the mouse constraint (grab objects?)\n\t\tif (this.props.mouseMode !== MouseMode.OBJECT)\n\t\t\tthis.matterMouseConstraint.collisionFilter.mask = 0\n\t\telse\n\t\t\tthis.matterMouseConstraint.collisionFilter.mask = 0xFFFFFFFF\n\t}\n\n\tonBeforeRender = (event: Matter.IEventTimestamped<Matter.Render>) => {\n\t\tif (!this.matterRender)\n\t\t\treturn\n\n\t\t// Update some rendering options\n\t\tthis.matterRender.options.gridSize = this.props.gridSize\n\t\tthis.matterRender.options.showCrosshair = this.state.showCrosshair\n\t\tthis.matterRender.options.crosshairSnap = this.props.snapToGrid\n\t}\n\n\tonBeforeObjects = (event: Matter.IEventTimestamped<Matter.Render>) => {\n\t\tconst context = event.source.context\n\t\tconst mousePos = this.getMousePos(true)\n\t\tconst mousePosUnsnapped = this.getMousePos(true, true)\n\n\t\t// Draw boundaries\n\t\tcontext.setLineDash([])\n\t\tcontext.lineWidth = 1\n\n\t\tthis.props.boundaries.forEach(boundary => {\n\t\t\tconst topLeft = this.worldToCanvas(boundary.bounds.min)\n\t\t\tconst bottomRight = this.worldToCanvas(boundary.bounds.max)\n\t\t\tconst extents = Matter.Vector.sub(bottomRight, topLeft)\n\n\t\t\tconst mouseInBounds = pointInBounds(mousePosUnsnapped, { min: topLeft, max: bottomRight }, false)\n\t\t\tconst isClickedBoundary = this.state.clickedBoundary && this.state.clickedBoundary === boundary\n\n\t\t\tcontext.fillStyle = boundary.color\n\t\t\tcontext.strokeStyle = 'black'\n\n\t\t\tif (this.props.mouseMode === MouseMode.BOUNDARY_EDIT && this.state.resizeMode === ResizeMode.NONE && (isClickedBoundary || mouseInBounds))\n\t\t\t\tcontext.globalAlpha = 0.6\n\t\t\telse\n\t\t\t\tcontext.globalAlpha = 0.4\n\n\t\t\tcontext.beginPath()\n\t\t\tcontext.fillRect(topLeft.x, topLeft.y, extents.x, extents.y)\n\t\t\tcontext.globalAlpha = 1.0\n\t\t\tcontext.rect(topLeft.x, topLeft.y, extents.x, extents.y)\n\t\t\tcontext.stroke()\n\t\t})\n\n\t\tswitch (this.props.mouseMode) {\n\t\t\tcase MouseMode.BOUNDARY_EDIT: {\n\t\t\t\tif (!this.state.mouseDownPos || this.state.clickedBoundary || this.state.resizeBoundaries)\n\t\t\t\t\tbreak\n\n\t\t\t\t// Draw outline of new boundary\n\t\t\t\tconst topLeft = this.worldToCanvas(this.state.mouseDownPos)\n\t\t\t\tconst width = mousePos.x - topLeft.x\n\t\t\t\tconst height = mousePos.y - topLeft.y\n\n\t\t\t\tcontext.strokeStyle = 'blue'\n\t\t\t\tcontext.fillStyle = 'rgb(128, 128, 255, 0.2)'\n\t\t\t\tcontext.beginPath()\n\t\t\t\tcontext.fillRect(topLeft.x, topLeft.y, width, height)\n\t\t\t\tcontext.rect(topLeft.x, topLeft.y, width, height)\n\t\t\t\tcontext.stroke()\n\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tcase MouseMode.SNOOKER: {\n\t\t\t\tif (!this.state.snookerBody)\n\t\t\t\t\tbreak\n\n\t\t\t\t// Draw snooker \"cue\"\n\t\t\t\tconst bodyPos = this.worldToCanvas(this.state.snookerBody.position)\n\n\t\t\t\tcontext.strokeStyle = 'red'\n\t\t\t\tcontext.beginPath()\n\t\t\t\tcontext.moveTo(bodyPos.x, bodyPos.y)\n\t\t\t\tcontext.lineTo(mousePos.x, mousePos.y)\n\t\t\t\tcontext.stroke()\n\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tdefault: break\n\t\t}\n\t}\n\n\tonBodyDragStart = () => {\n\t\tthis.setState({ draggingBody: true })\n\t}\n\n\tonBodyDragEnd = () => {\n\t\tthis.setState({ draggingBody: false })\n\t}\n\n\tcheckResizeMode = (bUnder?: Boundary, bNear?: Array<Boundary>) => {\n\t\tlet resizeMode = ResizeMode.NONE\n\n\t\t// Mouse near a boundary edge\n\t\tif (bNear && bNear.length > 1)\n\t\t{\n\t\t\t// Mouse near a 4-way intersection\n\t\t\tif (bNear.length === 4) {\n\t\t\t\tresizeMode = ResizeMode.CROSS_SPLIT\n\t\t\t}\n\t\t\t// Mouse near 2-way intersection\n\t\t\telse if (bNear.length === 2) {\n\t\t\t\tconst b1 = bNear[0].bounds\n\t\t\t\tconst b2 = bNear[1].bounds\n\t\t\t\tif (b1.max.y <= b2.min.y || b2.max.y <= b1.min.y)\n\t\t\t\t\tresizeMode = ResizeMode.HORIZONTAL_SPLIT\n\t\t\t\telse\n\t\t\t\t\tresizeMode = ResizeMode.VERTICAL_SPLIT\n\t\t\t}\n\t\t}\n\t\telse if (bUnder) {\n\t\t\tconst mousePosCanvas = this.getMousePos(true, true)\n\t\t\tconst boundsCanvas = {\n\t\t\t\tmin: this.worldToCanvas(bUnder.bounds.min),\n\t\t\t\tmax: this.worldToCanvas(bUnder.bounds.max)\n\t\t\t}\n\n\t\t\tconst leftDist \t= Math.abs(boundsCanvas.min.x - mousePosCanvas.x)\n\t\t\tconst rightDist = Math.abs(boundsCanvas.max.x - mousePosCanvas.x)\n\t\t\tconst topDist = Math.abs(boundsCanvas.min.y - mousePosCanvas.y)\n\t\t\tconst bottomDist = Math.abs(boundsCanvas.max.y - mousePosCanvas.y)\n\n\t\t\t// Check corners\n\t\t\tif (leftDist <= MOUSE_BOUNDS_THRESHOLD && topDist <= MOUSE_BOUNDS_THRESHOLD)\n\t\t\t\tresizeMode = ResizeMode.TOP_LEFT_CORNER\n\t\t\telse if (rightDist <= MOUSE_BOUNDS_THRESHOLD && topDist <= MOUSE_BOUNDS_THRESHOLD)\n\t\t\t\tresizeMode = ResizeMode.TOP_RIGHT_CORNER\n\t\t\telse if (rightDist <= MOUSE_BOUNDS_THRESHOLD && bottomDist <= MOUSE_BOUNDS_THRESHOLD)\n\t\t\t\tresizeMode = ResizeMode.BOTTOM_RIGHT_CORNER\n\t\t\telse if (leftDist <= MOUSE_BOUNDS_THRESHOLD && bottomDist <= MOUSE_BOUNDS_THRESHOLD)\n\t\t\t\tresizeMode = ResizeMode.BOTTOM_LEFT_CORNER\n\n\t\t\t// Check edges\n\t\t\telse if (leftDist <= MOUSE_BOUNDS_THRESHOLD)\n\t\t\t\tresizeMode = ResizeMode.LEFT_EDGE\n\t\t\telse if (rightDist <= MOUSE_BOUNDS_THRESHOLD)\n\t\t\t\tresizeMode = ResizeMode.RIGHT_EDGE\n\t\t\telse if (topDist <= MOUSE_BOUNDS_THRESHOLD)\n\t\t\t\tresizeMode = ResizeMode.TOP_EDGE\n\t\t\telse if (bottomDist <= MOUSE_BOUNDS_THRESHOLD)\n\t\t\t\tresizeMode = ResizeMode.BOTTOM_EDGE\n\n\t\t}\n\n\t\treturn resizeMode\n\t}\n\n\tonMouseDown = (event: React.MouseEvent<HTMLCanvasElement>) => {\n\t\tconst mousePos = this.getMousePos()\n\t\tconst mousePosCanvas = this.getMousePos(true)\n\n\t\tthis.setState({\n\t\t\tmouseButton: event.button,\n\t\t\tmouseDownPos: mousePos,\n\t\t\tmouseDownPosCanvas: mousePosCanvas\n\t\t})\n\n\t\tswitch (this.props.mouseMode) {\n\t\t\tcase MouseMode.SNOOKER: {\n\t\t\t\t// Did we left-click on an object?\n\t\t\t\tif (event.button === 0) {\n\t\t\t\t\tthis.setState({snookerBody: this.bodyAtPosition(mousePos)})\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tcase MouseMode.BOUNDARY_EDIT: {\n\t\t\t\tconst bUnder = this.boundaryUnderMouse()\n\t\t\t\tconst bNear = this.boundariesNearMouse()\n\n\t\t\t\tif (!bUnder && !bNear.length)\n\t\t\t\t\tbreak\n\n\t\t\t\t// Left-click: check & prepare for resize\n\t\t\t\tlet resizeMode = ResizeMode.NONE\n\t\t\t\tif (event.button === 0) {\n\t\t\t\t\tresizeMode = this.checkResizeMode(bUnder, bNear)\n\t\t\t\t}\n\n\t\t\t\t// Mouse button went down near 2 or 4 adjacent boundaries\n\t\t\t\tif (bNear.length > 1) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tresizeBoundaries: bNear,\n\t\t\t\t\t\tresizeMode: resizeMode\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t// Mouse button went down over a single boundary\n\t\t\t\telse if (bUnder) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tclickedBoundary: bUnder,\n\t\t\t\t\t\tclickedOldBounds: {\n\t\t\t\t\t\t\tmin: Object.assign({}, bUnder.bounds.min),\n\t\t\t\t\t\t\tmax: Object.assign({}, bUnder.bounds.max)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresizeMode: resizeMode\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tdefault: break\n\t\t}\n\t}\n\n\tonMouseUp = (event: React.MouseEvent<HTMLCanvasElement>) => {\n\t\tif (!this.matterWorld)\n\t\t\treturn\n\n\t\tconst mousePos = this.getMousePos()\n\t\tconst mousePosCanvas = this.getMousePos(true)\n\t\tconst click = \tthis.state.mouseButton === event.button &&\n\t\t\t\t\t\tthis.state.mouseDownPosCanvas &&\n\t\t\t\t\t\t(this.state.mouseDownPosCanvas.x === mousePosCanvas.x &&\n\t\t\t\t\t\tthis.state.mouseDownPosCanvas.y === mousePosCanvas.y)\n\n\t\tswitch (this.props.mouseMode) {\n\t\t\tcase MouseMode.OBJECT: {\n\t\t\t\t// Dragging an object, bail out\n\t\t\t\tif (this.state.draggingBody)\n\t\t\t\t\tbreak\n\n\t\t\t\t// Left-click: add new object\n\t\t\t\tif (event.button === 0) {\n\t\t\t\t\tconst body = Matter.Bodies.circle(mousePos.x, mousePos.y, 20, { restitution: 0.5 })\n\n\t\t\t\t\tMatter.World.add(this.matterWorld, body)\n\t\t\t\t\tif (this.props.onObjectAdded)\n\t\t\t\t\tthis.props.onObjectAdded(body)\n\t\t\t\t}\n\n\t\t\t\t// Right-click: delete object\n\t\t\t\telse if (event.button === 2) {\n\t\t\t\t\tconst body = this.bodyAtPosition(mousePos)\n\t\t\t\t\tif (body) {\n\t\t\t\t\t\tif (this.props.onObjectDeleted)\n\t\t\t\t\t\tthis.props.onObjectDeleted(body.id)\n\t\t\t\t\t\tMatter.Composite.remove(this.matterWorld, body)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tcase MouseMode.SNOOKER: {\n\t\t\t\tif (!this.state.snookerBody || event.button !== 0)\n\t\t\t\t\tbreak\n\n\t\t\t\tconst body = this.state.snookerBody\n\t\t\t\tconst force = Matter.Vector.mult(Matter.Vector.sub(body.position, mousePos), 0.001 * body.mass)\n\n\t\t\t\tMatter.Body.applyForce(body, body.position, force)\n\t\t\t\tthis.setState({ snookerBody: undefined })\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tcase MouseMode.BOUNDARY_EDIT: {\n\t\t\t\t// Did we just finish resizing? Clear state and bail out\n\t\t\t\tif (this.state.resizeMode !== ResizeMode.NONE) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tresizeMode: ResizeMode.NONE,\n\t\t\t\t\t\tresizeBoundaries: undefined\n\t\t\t\t\t})\n\t\t\t\t\tbreak\n\t\t\t\t}\n\n\t\t\t\t// Did we right-click on an existing boundary? Delete it and bail out\n\t\t\t\tif (this.props.onBoundaryDeleted && event.button === 2 && click && this.state.clickedBoundary) {\n\t\t\t\t\tthis.props.onBoundaryDeleted(this.state.clickedBoundary)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, add a new boundary\n\t\t\t\tif (this.props.onBoundaryAdded && event.button === 0 && this.state.mouseDownPos)\n\t\t\t\t\tthis.props.onBoundaryAdded(createBounds(this.state.mouseDownPos, mousePos))\n\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tdefault: break\n\t\t}\n\n\t\tthis.setState({\n\t\t\tmouseButton: undefined,\n\t\t\tmouseDownPos: undefined,\n\t\t\tmouseDownPosCanvas: undefined,\n\t\t\tclickedBoundary: undefined,\n\t\t\tclickedOldBounds: undefined\n\t\t})\n\t}\n\n\tresizingMultiple = (b: Bounds | Array<Bounds>): b is Array<Bounds> => {\n\t\treturn (b as Array<Bounds>).length !== undefined\n\t}\n\n\tonMouseMove = (event: React.MouseEvent<HTMLCanvasElement>) => {\n\t\tif (!this.matterRender || !this.matterMouseConstraint)\n\t\t\treturn\n\n\t\tconst mousePos = this.getMousePos()\n\n\t\t// Right mouse button drag always pans\n\t\tif (this.state.mouseButton === 2) {\n\t\t\tif (!this.state.mouseDownPos || this.state.draggingBody)\n\t\t\t\treturn\n\n\t\t\tconst bounds = this.matterRender.bounds\n\t\t\tconst delta = {\n\t\t\t\tx: mousePos.x - this.state.mouseDownPos.x,\n\t\t\t\ty: mousePos.y - this.state.mouseDownPos.y\n\t\t\t}\n\n\t\t\t// Reposition viewport\n\t\t\tbounds.min = Matter.Vector.sub(bounds.min, delta)\n\t\t\tbounds.max = Matter.Vector.sub(bounds.max, delta)\n\n\t\t\t// Update mouse offset\n\t\t\tMatter.Mouse.setOffset(this.matterMouseConstraint.mouse, bounds.min)\n\t\t\treturn\n\t\t}\n\n\t\t// Left mouse buttton drag actions\n\t\tswitch (this.props.mouseMode) {\n\t\t\tcase MouseMode.BOUNDARY_EDIT: {\n\t\t\t\t// Bail out if we don't have a callback\n\t\t\t\tif (!this.props.onBoundariesUpdated)\n\t\t\t\t\tbreak\n\n\t\t\t\t// Resizing multiple boundaries\n\t\t\t\tif (this.state.resizeBoundaries) {\n\t\t\t\t\tswitch (this.state.resizeMode) {\n\t\t\t\t\t\tcase ResizeMode.CROSS_SPLIT: {\n\t\t\t\t\t\t\tconst resizeInfo = resizeBounds4WaySplit(\n\t\t\t\t\t\t\t\tthis.state.resizeBoundaries,\n\t\t\t\t\t\t\t\tmousePos,\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\tthis.props.onBoundariesUpdated(resizeInfo)\n\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase ResizeMode.HORIZONTAL_SPLIT:\n\t\t\t\t\t\tcase ResizeMode.VERTICAL_SPLIT:\n\t\t\t\t\t\t\tconst resizeInfo = resizeBounds2WaySplit(\n\t\t\t\t\t\t\t\tthis.state.resizeBoundaries,\n\t\t\t\t\t\t\t\tmousePos,\n\t\t\t\t\t\t\t\tthis.state.resizeMode === ResizeMode.VERTICAL_SPLIT\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Update boundaries\n\t\t\t\t\t\t\tthis.props.onBoundariesUpdated(resizeInfo)\n\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Resizing a single boundary\n\t\t\t\telse if (this.state.clickedBoundary && this.state.clickedOldBounds) {\n\t\t\t\t\tlet newBounds = {\n\t\t\t\t\t\tmin: Object.assign({}, this.state.clickedOldBounds.min),\n\t\t\t\t\t\tmax: Object.assign({}, this.state.clickedOldBounds.max)\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (this.state.resizeMode) {\n\t\t\t\t\t\tcase ResizeMode.TOP_LEFT_CORNER:\n\t\t\t\t\t\t\tnewBounds.min.x = mousePos.x\n\t\t\t\t\t\t\tnewBounds.min.y = mousePos.y\n\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\tcase ResizeMode.TOP_RIGHT_CORNER:\n\t\t\t\t\t\t\tnewBounds.max.x = mousePos.x\n\t\t\t\t\t\t\tnewBounds.min.y = mousePos.y\n\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\tcase ResizeMode.BOTTOM_LEFT_CORNER:\n\t\t\t\t\t\t\tnewBounds.min.x = mousePos.x\n\t\t\t\t\t\t\tnewBounds.max.y = mousePos.y\n\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\tcase ResizeMode.BOTTOM_RIGHT_CORNER:\n\t\t\t\t\t\t\tnewBounds.max.x = mousePos.x\n\t\t\t\t\t\t\tnewBounds.max.y = mousePos.y\n\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\tcase ResizeMode.LEFT_EDGE:\n\t\t\t\t\t\t\tnewBounds.min.x = mousePos.x\n\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\tcase ResizeMode.RIGHT_EDGE:\n\t\t\t\t\t\t\tnewBounds.max.x = mousePos.x\n\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\tcase ResizeMode.TOP_EDGE:\n\t\t\t\t\t\t\tnewBounds.min.y = mousePos.y\n\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\tcase ResizeMode.BOTTOM_EDGE:\n\t\t\t\t\t\t\tnewBounds.max.y = mousePos.y\n\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// Moving\n\t\t\t\t\t\t\tif (!this.state.mouseDownPos)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tconst mouseDelta = Matter.Vector.sub(mousePos, this.state.mouseDownPos)\n\t\t\t\t\t\t\tnewBounds.min = Matter.Vector.add(newBounds.min, mouseDelta)\n\t\t\t\t\t\t\tnewBounds.max = Matter.Vector.add(newBounds.max, mouseDelta)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fixup so that min is always at the top left and max is always at the bottom right\n\t\t\t\t\tnewBounds = createBounds(newBounds.min, newBounds.max)\n\n\t\t\t\t\t// Update boundary\n\t\t\t\t\tthis.props.onBoundariesUpdated([\n\t\t\t\t\t\t{ boundary: this.state.clickedBoundary, newBounds: newBounds }\n\t\t\t\t\t])\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tonMouseOver = (event: React.MouseEvent<HTMLCanvasElement>) => {\n\t\t// Show crosshair and coords\n\t\tthis.setState({ showCrosshair: true })\n\t}\n\n\tonMouseOut = (event: React.MouseEvent<HTMLCanvasElement>) => {\n\t\tthis.setState({\n\t\t\t// Hide crosshair and coords\n\t\t\tshowCrosshair: false,\n\n\t\t\t// Clear drawing/resizing state\n\t\t\tmouseDownPos: undefined,\n\t\t\tclickedBoundary: undefined\n\t\t})\n\t}\n\n\tonWheel = (event: React.WheelEvent<HTMLCanvasElement>) => {\n\t\tif (!this.matterMouse || !this.matterRender)\n\t\t\treturn\n\n\t\tconst mouse = this.matterMouse\n\t\tconst zoomFactor = event.deltaY < 0 ? 0.9 : 1 / 0.9\n\t\tconst bounds = this.matterRender.bounds\n\n\t\t// Reposition viewport (i.e. min = zoomFactor * (min - mousePos) + mousePos)\n\t\tbounds.min = Matter.Vector.add(Matter.Vector.mult(Matter.Vector.sub(bounds.min, mouse.position), zoomFactor), mouse.position)\n\t\tbounds.max = Matter.Vector.add(Matter.Vector.mult(Matter.Vector.sub(bounds.max, mouse.position), zoomFactor), mouse.position)\n\t}\n\n\tupdateCanvasDimensions = () => {\n\t\tconst canvas = this.state.canvasRef.current\n\t\tif (!canvas)\n\t\t\treturn\n\n\t\tcanvas.width = canvas.clientWidth\n\t\tcanvas.height = canvas.clientHeight\n\n\t\tif (this.matterRender) {\n\t\t\tthis.matterRender.bounds = {\n\t\t\t\tmin: {\n\t\t\t\t\tx: -canvas.width / 2,\n\t\t\t\t\ty: -canvas.height  / 2\n\t\t\t\t},\n\t\t\t\tmax: {\n\t\t\t\t\tx: canvas.width / 2,\n\t\t\t\t\ty: canvas.height / 2\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.matterRender.options.width = canvas.width\n\t\t\tthis.matterRender.options.height = canvas.height\n\t\t}\n\t}\n\n\tspawnRandomObjects = (count: number) => {\n\t\tif (!this.matterRender || !this.matterWorld)\n\t\t\treturn\n\n\t\tlet bodies = []\n\t\tfor (let i = 0; i < count; ++i) {\n\t\t\tconst x = random(this.matterRender.bounds.min.x, this.matterRender.bounds.max.x, true)\n\t\t\tconst y = random(this.matterRender.bounds.min.y, this.matterRender.bounds.max.y, true)\n\t\t\tbodies.push(Matter.Bodies.circle(x, y, 10, { restitution: 0.5 }))\n\t\t}\n\n\t\tMatter.World.add(this.matterWorld, bodies)\n\t}\n\n\tclearAllObjects = () => {\n\t\tif (!this.matterMouseConstraint || !this.matterWorld)\n\t\t\treturn\n\n\t\t// Remove the bodies\n\t\tMatter.World.clear(this.matterWorld, false)\n\n\t\t// Re-add mouse constraint\n\t\tMatter.World.add(this.matterWorld, this.matterMouseConstraint)\n\t}\n\n\tshowAllObjects = () => {\n\t\tif (!this.matterWorld)\n\t\t\treturn\n\n\t\tif (this.matterWorld.bodies.length > 0)\n\t\t\tPhysicsRenderer.lookAt(this.matterRender, this.matterWorld.bodies, {x: 50, y: 50}, true)\n\t}\n\n\tresetView = () => {\n\t\tif (!this.state.canvasRef.current || !this.matterRender)\n\t\t\treturn\n\n\t\tconst canvas = this.state.canvasRef.current\n\t\tconst render = this.matterRender\n\n\t\tlet halfExtent = {x: canvas.width / 2, y: canvas.height / 2} as Matter.Vector\n\t\trender.bounds.min = Matter.Vector.neg(halfExtent)\n\t\trender.bounds.max = halfExtent\n\t}\n\n\t// Convert a position in world space to canvas space\n\tworldToCanvas = (position: Vector2D) => {\n\t\tif (!this.matterRender)\n\t\t\treturn {x: 0, y: 0} as Vector2D\n\n\t\tconst render = this.matterRender\n\t\tconst scale = render.canvas.width / (render.bounds.max.x - render.bounds.min.x)\n\t\treturn Matter.Vector.mult(Matter.Vector.sub(position, render.bounds.min), scale)\n\t}\n\n\tboundaryUnderMouse = (): Boundary | undefined => {\n\t\tif (!this.matterMouse)\n\t\t\treturn undefined\n\n\t\tconst mouse = this.matterMouse\n\t\treturn this.props.boundaries.find(b => { return pointInBounds(mouse.position, b.bounds) })\n\t}\n\n\tboundariesNearMouse = (): Array<Boundary> => {\n\t\tif (!this.matterMouse)\n\t\t\treturn []\n\n\t\tconst mouse = this.matterMouse\n\t\treturn this.props.boundaries.filter(b => {\n\t\t\treturn circleOverlapBounds(mouse.position, MOUSE_BOUNDS_THRESHOLD / 2, b.bounds)\n\t\t})\n\t}\n\n\tbodyAtPosition = (position: Vector2D) => {\n\t\tif (!this.matterWorld)\n\t\t\treturn\n\n\t\tconst allBodies = Matter.Composite.allBodies(this.matterWorld)\n\t\tconst bodies = Matter.Query.point(allBodies, position)\n\t\treturn bodies[0]\n\t}\n\n\t// Get position of mouse in canvas or world space (snapped to grid if necessary)\n\tgetMousePos = (canvas = false, forceUnsnapped = false) => {\n\t\tif (!this.matterMouse)\n\t\t\treturn {x: 0, y: 0} as Vector2D\n\n\t\tconst gridSize = this.props.gridSize\n\t\tconst mousePos = Object.assign({}, this.matterMouse.position) as Vector2D\n\n\t\tif (!forceUnsnapped && this.props.snapToGrid) {\n\t\t\tmousePos.x = Math.round(mousePos.x / gridSize) * gridSize\n\t\t\tmousePos.y = Math.round(mousePos.y / gridSize) * gridSize\n\t\t}\n\n\t\treturn canvas ? this.worldToCanvas(mousePos) : mousePos\n\t}\n\n\tgetCanvasCursorStyle = () => {\n\t\tif (this.props.mouseMode === MouseMode.BOUNDARY_EDIT) {\n\t\t\tconst bUnder = this.boundaryUnderMouse()\n\t\t\tconst bNear = this.boundariesNearMouse()\n\t\t\tconst resizeMode = this.checkResizeMode(bUnder, bNear)\n\t\n\t\t\tswitch (resizeMode) {\n\t\t\t\t// Single boundary\n\t\t\t\tcase ResizeMode.TOP_LEFT_CORNER: \t\treturn 'nw-resize'\n\t\t\t\tcase ResizeMode.TOP_RIGHT_CORNER:\t\treturn 'ne-resize'\n\t\t\t\tcase ResizeMode.BOTTOM_RIGHT_CORNER:\treturn 'se-resize'\n\t\t\t\tcase ResizeMode.BOTTOM_LEFT_CORNER:\t\treturn 'sw-resize'\n\t\t\t\tcase ResizeMode.LEFT_EDGE: \t\t\t\treturn 'w-resize'\n\t\t\t\tcase ResizeMode.RIGHT_EDGE:\t\t\t\treturn 'e-resize'\n\t\t\t\tcase ResizeMode.TOP_EDGE:\t\t\t\treturn 'n-resize'\n\t\t\t\tcase ResizeMode.BOTTOM_EDGE:\t\t\treturn 's-resize'\n\t\n\t\t\t\t// Multi boundary\n\t\t\t\tcase ResizeMode.CROSS_SPLIT:\t\t\treturn 'move'\n\t\t\t\tcase ResizeMode.HORIZONTAL_SPLIT:\t\treturn 'ns-resize'\n\t\t\t\tcase ResizeMode.VERTICAL_SPLIT:\t\t\treturn 'ew-resize'\n\t\t\t}\n\t\n\t\t\tif (bUnder && this.state.clickedBoundary)\n\t\t\t\treturn 'grabbing'\n\t\t\tif (bUnder)\n\t\t\t\treturn 'grab'\n\t\t}\n\n\t\treturn 'crosshair'\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<PhysicsCanvas\n\t\t\t\tcursor={this.getCanvasCursorStyle()}\n\t\t\t\tref={this.state.canvasRef}\n\t\t\t\tonMouseDown={this.onMouseDown}\n\t\t\t\tonMouseUp={this.onMouseUp}\n\t\t\t\tonMouseMove={this.onMouseMove}\n\t\t\t\tonMouseOver={this.onMouseOver}\n\t\t\t\tonMouseOut={this.onMouseOut}\n\t\t\t\tonWheel={this.onWheel}\n\t\t\t/>\n\t\t)\n\t}\n}\n","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport Button from 'react-bootstrap/Button'\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\n\nimport { MouseMode } from './PhysicsSim'\n\ninterface PhysicsToolbarProps {\n\tmouseMode: MouseMode,\n\tsnapToGrid: boolean,\n\n\tonMouseModeChanged: MouseModeChangedCallback,\n\n\tonHomeClicked: HomeClickedCallback,\n\tonShowAllObjectsClicked: ShowAllObjectsClickedCallback,\n\tonRandomClicked: RandomClickedCallback,\n\tonClearClicked: ClearClickedCallback,\n\n\tonSnapToGridChanged: SnapToGridChangedCallback,\n\tonIncreaseGridSizeClicked: IncreadGridSizeClickedCallback,\n\tonDecreaseGridSizeClicked: IncreadGridSizeClickedCallback\n}\n\nfunction PhysicsToolbar(props: PhysicsToolbarProps) {\n\treturn (\n\t\t<ButtonToolbar>\n\t\t\t<ButtonGroup className=\"mr-2\">\n\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Object mode\" active={props.mouseMode === MouseMode.OBJECT} onClick={() => { props.onMouseModeChanged(MouseMode.OBJECT) }}>\n\t\t\t\t\t<FontAwesomeIcon icon=\"cube\"></FontAwesomeIcon>\n\t\t\t\t</Button>\n\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Boundary mode\" active={props.mouseMode === MouseMode.BOUNDARY_EDIT} onClick={() => { props.onMouseModeChanged(MouseMode.BOUNDARY_EDIT) }}>\n\t\t\t\t\t<FontAwesomeIcon icon=\"vector-square\"></FontAwesomeIcon>\n\t\t\t\t</Button>\n\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Snooker mode\" active={props.mouseMode === MouseMode.SNOOKER} onClick={() => { props.onMouseModeChanged(MouseMode.SNOOKER)  }}>\n\t\t\t\t\t<FontAwesomeIcon icon=\"bowling-ball\"></FontAwesomeIcon>\n\t\t\t\t</Button>\n\t\t\t</ButtonGroup>\n\t\t\t<ButtonGroup className=\"mr-2\">\n\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Reset view\" onClick={props.onHomeClicked}><FontAwesomeIcon icon=\"home\"></FontAwesomeIcon></Button>\n\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Show all objects\" onClick={props.onShowAllObjectsClicked}><FontAwesomeIcon icon=\"eye\"></FontAwesomeIcon></Button>\n\t\t\t</ButtonGroup>\n\t\t\t<ButtonGroup className=\"mr-2\">\n\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Toggle snap to grid\" active={props.snapToGrid} onClick={() => { props.onSnapToGridChanged(!props.snapToGrid) }}>\n\t\t\t\t\t<FontAwesomeIcon icon=\"magnet\"></FontAwesomeIcon>\n\t\t\t\t</Button>\n\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Decrease grid size\" onClick={ props.onDecreaseGridSizeClicked }>\n\t\t\t\t\t<FontAwesomeIcon icon=\"th\"></FontAwesomeIcon>\n\t\t\t\t</Button>\n\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Increase grid size\" onClick={ props.onIncreaseGridSizeClicked }>\n\t\t\t\t\t<FontAwesomeIcon icon=\"th-large\"></FontAwesomeIcon>\n\t\t\t\t</Button>\n\t\t\t</ButtonGroup>\n\t\t\t<ButtonGroup className=\"mr-2\">\n\t\t\t\t<Button size=\"sm\" variant=\"secondary\" title=\"Spawn random objects\" onClick={props.onRandomClicked}><FontAwesomeIcon icon=\"dice\"></FontAwesomeIcon></Button>\n\t\t\t\t<Button size=\"sm\" variant=\"warning\" title=\"Remove all objects\" onClick={props.onClearClicked}><FontAwesomeIcon icon=\"radiation\"></FontAwesomeIcon></Button>\n\t\t\t</ButtonGroup>\n\t\t</ButtonToolbar>\n\t)\n}\n\nexport default PhysicsToolbar\n","///<reference path=\"./types/types.d.ts\" />\n\nimport { cloneDeep } from 'lodash'\n\nimport evaluatex from 'evaluatex/dist/evaluatex'\nimport { saveAs } from 'file-saver'\nimport { get, set } from 'local-storage'\nimport Matter from 'matter-js'\nimport * as React from 'react'\nimport * as ReactColor from 'react-color'\n\nimport { boundsOverlap, pointInBounds, pointNearBounds } from './Utility'\nimport { constants } from './components/Variables'\nimport ControlPanel from './components/ControlPanel'\nimport FunctionPlot from './components/FunctionPlot'\n\nimport Header from './components/Header'\nimport ImportModal from './components/ImportModal'\nimport PhysicsSim, { MouseMode } from './components/PhysicsSim'\nimport PhysicsToolbar from './components/PhysicsToolbar'\n\nimport { ControlsContainer, ColumnFlexContainer, RowFlexContainer, FillParentFlexItem } from './Layout'\nimport { createExportFilename } from './Utility'\n\nconst colors = [\n\t'#e6194b',\n\t'#3cb44b',\n\t'#4363d8',\n\t'#f58231',\n\t'#911eb4',\n\t'#46f0f0',\n\t'#f032e6',\n\t'#bcf60c',\n\t'#fabebe',\n\t'#008080',\n\t'#e6beff',\n\t'#9a6324',\n\t'#fffac8',\n\t'#800000',\n\t'#aaffc3',\n\t'#808000',\n\t'#ffd8b1',\n\t'#000075',\n\t'#808080',\n\t'#ffe119',\n\t'#ffffff',\n\t'#000000'\n]\n\nconst A_VERY_BIG_NUMBER = 100000\n\ninterface AppState {\n\t// UI\n\tshowColorPicker: boolean,\n\tshowImportModal: boolean,\n\tcolorIndex?: number,\n\tlastBoundaryMoveTime: number,\n\tmouseMode: MouseMode,\n\tgridSize: number,\n\tsnapToGrid: boolean,\n\n\t// Simulation\n\tboundaries: Array<Boundary>,\n\tutilFunctions: Array<SubUtilityFunction>,\n\tutilConstants: UtilityVariables,\n\tutilGlobalVars: UtilityVariables,\n\tutilServer: UtilityFunction\n}\n\nexport default class App extends React.Component<{}, AppState> {\n\tphysicsSimRef: React.RefObject<PhysicsSim>\n\tlastFrameTime: number\n\tframeTimeHistory: Array<number>\n\n\tconstructor(props: {}) {\n\t\tsuper(props)\n\n\t\tconst defaultConstantValues: UtilityVariables = {}\n\t\tObject.keys(constants).forEach((key) => defaultConstantValues[key] = constants[key].defaultValue as number)\n\n\t\tthis.physicsSimRef = React.createRef()\n\t\tthis.lastFrameTime = 0\n\t\tthis.frameTimeHistory = new Array(10)\n\n\t\tconst localStorageState = get<AppState>('utilSim')\n\t\tif (localStorageState) {\n\t\t\tconsole.log('Loading settings from local storage')\n\t\t\tthis.state = localStorageState\n\t\t\treturn\n\t\t}\n\n\t\tconsole.log('Using default settings')\n\t\tthis.state = {\n\t\t\tshowColorPicker: false,\n\t\t\tshowImportModal: false,\n\t\t\tcolorIndex: 0,\n\t\t\tlastBoundaryMoveTime: window.performance.now(),\n\n\t\t\tmouseMode: MouseMode.OBJECT,\n\t\t\tgridSize: 50,\n\t\t\tsnapToGrid: false,\n\n\t\t\tboundaries: [\n\t\t\t\t{\n\t\t\t\t\tbounds: { min: {x: 0, y: -A_VERY_BIG_NUMBER}, max: {x: A_VERY_BIG_NUMBER, y: 0} },\n\t\t\t\t\tcolor: colors[0],\n\t\t\t\t\tvars: {}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbounds: { min: {x: 0, y: 0}, max: {x: A_VERY_BIG_NUMBER, y: A_VERY_BIG_NUMBER} },\n\t\t\t\t\tcolor: colors[1],\n\t\t\t\t\tvars: {}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbounds: { min: {x: -A_VERY_BIG_NUMBER, y: -0}, max: {x: 0, y: A_VERY_BIG_NUMBER} },\n\t\t\t\t\tcolor: colors[2],\n\t\t\t\t\tvars: {}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbounds: { min: {x: -A_VERY_BIG_NUMBER, y: -A_VERY_BIG_NUMBER}, max: {x: 0, y: 0} },\n\t\t\t\t\tcolor: colors[3],\n\t\t\t\t\tvars: {}\n\t\t\t\t}\n\t\t\t],\n\n\t\t\tutilFunctions: [\n\t\t\t\t{\n\t\t\t\t\texpression: \"e^(-10alpha)\",\n\t\t\t\t\tutilVar: \"alpha\",\n\t\t\t\t\tcolor: colors[5]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\texpression: \"e^(-5beta)\",\n\t\t\t\t\tutilVar: \"beta\",\n\t\t\t\t\tcolor: colors[6]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\texpression: \"min(max(0, -log(delta, 1000/60)), 1)\",\n\t\t\t\t\tutilVar: \"delta\",\n\t\t\t\t\tcolor: colors[7]\n\t\t\t\t}\n\t\t\t],\n\t\t\tutilConstants: defaultConstantValues,\n\t\t\tutilGlobalVars: {},\n\t\t\tutilServer: {\n\t\t\t\texpression: \"U_alpha + U_beta + U_delta\"\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount = () => {\n\t\t// Try to compile the functions\n\t\tthis.state.utilFunctions.forEach((func, i) => this.onUtilFunctionUpdated(i, func.expression))\n\t\tthis.onServerUtilFunctionUpdated(this.state.utilServer.expression)\n\t}\n\n\tonEngineBeforeUpdate = (event: Matter.IEventTimestamped<Matter.Engine>) => {\n\t\tthis.lastFrameTime = window.performance.now()\n\t}\n\n\tonEngineAfterUpdate = (event: Matter.IEventTimestamped<Matter.Engine>) => {\n\t\t// Update timing metrics\n\t\tconst now = window.performance.now()\n\t\tconst delta = (now - this.lastFrameTime)\n\t\tthis.frameTimeHistory.push(delta)\n\t\tthis.frameTimeHistory.shift()\n\t\tconst avgFrameTime = this.frameTimeHistory.reduce((a, b) => a + b) / this.frameTimeHistory.length\n\n\t\tconst boundaries = this.state.boundaries.slice()\n\t\tconst allBodies = Matter.Composite.allBodies(event.source.world)\n\t\tconst totalObjects = allBodies.length\n\n\t\t// Update boundary-local vars\n\t\tboundaries.forEach(b => {\n\t\t\tvar numObjects = 0\n\t\t\tvar numNearBoundary = 0\n\t\t\tvar numActive = 0\n\n\t\t\tvar i = 0\n\t\t\twhile (i < allBodies.length) {\n\t\t\t\tconst body = allBodies[i]\n\t\t\t\tif (!pointInBounds(body.position, b.bounds, true)) {\n\t\t\t\t\t++i\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\t// Update counters\n\t\t\t\t++numObjects\n\n\t\t\t\t// Is it active?\n\t\t\t\tif (!body.isSleeping)\n\t\t\t\t\t++numActive\n\n\t\t\t\t// Is the object near any of the boundary edges?\n\t\t\t\tif (pointNearBounds(body.position, body.circleRadius as number, b.bounds))\n\t\t\t\t\t++numNearBoundary\n\n\t\t\t\t// Make object same colour as boundary that contains it\n\t\t\t\tbody.render.fillStyle = b.color\n\n\t\t\t\t// Remove from 'all objects array'\n\t\t\t\tallBodies.splice(i, 1)\n\t\t\t}\n\n\t\t\t// Fake CPU usage (we can't get real CPU usage in JS)\n\t\t\tb.vars.lambda = (numObjects ? Math.min(1.0, numActive / totalObjects) : 0) + Math.random() * 0.1\n\t\t\tb.vars.delta = avgFrameTime\n\t\t\tb.vars.alpha = numObjects ? numActive / numObjects : 0\n\t\t\tb.vars.beta = numObjects ? numNearBoundary / numObjects : 0\n\t\t\tb.vars.n = numObjects\n\t\t})\n\n\t\t// Color remaining bodies (not in any boundary, which is something that should never happen) black\n\t\tallBodies.forEach(b => b.render.fillStyle = 'black')\n\n\t\t// Update global vars\n\t\tconst timeSinceBoundaryMoved = (now - this.state.lastBoundaryMoveTime) / 1000\n\t\tconst utilGlobalVars = {\n\t\t\tsigma: boundaries.length,\n\t\t\tt: timeSinceBoundaryMoved,\n\t\t\tN: totalObjects\n\t\t}\n\n\t\tthis.setState({ boundaries, utilGlobalVars })\n\t}\n\n\t// Validate the bounds\n\tvalidateResize = (resizeInfo: Array<BoundaryResizeInfo>) => {\n\t\t// Get the boundaries not being updated\n\t\tvar notBeingUpdated: Bounds[] = []\n\t\tthis.state.boundaries.forEach(b => {\n\t\t\tif (!resizeInfo.some(r => r.boundary === b))\n\t\t\t\tnotBeingUpdated.push(b.bounds)\n\t\t})\n\n\t\treturn resizeInfo.every(info => {\n\t\t\tconst bounds = info.newBounds\n\n\t\t// Reject min == max\n\t\tif (bounds.min.x === bounds.max.x || bounds.min.y === bounds.max.y)\n\t\t\treturn false\n\n\t\t\t// Combine check list with boundaries being updated\n\t\t\tconst checkList = [...notBeingUpdated]\n\t\t\tresizeInfo.forEach(r => (r !== info) && checkList.push(r.newBounds))\n\n\t\t\t// Reject overlapping boundaries\n\t\t\treturn !checkList.some(b => boundsOverlap(bounds, b))\n\t\t})\n\t}\n\n\tvalidateBoundary = (bounds: Bounds, boundaryToIgnore?: Boundary) => {\n\t\t// Reject min == max\n\t\tif (bounds.min.x === bounds.max.x || bounds.min.y === bounds.max.y)\n\t\t\treturn false\n\n\t\t// Reject overlapping boundaries\n\t\treturn this.state.boundaries.every(boundary => {\n\t\t\t// Prevent comparison against self\n\t\t\tif (boundary === boundaryToIgnore)\n\t\t\t\treturn true\n\n\t\t\t// Check it doesn't overlap\n\t\t\treturn !boundsOverlap(bounds, boundary.bounds)\n\t\t})\n\t}\n\n\tonBoundaryAdded = (bounds: Bounds) => {\n\t\tif (!this.validateBoundary(bounds))\n\t\t\treturn\n\n\t\tvar boundaries = this.state.boundaries.slice()\n\t\tboundaries.push({\n\t\t\tbounds: bounds,\n\t\t\tcolor: colors[boundaries.length % colors.length],\n\t\t\tvars: {}\n\t\t})\n\t\tthis.setState({ boundaries, lastBoundaryMoveTime: window.performance.now() })\n\t}\n\n\tonBoundaryDeleted = (boundary: Boundary) => {\n\t\tconst index = this.state.boundaries.findIndex(b => b === boundary)\n\t\tif (index === -1)\n\t\t\treturn\n\n\t\tvar boundaries = this.state.boundaries.slice()\n\t\tboundaries.splice(index, 1)\n\t\tthis.setState({ boundaries, lastBoundaryMoveTime: window.performance.now() })\n\t}\n\n\tonBoundariesUpdated = (resizeInfo: Array<BoundaryResizeInfo>, validate: boolean = true) => {\n\t\tif (validate && !this.validateResize(resizeInfo))\n\t\t\treturn\n\n\t\tconst boundaries = this.state.boundaries.slice()\n\t\tresizeInfo.forEach(info => {\n\t\t\t// Find the right boundary object to to update\n\t\t\tfor (let i = 0; i < boundaries.length; ++i) {\n\t\t\t\tif (info.boundary !== boundaries[i])\n\t\t\t\t\tcontinue\n\n\t\t\t\tconst oldBounds = boundaries[i].bounds\n\t\t\t\toldBounds.min.x = info.newBounds.min.x\n\t\t\t\toldBounds.min.y = info.newBounds.min.y\n\t\t\t\toldBounds.max.x = info.newBounds.max.x\n\t\t\t\toldBounds.max.y = info.newBounds.max.y\n\t\t\t\tbreak\n\t\t\t}\n\t\t})\n\n\t\tthis.setState({\n\t\t\tboundaries,\n\t\t\tlastBoundaryMoveTime: window.performance.now()\n\t\t})\n\t}\n\n\tonUtilFunctionUpdated = (index: number, value: string) => {\n\t\tconst utilFunctions = this.state.utilFunctions.slice()\n\t\tutilFunctions[index].expression = value\n\n\t\t// Try to compile the function\n\t\ttry {\n\t\t\tutilFunctions[index].evalFunc = evaluatex(value, { e: Math.E, pi: Math.PI })\n\t\t} catch {\n\t\t\tutilFunctions[index].evalFunc = null\n\t\t}\n\n\t\tthis.setState({ utilFunctions })\n\t}\n\n\tonServerUtilFunctionUpdated = (value: string) => {\n\t\tconst utilServer = cloneDeep(this.state.utilServer)\n\t\tutilServer.expression = value\n\n\t\t// Try to compile the function\n\t\ttry {\n\t\t\tutilServer.evalFunc = evaluatex(value, { e: Math.E, pi: Math.PI })\n\t\t} catch {\n\t\t\tutilServer.evalFunc = undefined\n\t\t}\n\n\t\tthis.setState({ utilServer })\n\t}\n\n\tonUtilConstantUpdated = (key: string, value: number) => {\n\t\tconst utilConstants = cloneDeep(this.state.utilConstants)\n\t\tutilConstants[key] = value\n\t\tthis.setState({ utilConstants })\n\t}\n\n\tonUtilVarUpdated = (index: number, value: string) => {\n\t\tlet utilFunctions = this.state.utilFunctions.slice()\n\t\tutilFunctions[index].utilVar = value\n\t\tthis.setState({ utilFunctions })\n\t}\n\n\tonUtilFunctionAdded = () => {\n\t\tlet utilFunctions = this.state.utilFunctions.slice()\n\t\tutilFunctions.push({\n\t\t\texpression: \"\",\n\t\t\tutilVar: \"x\",\n\t\t\tcolor: colors[utilFunctions.length % colors.length]\n\t\t})\n\t\tthis.setState({ utilFunctions })\n\t}\n\n\tonUtilFunctionDeleted = (index: number) => {\n\t\tlet utilFunctions = this.state.utilFunctions.slice()\n\t\tutilFunctions.splice(index, 1)\n\t\tthis.setState({ utilFunctions })\n\t}\n\n\tonChangeColorClicked = (index?: number) => {\n\t\tthis.setState({\n\t\t\tshowColorPicker: !this.state.showColorPicker,\n\t\t\tcolorIndex: !this.state.showColorPicker ? index : undefined\n\t\t})\n\t}\n\n\tonColorUpdated = (color: ReactColor.ColorResult) => {\n\t\tlet utilFunctions = this.state.utilFunctions.slice()\n\t\tutilFunctions[this.state.colorIndex as number].color = color.hex\n\t\tthis.setState({ utilFunctions })\n\t}\n\n\tonRandomClicked = () => {\n\t\tif (!this.physicsSimRef.current)\n\t\t\treturn;\n\t\tthis.physicsSimRef.current.spawnRandomObjects(100)\n\t}\n\n\tonClearClicked = () => {\n\t\tif (!this.physicsSimRef.current)\n\t\t\treturn;\n\t\tthis.physicsSimRef.current.clearAllObjects()\n\t}\n\n\tonHomeClicked = () => {\n\t\tif (!this.physicsSimRef.current)\n\t\t\treturn;\n\t\tthis.physicsSimRef.current.resetView()\n\t}\n\n\tonShowAllObjectsClicked = () => {\n\t\tif (!this.physicsSimRef.current)\n\t\t\treturn;\n\t\tthis.physicsSimRef.current.showAllObjects()\n\t}\n\n\tonImportClicked = () => {\n\t\tthis.setState({ showImportModal: true })\n\t}\n\n\tonImportModalClosed = () => {\n\t\tthis.setState({ showImportModal: false })\n\t}\n\n\tonExportClicked = () => {\n\t\tlet saveObj: ExportData = {\n\t\t\tsimState: {\n\t\t\t\tboundaries: this.state.boundaries,\n\t\t\t\tutilFunctions: this.state.utilFunctions,\n\t\t\t\tutilConstants: this.state.utilConstants,\n\t\t\t\tutilGlobalVars: this.state.utilGlobalVars,\n\t\t\t\tutilServer: this.state.utilServer\n\t\t\t}\n\t\t}\n\n\t\tif (this.physicsSimRef.current && this.physicsSimRef.current.matterWorld) {\n\t\t\tconst matterWorld = this.physicsSimRef.current.matterWorld\n\t\t\tconst allBodies = Matter.Composite.allBodies(matterWorld)\n\n\t\t\t// TODO: Make this object typed\n\t\t\tconst bodies: Array<ExportBody> = allBodies.map(body => { \n\t\t\t\tlet bodyData: ExportBody = {\n\t\t\t\t\tinverseMass: body.inverseMass,\n\t\t\t\t\tmass: body.mass,\n\t\t\t\t\tposition: body.position,\n\t\t\t\t\tspeed: body.speed,\n\t\t\t\t\tvelocity: body.velocity,\n\t\t\t\t}\n\n\t\t\t\t// Export only radius if object is a circle\n\t\t\t\tif (body.circleRadius)\n\t\t\t\t\tbodyData.circleRadius = body.circleRadius\n\t\t\t\t// Otherwise export all vertices\n\t\t\t\telse\n\t\t\t\t\tbodyData.vertices = body.vertices.map(vertex => {\n\t\t\t\t\t\treturn Matter.Vector.create(vertex.x, vertex.y)\n\t\t\t\t\t})\n\n\t\t\t\treturn bodyData\n\t\t\t})\n\n\t\t\t//set('bodies', bodies)\n\t\t\tsaveObj.bodies = bodies\n\t\t}\n\n\t\t//set('utilSim', this.state)\n\t\tsaveAs(new Blob([JSON.stringify(saveObj)]), createExportFilename())\n\t}\n\n\tonFilesSelected = (fileList: FileList) => {\n\t\tconst file = fileList[0]\n\n\t\tlet reader = new FileReader()\n\t\treader.readAsBinaryString(file)\n\t\treader.onloadend = () => {\n\t\t\tconst newState = JSON.parse(reader.result as string) as ExportData\n\n\t\t\t// Load boundary/function state\n\t\t\tif (newState.simState)\n\t\t\t\tthis.setState(newState.simState)\n\n\t\t\t// Load bodies\n\t\t\tif (newState.bodies && this.physicsSimRef.current && this.physicsSimRef.current.matterWorld) {\n\t\t\t\tconst matterWorld = this.physicsSimRef.current.matterWorld\n\t\t\t\tnewState.bodies.forEach(bodyData => {\n\t\t\t\t\tlet body: Matter.Body\n\n\t\t\t\t\tif (bodyData.circleRadius)\n\t\t\t\t\t\tbody = Matter.Bodies.circle(bodyData.position.x, bodyData.position.y, bodyData.circleRadius, bodyData)\n\t\t\t\t\telse\n\t\t\t\t\t\tbody = Matter.Body.create(bodyData)\n\n\t\t\t\t\t// We need to do this so Matter intializes previousPosition so that\n\t\t\t\t\t// velocity is applied properly and the object resumes movement.\n\t\t\t\t\tMatter.Body.setVelocity(body, body.velocity)\n\n\t\t\t\t\tMatter.World.add(matterWorld, body)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\trender = () => {\n\t\treturn (\n\t\t\t<ColumnFlexContainer>\n\t\t\t\t<ImportModal\n\t\t\t\t\tshow={ this.state.showImportModal }\n\t\t\t\t\tonFilesSelected={ this.onFilesSelected }\n\t\t\t\t\tonHide={ this.onImportModalClosed }\n\t\t\t\t\tonClosed={ this.onImportModalClosed }\n\t\t\t\t/>\n\t\t\n\t\t\t\t<Header\n\t\t\t\t\tonImportClickedCallback={ this.onImportClicked }\n\t\t\t\t\tonExportClickedCallback={ this.onExportClicked }\n\t\t\t\t/>\n\n\t\t\t\t<RowFlexContainer>\n\t\t\t\t\t<FillParentFlexItem>\n\t\t\t\t\t\t<ControlsContainer>\n\t\t\t\t\t\t\t<PhysicsToolbar\n\t\t\t\t\t\t\t\tmouseMode={this.state.mouseMode}\n\t\t\t\t\t\t\t\tsnapToGrid={this.state.snapToGrid}\n\t\t\t\t\t\t\t\tonMouseModeChanged={(mouseMode) => { this.setState({mouseMode}) }}\n\t\t\t\t\t\t\t\tonHomeClicked={this.onHomeClicked}\n\t\t\t\t\t\t\t\tonShowAllObjectsClicked={this.onShowAllObjectsClicked}\n\t\t\t\t\t\t\t\tonRandomClicked={this.onRandomClicked}\n\t\t\t\t\t\t\t\tonClearClicked={this.onClearClicked}\n\t\t\t\t\t\t\t\tonSnapToGridChanged={(snapToGrid) => { this.setState({snapToGrid}) }}\n\t\t\t\t\t\t\t\tonIncreaseGridSizeClicked={() => { this.setState({gridSize: this.state.gridSize * 2}) }}\n\t\t\t\t\t\t\t\tonDecreaseGridSizeClicked={() => { this.setState({gridSize: Math.max(25, this.state.gridSize / 2)}) }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ControlsContainer>\n\t\t\t\t\t\t<PhysicsSim\n\t\t\t\t\t\t\tref={this.physicsSimRef}\n\t\t\t\t\t\t\tboundaries={this.state.boundaries}\n\n\t\t\t\t\t\t\t// State\n\t\t\t\t\t\t\tgridSize={this.state.gridSize}\n\t\t\t\t\t\t\tmouseMode={this.state.mouseMode}\n\t\t\t\t\t\t\tsnapToGrid={this.state.snapToGrid}\n\n\t\t\t\t\t\t\t// Callbacks\n\t\t\t\t\t\t\tonBoundaryAdded={this.onBoundaryAdded}\n\t\t\t\t\t\t\tonBoundariesUpdated={this.onBoundariesUpdated}\n\t\t\t\t\t\t\tonBoundaryDeleted={this.onBoundaryDeleted}\n\n\t\t\t\t\t\t\tonEngineBeforeUpdate={this.onEngineBeforeUpdate}\n\t\t\t\t\t\t\tonEngineAfterUpdate={this.onEngineAfterUpdate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FillParentFlexItem>\n\t\t\t\t\t<FillParentFlexItem>\n\t\t\t\t\t\t<FunctionPlot\n\t\t\t\t\t\t\tboundaries={this.state.boundaries}\n\t\t\t\t\t\t\tutilFunctions={this.state.utilFunctions}\n\t\t\t\t\t\t\tutilConstants={this.state.utilConstants}\n\t\t\t\t\t\t\tutilGlobalVars={this.state.utilGlobalVars}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FillParentFlexItem>\n\t\t\t\t\t<ControlPanel\n\t\t\t\t\t\t// Physics state\n\t\t\t\t\t\tboundaries={this.state.boundaries}\n\n\t\t\t\t\t\t// Utility state\n\t\t\t\t\t\tutilFunctions={this.state.utilFunctions}\n\t\t\t\t\t\tutilConstants={this.state.utilConstants}\n\t\t\t\t\t\tutilGlobalVars={this.state.utilGlobalVars}\n\t\t\t\t\t\tutilServer={this.state.utilServer}\n\n\t\t\t\t\t\t// Control panel callbacks\n\t\t\t\t\t\tonUtilFunctionUpdated={this.onUtilFunctionUpdated}\n\t\t\t\t\t\tonUtilFunctionAdded={this.onUtilFunctionAdded}\n\t\t\t\t\t\tonUtilFunctionDeleted={this.onUtilFunctionDeleted}\n\t\t\t\t\t\tonServerUtilFunctionUpdated={this.onServerUtilFunctionUpdated}\n\t\t\t\t\t\tonUtilConstantUpdated={this.onUtilConstantUpdated}\n\t\t\t\t\t\tonUtilVarUpdated={this.onUtilVarUpdated}\n\t\t\t\t\t\tonChangeColorClicked={this.onChangeColorClicked}\n\t\t\t\t\t\tonColorUpdated={this.onColorUpdated}\n\t\t\t\t\t\tshowColorPicker={this.state.showColorPicker}\n\t\t\t\t\t\tcolorIndex={this.state.colorIndex}\n\t\t\t\t\t/>\n\t\t\t\t</RowFlexContainer>\n\t\t\t</ColumnFlexContainer>\n\t\t)\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\t(process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n\t\t\twindow.location.href\n\t\t);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom';\n\nimport MathJax from 'react-mathjax2';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\n\n// Build Font Awesome library\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n\tfaBorderAll,\n\tfaBowlingBall,\n\tfaChartLine,\n\tfaCube,\n\tfaDice,\n\tfaEye,\n\tfaFileExport,\n\tfaFileImport,\n\tfaFolderOpen,\n\tfaHome,\n\tfaMagnet,\n\tfaPalette,\n\tfaPlus,\n\tfaRadiation,\n\tfaTh,\n\tfaThLarge,\n\tfaTrash,\n\tfaVectorSquare\n} from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(\n\tfaBorderAll,\n\tfaBowlingBall,\n\tfaChartLine,\n\tfaCube,\n\tfaDice,\n\tfaEye,\n\tfaFileExport,\n\tfaFileImport,\n\tfaFolderOpen,\n\tfaHome,\n\tfaMagnet,\n\tfaPalette,\n\tfaPlus,\n\tfaRadiation,\n\tfaTh,\n\tfaThLarge,\n\tfaTrash,\n\tfaVectorSquare\n)\n\nconst MATHJAX_OPTIONS = {\n\tasciimath2jax: {\n\t\tuseMathMLspacing: true,\n\t\tpreview: \"none\",\n\t}\n}\n\nReactDOM.render(\n\t<MathJax.Context input=\"ascii\" options={ MATHJAX_OPTIONS }>\n\t\t<App />\n\t</MathJax.Context>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}